/*!
*  filename: ej2-data.umd.min.js.map
*  version : 1.0.19
*  Copyright Syncfusion Inc. 2001 - 2017. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"sources":["ej2-data.umd.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","manager_1","query_1","adaptors_1","util_1","__export","hasOwnProperty","Object","defineProperty","value","apply","ej2_base_1","ej2_base_2","DataManager","dataSource","query","adaptor","_this","dateParse","requests","data","Array","json","offline","url","insertUrl","removeUrl","updateUrl","crudUrl","batchUrl","headers","accept","timeTillExpiration","cachingPageSize","enableCaching","requestType","key","crossDomain","jsonp","dataType","RemoteSaveAdaptor","requiresFormat","DataUtil","throwError","isCors","isNullOrUndefined","defaultQuery","length","isDataAvailable","ODataAdaptor","ready","executeQuery","Query","then","e","result","JsonAdaptor","CacheAdaptor","prototype","setDefaultQuery","executeLocal","processQuery","subQuery","from","fromTable","lookup","lookups","res","requiresCounts","buildHierarchy","fKey","j","extend","processResponse","using","slice","done","fail","always","deffered","Deferred","args","nextTick","getDeferedArgs","resolve","makeRequest","promise","count","aggregates","fn","window","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","type","cache","processData","onSuccess","onFailure","isSelector","subQuerySelector","error","reject","process","xhr","request","actual","virtualSelectRecords","parseInt","toString","fnQueryChild","selector","subDeffer","childArgs","parent","isChild","subUrl","childReq","subData","httpRequest","getResponseHeader","indexOf","parse","parseJson","virtualRecords","req","ajax","Ajax","beforeSend","send","push","Promise","all","_i","arguments","pResult","cResult","settings","props","keys","keys_1","prop","setRequestHeader","saveChanges","changes","tableName","batchRequest","deff","insert","position","replacer","doAjaxRequest","remove","keyField","update","defer","contentType","record","dataManager","bind","catch","consts","GroupGuid","getValue","inst","endsWith","input","substr","startsWith","start","fnSort","order","toLowerCase","fnAscending","fnDescending","x","y","localeCompare","extractFields","obj","fields","newObj","getObject","replace","select","jsonArray","newData","group","field","level","groupDs","format","jsonData","this_1","items","indx","temp","filter","childLevels","grouped","groupedArray","records","this_2","val","getVal","tempObj","aggs","source","pKey","grp","fKeyData","getFieldList","prefix","copyObj","nameSpace","splits","split","sort","ds","comparer","middle","left","right","merge","fieldName","current","shift","array","index","callAdaptorFunction","fnName","param1","param2","fnOperators","isnull","isPlainObject","constructor","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","serverTimezoneOffset","Error","message","stack","sum","isNaN","average","min","max","truecount","where","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","expected","ignoreCase","notnull","processSymbols","operator","processOperator","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","dupValue","ms","exec","jsonReplacer","Date","isJson","isGuid","stringify","arrayReplacer","keys_3","d","unixstamp","getTimezoneOffset","toJSON","date","queries","expands","sortedColumns","groupedColumns","params","setKey","execute","clone","cloned","addParams","expand","tables","predicate","Predicate","search","searchKey","fieldNames","sortBy","isFromGroup","sorts","filterQueries","direction","sortByDesc","page","pageIndex","pageSize","range","end","take","nos","skip","hierarchy","selectorFn","foreignKey","requiresCount","aggregate","name","q","filterQueryLists","singles","filtered","isComplex","condition","predicates","and","combinePredicates","combine","or","fromJson","len","fromJSONData","pred","validate","isAnd","ret","toJson","preds","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","Adaptor","options","pvt","_super","countFlg","agg","dm","addedRecords","changedRecords","deletedRecords","onWhere","onAggregates","onSearch","onSortBy","fnCompare","onGroup","aggQuery","tmp","onPage","size","onRange","onTake","onSkip","onSelect","splice","UrlAdaptor","hierarchyFilters","getQueryRequest","groups","filters","searches","getFiltersFrom","getRequestQuery","reqParams","_a","pvtData","convertToQueryString","request1","action","getAggregateResult","changed","added","deleted","table","keyColumn","predicats","pData","aggregateData","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","onComplexPredicate","onEachWhere","join","onEachSearch","onEachSort","reverse","onCount","overrideMimeType","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","keys_4","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","cIdx","jsonObj","substring","exVal","changeGuid","ODataV4Adaptor","getModulename","isDate","WebApiAdaptor","Count","Items","WebMethodAdaptor","param","setValue","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","forEach","currentFilter","newQuery","cachedItems"],"mappings":"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","file":"ej2-data.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@syncfusion/ej2-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@syncfusion/ej2-base\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"@syncfusion/ej2-base\")) : factory(root[\"@syncfusion/ej2-base\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(1), __webpack_require__(4), __webpack_require__(5), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, manager_1, query_1, adaptors_1, util_1) {\n\t    \"use strict\";\n\t    function __export(m) {\n\t        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t    }\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    __export(manager_1);\n\t    __export(query_1);\n\t    __export(adaptors_1);\n\t    __export(util_1);\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, query_1, adaptors_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var DataManager = (function () {\n\t        function DataManager(dataSource, query, adaptor) {\n\t            var _this = this;\n\t            this.dateParse = true;\n\t            this.requests = [];\n\t            if (!dataSource && !this.dataSource) {\n\t                dataSource = [];\n\t            }\n\t            adaptor = adaptor || dataSource.adaptor;\n\t            var data;\n\t            if (dataSource instanceof Array) {\n\t                data = {\n\t                    json: dataSource,\n\t                    offline: true\n\t                };\n\t            }\n\t            else if (typeof dataSource === 'object') {\n\t                if (!dataSource.json) {\n\t                    dataSource.json = [];\n\t                }\n\t                data = {\n\t                    url: dataSource.url,\n\t                    insertUrl: dataSource.insertUrl,\n\t                    removeUrl: dataSource.removeUrl,\n\t                    updateUrl: dataSource.updateUrl,\n\t                    crudUrl: dataSource.crudUrl,\n\t                    batchUrl: dataSource.batchUrl,\n\t                    json: dataSource.json,\n\t                    headers: dataSource.headers,\n\t                    accept: dataSource.accept,\n\t                    data: dataSource.data,\n\t                    timeTillExpiration: dataSource.timeTillExpiration,\n\t                    cachingPageSize: dataSource.cachingPageSize,\n\t                    enableCaching: dataSource.enableCaching,\n\t                    requestType: dataSource.requestType,\n\t                    key: dataSource.key,\n\t                    crossDomain: dataSource.crossDomain,\n\t                    jsonp: dataSource.jsonp,\n\t                    dataType: dataSource.dataType,\n\t                    offline: dataSource.offline !== undefined ? dataSource.offline\n\t                        : dataSource.adaptor instanceof adaptors_1.RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n\t                    requiresFormat: dataSource.requiresFormat\n\t                };\n\t            }\n\t            else {\n\t                util_1.DataUtil.throwError('DataManager: Invalid arguments');\n\t            }\n\t            if (data.requiresFormat === undefined && !util_1.DataUtil.isCors()) {\n\t                data.requiresFormat = ej2_base_2.isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n\t            }\n\t            if (data.dataType === undefined) {\n\t                data.dataType = 'json';\n\t            }\n\t            this.dataSource = data;\n\t            this.defaultQuery = query;\n\t            if (data.url && data.offline && !data.json.length) {\n\t                this.isDataAvailable = false;\n\t                this.adaptor = adaptor || new adaptors_1.ODataAdaptor();\n\t                this.dataSource.offline = false;\n\t                this.ready = this.executeQuery(query || new query_1.Query());\n\t                this.ready.then(function (e) {\n\t                    _this.dataSource.offline = true;\n\t                    _this.isDataAvailable = true;\n\t                    data.json = e.result;\n\t                    _this.adaptor = new adaptors_1.JsonAdaptor();\n\t                });\n\t            }\n\t            else {\n\t                this.adaptor = data.offline ? new adaptors_1.JsonAdaptor() : new adaptors_1.ODataAdaptor();\n\t            }\n\t            if (!data.jsonp && this.adaptor instanceof adaptors_1.ODataAdaptor) {\n\t                data.jsonp = 'callback';\n\t            }\n\t            this.adaptor = adaptor || this.adaptor;\n\t            if (data.enableCaching) {\n\t                this.adaptor = new adaptors_1.CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n\t            }\n\t            return this;\n\t        }\n\t        DataManager.prototype.setDefaultQuery = function (query) {\n\t            this.defaultQuery = query;\n\t            return this;\n\t        };\n\t        DataManager.prototype.executeLocal = function (query) {\n\t            if (!this.defaultQuery && !(query instanceof query_1.Query)) {\n\t                util_1.DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n\t            }\n\t            if (!this.dataSource.json) {\n\t                util_1.DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n\t            }\n\t            query = query || this.defaultQuery;\n\t            var result = this.adaptor.processQuery(this, query);\n\t            if (query.subQuery) {\n\t                var from = query.subQuery.fromTable;\n\t                var lookup = query.subQuery.lookups;\n\t                var res = query.requiresCounts ? result.result :\n\t                    result;\n\t                if (lookup && lookup instanceof Array) {\n\t                    util_1.DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n\t                }\n\t                for (var j = 0; j < res.length; j++) {\n\t                    if (res[j][from] instanceof Array) {\n\t                        res[j] = ej2_base_2.extend({}, {}, res[j]);\n\t                        res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n\t                    }\n\t                }\n\t            }\n\t            return this.adaptor.processResponse(result, this, query);\n\t        };\n\t        DataManager.prototype.executeQuery = function (query, done, fail, always) {\n\t            var _this = this;\n\t            if (typeof query === 'function') {\n\t                always = fail;\n\t                fail = done;\n\t                done = query;\n\t                query = null;\n\t            }\n\t            if (!query) {\n\t                query = this.defaultQuery;\n\t            }\n\t            if (!(query instanceof query_1.Query)) {\n\t                util_1.DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n\t            }\n\t            var deffered = new Deferred();\n\t            var args = { query: query };\n\t            if (!this.dataSource.offline && this.dataSource.url !== undefined) {\n\t                var result = this.adaptor.processQuery(this, query);\n\t                this.makeRequest(result, deffered, args, query);\n\t            }\n\t            else {\n\t                DataManager.nextTick(function () {\n\t                    var res = _this.executeLocal(query);\n\t                    args = DataManager.getDeferedArgs(query, res, args);\n\t                    deffered.resolve(args);\n\t                });\n\t            }\n\t            return deffered.promise;\n\t        };\n\t        DataManager.getDeferedArgs = function (query, result, args) {\n\t            if (query.requiresCounts) {\n\t                args.result = result.result;\n\t                args.count = result.count;\n\t                args.aggregates = result.aggregates;\n\t            }\n\t            else {\n\t                args.result = result;\n\t            }\n\t            return args;\n\t        };\n\t        DataManager.nextTick = function (fn) {\n\t            (window.setImmediate || window.setTimeout)(fn, 0);\n\t        };\n\t        DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n\t            return ej2_base_2.extend({}, {\n\t                type: 'GET',\n\t                dataType: this.dataSource.dataType,\n\t                crossDomain: this.dataSource.crossDomain,\n\t                jsonp: this.dataSource.jsonp,\n\t                cache: true,\n\t                processData: false,\n\t                onSuccess: fnSuccess,\n\t                onFailure: fnFail\n\t            }, url);\n\t        };\n\t        DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n\t            var _this = this;\n\t            var isSelector = !!query.subQuerySelector;\n\t            var fnFail = function (e) {\n\t                args.error = e;\n\t                deffered.reject(args);\n\t            };\n\t            var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n\t                args.xhr = xhr;\n\t                args.count = count ? parseInt(count.toString(), 10) : 0;\n\t                args.result = data;\n\t                args.request = request;\n\t                args.aggregates = aggregates;\n\t                args.actual = actual;\n\t                args.virtualSelectRecords = virtualSelectRecords;\n\t                deffered.resolve(args);\n\t            };\n\t            var fnQueryChild = function (data, selector) {\n\t                var subDeffer = new Deferred();\n\t                var childArgs = { parent: args };\n\t                query.subQuery.isChild = true;\n\t                var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n\t                var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n\t                if (!isSelector) {\n\t                    subDeffer.then(function (subData) {\n\t                        if (data) {\n\t                            util_1.DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n\t                            process(data, subData.count, subData.xhr);\n\t                        }\n\t                    }, fnFail);\n\t                }\n\t                return childReq;\n\t            };\n\t            var fnSuccess = function (data, request) {\n\t                if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n\t                    data = util_1.DataUtil.parse.parseJson(data);\n\t                }\n\t                var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n\t                var count = 0;\n\t                var aggregates = null;\n\t                var virtualSelectRecords = 'virtualSelectRecords';\n\t                var virtualRecords = data[virtualSelectRecords];\n\t                if (query.requiresCounts) {\n\t                    count = result.count;\n\t                    aggregates = result.aggregates;\n\t                    result = result.result;\n\t                }\n\t                if (!query.subQuery) {\n\t                    process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n\t                    return;\n\t                }\n\t                if (!isSelector) {\n\t                    fnQueryChild(result, request);\n\t                }\n\t            };\n\t            var req = this.extendRequest(url, fnSuccess, fnFail);\n\t            var ajax = new ej2_base_1.Ajax(req);\n\t            ajax.beforeSend = function () {\n\t                _this.beforeSend(ajax.httpRequest, ajax);\n\t            };\n\t            req = ajax.send();\n\t            this.requests.push(ajax);\n\t            if (isSelector) {\n\t                var promise = void 0;\n\t                var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n\t                if (res && res.length) {\n\t                    promise = Promise.all([req, fnQueryChild(null, res)]);\n\t                    promise.then(function () {\n\t                        var args = [];\n\t                        for (var _i = 0; _i < arguments.length; _i++) {\n\t                            args[_i] = arguments[_i];\n\t                        }\n\t                        var result = args[0];\n\t                        var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n\t                        var count = 0;\n\t                        if (query.requiresCounts) {\n\t                            count = pResult.count;\n\t                            pResult = pResult.result;\n\t                        }\n\t                        var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n\t                        count = 0;\n\t                        if (query.subQuery.requiresCounts) {\n\t                            count = cResult.count;\n\t                            cResult = cResult.result;\n\t                        }\n\t                        util_1.DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n\t                        isSelector = false;\n\t                        process(pResult, count, _this.requests[0].httpRequest);\n\t                    });\n\t                }\n\t                else {\n\t                    isSelector = false;\n\t                }\n\t            }\n\t            return req;\n\t        };\n\t        DataManager.prototype.beforeSend = function (request, settings) {\n\t            this.adaptor.beforeSend(this, request, settings);\n\t            var headers = this.dataSource.headers;\n\t            var props;\n\t            for (var i = 0; headers && i < headers.length; i++) {\n\t                props = [];\n\t                var keys = Object.keys(headers[i]);\n\t                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n\t                    var prop = keys_1[_i];\n\t                    props.push(prop);\n\t                    request.setRequestHeader(prop, headers[i][prop]);\n\t                }\n\t            }\n\t        };\n\t        DataManager.prototype.saveChanges = function (changes, key, tableName, query) {\n\t            var _this = this;\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var args = {\n\t                url: tableName,\n\t                key: key || this.dataSource.key\n\t            };\n\t            var req = this.adaptor.batchRequest(this, changes, args, query);\n\t            if (this.dataSource.offline) {\n\t                return req;\n\t            }\n\t            var deff = new Deferred();\n\t            var ajax = new ej2_base_1.Ajax(req);\n\t            ajax.beforeSend = function () {\n\t                _this.beforeSend(ajax.httpRequest, ajax);\n\t            };\n\t            ajax.onSuccess = function (data, request) {\n\t                deff.resolve(_this, [_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes)]);\n\t            };\n\t            ajax.onFailure = function (e) {\n\t                deff.reject([{ error: e }]);\n\t            };\n\t            ajax.send();\n\t            return deff.promise;\n\t        };\n\t        DataManager.prototype.insert = function (data, tableName, query, position) {\n\t            data = util_1.DataUtil.parse.replacer(data);\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var req = this.adaptor.insert(this, data, tableName, query, position);\n\t            if (this.dataSource.offline) {\n\t                return req;\n\t            }\n\t            return this.doAjaxRequest(req);\n\t        };\n\t        DataManager.prototype.remove = function (keyField, value, tableName, query) {\n\t            if (typeof value === 'object') {\n\t                value = value[keyField];\n\t            }\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var res = this.adaptor.remove(this, keyField, value, tableName, query);\n\t            if (this.dataSource.offline) {\n\t                return res;\n\t            }\n\t            return this.doAjaxRequest(res);\n\t        };\n\t        DataManager.prototype.update = function (keyField, value, tableName, query) {\n\t            value = util_1.DataUtil.parse.replacer(value, !this.dataSource.offline);\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var res = this.adaptor.update(this, keyField, value, tableName, query);\n\t            if (this.dataSource.offline) {\n\t                return res;\n\t            }\n\t            return this.doAjaxRequest(res);\n\t        };\n\t        DataManager.prototype.doAjaxRequest = function (res) {\n\t            var _this = this;\n\t            var defer = new Deferred();\n\t            res = ej2_base_2.extend({}, {\n\t                type: 'POST',\n\t                contentType: 'application/json; charset=utf-8',\n\t                processData: false\n\t            }, res);\n\t            var ajax = new ej2_base_1.Ajax(res);\n\t            ajax.beforeSend = function () {\n\t                _this.beforeSend(ajax.httpRequest, ajax);\n\t            };\n\t            ajax.onSuccess = function (record, request) {\n\t                try {\n\t                    util_1.DataUtil.parse.parseJson(record);\n\t                }\n\t                catch (e) {\n\t                    record = [];\n\t                }\n\t                record = _this.adaptor.processResponse(util_1.DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n\t                defer.resolve(_this, [{ record: record, dataManager: _this }]);\n\t            };\n\t            ajax.onFailure = function (e) {\n\t                defer.reject([{ error: e }]);\n\t            };\n\t            ajax.send();\n\t            return defer.promise;\n\t        };\n\t        return DataManager;\n\t    }());\n\t    exports.DataManager = DataManager;\n\t    var Deferred = (function () {\n\t        function Deferred() {\n\t            var _this = this;\n\t            this.promise = new Promise(function (resolve, reject) {\n\t                _this.resolve = resolve;\n\t                _this.reject = reject;\n\t            });\n\t            this.then = this.promise.then.bind(this.promise);\n\t            this.catch = this.promise.catch.bind(this.promise);\n\t        }\n\t        return Deferred;\n\t    }());\n\t    exports.Deferred = Deferred;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, manager_1, query_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var consts = { GroupGuid: '{271bbba0-1ee7}' };\n\t    var DataUtil = (function () {\n\t        function DataUtil() {\n\t        }\n\t        DataUtil.getValue = function (value, inst) {\n\t            if (typeof value === 'function') {\n\t                return value.call(inst || {});\n\t            }\n\t            return value;\n\t        };\n\t        DataUtil.endsWith = function (input, substr) {\n\t            return input.slice(-substr.length) === substr;\n\t        };\n\t        DataUtil.startsWith = function (input, start) {\n\t            return input.slice(0, start.length) === start;\n\t        };\n\t        DataUtil.fnSort = function (order) {\n\t            order = order ? order.toLowerCase() : 'ascending';\n\t            if (order === 'ascending') {\n\t                return this.fnAscending;\n\t            }\n\t            return this.fnDescending;\n\t        };\n\t        DataUtil.fnAscending = function (x, y) {\n\t            if (y === null || y === undefined) {\n\t                return -1;\n\t            }\n\t            if (typeof x === 'string') {\n\t                return x.localeCompare(y);\n\t            }\n\t            if (x === null || x === undefined) {\n\t                return 1;\n\t            }\n\t            return x - y;\n\t        };\n\t        DataUtil.fnDescending = function (x, y) {\n\t            if (y === null || y === undefined) {\n\t                return 1;\n\t            }\n\t            if (typeof x === 'string') {\n\t                return x.localeCompare(y) * -1;\n\t            }\n\t            if (x === null || x === undefined) {\n\t                return -1;\n\t            }\n\t            return y - x;\n\t        };\n\t        DataUtil.extractFields = function (obj, fields) {\n\t            var newObj = {};\n\t            if (fields.length === 1) {\n\t                return this.getObject(fields[0], obj);\n\t            }\n\t            for (var i = 0; i < fields.length; i++) {\n\t                newObj[fields[i].replace('.', '_')] = this.getObject(fields[i], obj);\n\t            }\n\t            return newObj;\n\t        };\n\t        DataUtil.select = function (jsonArray, fields) {\n\t            var newData = [];\n\t            for (var i = 0; i < jsonArray.length; i++) {\n\t                newData.push(this.extractFields(jsonArray[i], fields));\n\t            }\n\t            return newData;\n\t        };\n\t        DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n\t            level = level || 1;\n\t            var jsonData = jsonArray;\n\t            var guid = 'GroupGuid';\n\t            if (jsonData.GroupGuid === consts[guid]) {\n\t                var _loop_1 = function (j) {\n\t                    if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                        var indx = -1;\n\t                        var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n\t                        indx = groupDs.indexOf(temp[0]);\n\t                        jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n\t                        jsonData[j].count = groupDs[indx].count;\n\t                    }\n\t                    else {\n\t                        jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n\t                        jsonData[j].count = jsonData[j].items.length;\n\t                    }\n\t                };\n\t                var this_1 = this;\n\t                for (var j = 0; j < jsonData.length; j++) {\n\t                    _loop_1(j);\n\t                }\n\t                jsonData.childLevels += 1;\n\t                return jsonData;\n\t            }\n\t            var grouped = {};\n\t            var groupedArray = [];\n\t            groupedArray.GroupGuid = consts[guid];\n\t            groupedArray.level = level;\n\t            groupedArray.childLevels = 0;\n\t            groupedArray.records = jsonData;\n\t            var _loop_2 = function (i) {\n\t                var val = this_2.getVal(jsonData, i, field);\n\t                if (!ej2_base_1.isNullOrUndefined(format)) {\n\t                    val = format(val, field);\n\t                }\n\t                if (!grouped[val]) {\n\t                    grouped[val] = {\n\t                        key: val,\n\t                        count: 0,\n\t                        items: [],\n\t                        aggregates: {},\n\t                        field: field\n\t                    };\n\t                    groupedArray.push(grouped[val]);\n\t                    if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                        var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n\t                        grouped[val].count = tempObj[0].count;\n\t                    }\n\t                }\n\t                grouped[val].count = !ej2_base_1.isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n\t                grouped[val].items.push(jsonData[i]);\n\t            };\n\t            var this_2 = this;\n\t            for (var i = 0; i < jsonData.length; i++) {\n\t                _loop_2(i);\n\t            }\n\t            if (aggregates && aggregates.length) {\n\t                var _loop_3 = function (i) {\n\t                    var res = {};\n\t                    var fn = void 0;\n\t                    var aggs = aggregates;\n\t                    for (var j = 0; j < aggregates.length; j++) {\n\t                        fn = DataUtil.aggregates[aggregates[j].type];\n\t                        if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                            var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n\t                            if (fn) {\n\t                                res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n\t                            }\n\t                        }\n\t                        else {\n\t                            if (fn) {\n\t                                res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n\t                            }\n\t                        }\n\t                    }\n\t                    groupedArray[i].aggregates = res;\n\t                };\n\t                for (var i = 0; i < groupedArray.length; i++) {\n\t                    _loop_3(i);\n\t                }\n\t            }\n\t            return groupedArray;\n\t        };\n\t        DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n\t            var i;\n\t            var grp = {};\n\t            var temp;\n\t            if (lookup.result) {\n\t                lookup = lookup.result;\n\t            }\n\t            if (lookup.GroupGuid) {\n\t                this.throwError('DataManager: Do not have support Grouping in hierarchy');\n\t            }\n\t            for (i = 0; i < lookup.length; i++) {\n\t                var fKeyData = this.getObject(fKey, lookup[i]);\n\t                temp = grp[fKeyData] || (grp[fKeyData] = []);\n\t                temp.push(lookup[i]);\n\t            }\n\t            for (i = 0; i < source.length; i++) {\n\t                var fKeyData = this.getObject(pKey || fKey, source[i]);\n\t                source[i][from] = grp[fKeyData];\n\t            }\n\t        };\n\t        DataUtil.getFieldList = function (obj, fields, prefix) {\n\t            if (prefix === undefined) {\n\t                prefix = '';\n\t            }\n\t            if (fields === undefined || fields === null) {\n\t                return this.getFieldList(obj, [], prefix);\n\t            }\n\t            var copyObj = obj;\n\t            var keys = Object.keys(obj);\n\t            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n\t                var prop = keys_1[_i];\n\t                if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n\t                    this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n\t                }\n\t                else {\n\t                    fields.push(prefix + prop);\n\t                }\n\t            }\n\t            return fields;\n\t        };\n\t        DataUtil.getObject = function (nameSpace, from) {\n\t            if (!nameSpace) {\n\t                return from;\n\t            }\n\t            if (nameSpace.indexOf('.') === -1) {\n\t                return from[nameSpace];\n\t            }\n\t            var value = from;\n\t            var splits = nameSpace.split('.');\n\t            for (var i = 0; i < splits.length; i++) {\n\t                if (value == null) {\n\t                    break;\n\t                }\n\t                value = value[splits[i]];\n\t            }\n\t            return value;\n\t        };\n\t        DataUtil.sort = function (ds, field, comparer) {\n\t            if (ds.length <= 1) {\n\t                return ds;\n\t            }\n\t            var middle = parseInt((ds.length / 2).toString(), 10);\n\t            var left = ds.slice(0, middle);\n\t            var right = ds.slice(middle);\n\t            left = this.sort(left, field, comparer);\n\t            right = this.sort(right, field, comparer);\n\t            return this.merge(left, right, field, comparer);\n\t        };\n\t        DataUtil.merge = function (left, right, fieldName, comparer) {\n\t            var result = [];\n\t            var current;\n\t            while (left.length > 0 || right.length > 0) {\n\t                if (left.length > 0 && right.length > 0) {\n\t                    if (comparer) {\n\t                        current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName)) <= 0 ? left : right;\n\t                    }\n\t                    else {\n\t                        current = left[0][fieldName] < left[0][fieldName] ? left : right;\n\t                    }\n\t                }\n\t                else {\n\t                    current = left.length > 0 ? left : right;\n\t                }\n\t                result.push(current.shift());\n\t            }\n\t            return result;\n\t        };\n\t        DataUtil.getVal = function (array, index, field) {\n\t            return field ? this.getObject(field, array[index]) : array[index];\n\t        };\n\t        DataUtil.toLowerCase = function (val) {\n\t            return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n\t        };\n\t        DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n\t            if (fnName in adaptor) {\n\t                var res = adaptor[fnName](param1, param2);\n\t                if (!this.fnOperators.isnull(res)) {\n\t                    param1 = res;\n\t                }\n\t            }\n\t            return param1;\n\t        };\n\t        DataUtil.isPlainObject = function (obj) {\n\t            return (!!obj) && (obj.constructor === Object);\n\t        };\n\t        DataUtil.isCors = function () {\n\t            var xhr = null;\n\t            var request = 'XMLHttpRequest';\n\t            try {\n\t                xhr = new window[request]();\n\t            }\n\t            catch (e) {\n\t            }\n\t            return !!xhr && ('withCredentials' in xhr);\n\t        };\n\t        DataUtil.getGuid = function (prefix) {\n\t            var hexs = '0123456789abcdef';\n\t            var rand;\n\t            return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n\t                if ('crypto' in window && 'getRandomValues' in crypto) {\n\t                    var arr = new Uint8Array(1);\n\t                    window.crypto.getRandomValues(arr);\n\t                    rand = arr[0] % 16 | 0;\n\t                }\n\t                else {\n\t                    rand = Math.random() * 16 | 0;\n\t                }\n\t                return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n\t            });\n\t        };\n\t        DataUtil.isNull = function (val) {\n\t            return val === undefined || val === null;\n\t        };\n\t        DataUtil.getItemFromComparer = function (array, field, comparer) {\n\t            var keyVal;\n\t            var current;\n\t            var key;\n\t            var i = 0;\n\t            var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n\t            if (array.length) {\n\t                while (ej2_base_1.isNullOrUndefined(keyVal) && i < array.length) {\n\t                    keyVal = DataUtil.getVal(array, i, field);\n\t                    key = array[i++];\n\t                }\n\t            }\n\t            for (; i < array.length; i++) {\n\t                current = DataUtil.getVal(array, i, field);\n\t                if (ej2_base_1.isNullOrUndefined(current)) {\n\t                    continue;\n\t                }\n\t                if (castRequired) {\n\t                    keyVal = +keyVal;\n\t                    current = +current;\n\t                }\n\t                if (comparer(keyVal, current) > 0) {\n\t                    keyVal = current;\n\t                    key = array[i];\n\t                }\n\t            }\n\t            return key;\n\t        };\n\t        return DataUtil;\n\t    }());\n\t    DataUtil.serverTimezoneOffset = 0;\n\t    DataUtil.throwError = function (error) {\n\t        try {\n\t            throw new Error(error);\n\t        }\n\t        catch (e) {\n\t            throw e.message + '\\n' + e.stack;\n\t        }\n\t    };\n\t    DataUtil.aggregates = {\n\t        sum: function (ds, field) {\n\t            var result = 0;\n\t            var val;\n\t            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n\t            for (var i = 0; i < ds.length; i++) {\n\t                val = DataUtil.getVal(ds, i, field);\n\t                if (!isNaN(val) && val !== null) {\n\t                    if (castRequired) {\n\t                        val = +val;\n\t                    }\n\t                    result += val;\n\t                }\n\t            }\n\t            return result;\n\t        },\n\t        average: function (ds, field) {\n\t            return DataUtil.aggregates.sum(ds, field) / ds.length;\n\t        },\n\t        min: function (ds, field) {\n\t            var comparer;\n\t            if (typeof field === 'function') {\n\t                comparer = field;\n\t                field = null;\n\t            }\n\t            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n\t        },\n\t        max: function (ds, field) {\n\t            var comparer;\n\t            if (typeof field === 'function') {\n\t                comparer = field;\n\t                field = null;\n\t            }\n\t            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n\t        },\n\t        truecount: function (ds, field) {\n\t            return new manager_1.DataManager(ds).executeLocal(new query_1.Query().where(field, 'equal', true, true)).length;\n\t        },\n\t        falsecount: function (ds, field) {\n\t            return new manager_1.DataManager(ds).executeLocal(new query_1.Query().where(field, 'equal', false, true)).length;\n\t        },\n\t        count: function (ds, field) {\n\t            return ds.length;\n\t        }\n\t    };\n\t    DataUtil.operatorSymbols = {\n\t        '<': 'lessthan',\n\t        '>': 'greaterthan',\n\t        '<=': 'lessthanorequal',\n\t        '>=': 'greaterthanorequal',\n\t        '==': 'equal',\n\t        '!=': 'notequal',\n\t        '*=': 'contains',\n\t        '$=': 'endswith',\n\t        '^=': 'startswith'\n\t    };\n\t    DataUtil.odBiOperator = {\n\t        '<': ' lt ',\n\t        '>': ' gt ',\n\t        '<=': ' le ',\n\t        '>=': ' ge ',\n\t        '==': ' eq ',\n\t        '!=': ' ne ',\n\t        'lessthan': ' lt ',\n\t        'lessthanorequal': ' le ',\n\t        'greaterthan': ' gt ',\n\t        'greaterthanorequal': ' ge ',\n\t        'equal': ' eq ',\n\t        'notequal': ' ne '\n\t    };\n\t    DataUtil.odUniOperator = {\n\t        '$=': 'endswith',\n\t        '^=': 'startswith',\n\t        '*=': 'substringof',\n\t        'endswith': 'endswith',\n\t        'startswith': 'startswith',\n\t        'contains': 'substringof'\n\t    };\n\t    DataUtil.odv4UniOperator = {\n\t        '$=': 'endswith',\n\t        '^=': 'startswith',\n\t        '*=': 'contains',\n\t        'endswith': 'endswith',\n\t        'startswith': 'startswith',\n\t        'contains': 'contains'\n\t    };\n\t    DataUtil.fnOperators = {\n\t        equal: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n\t            }\n\t            return actual === expected;\n\t        },\n\t        notequal: function (actual, expected, ignoreCase) {\n\t            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n\t        },\n\t        lessthan: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n\t            }\n\t            return actual < expected;\n\t        },\n\t        greaterthan: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n\t            }\n\t            return actual > expected;\n\t        },\n\t        lessthanorequal: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n\t            }\n\t            return actual <= expected;\n\t        },\n\t        greaterthanorequal: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n\t            }\n\t            return actual >= expected;\n\t        },\n\t        contains: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return !ej2_base_1.isNullOrUndefined(actual) && !ej2_base_1.isNullOrUndefined(expected) &&\n\t                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n\t            }\n\t            return !ej2_base_1.isNullOrUndefined(actual) && !ej2_base_1.isNullOrUndefined(expected) &&\n\t                actual.toString().indexOf(expected) !== -1;\n\t        },\n\t        notnull: function (actual) {\n\t            return actual !== null;\n\t        },\n\t        isnull: function (actual) {\n\t            return actual === null;\n\t        },\n\t        startswith: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return actual && expected && DataUtil.startsWith(actual.toLowerCase(), expected.toLowerCase());\n\t            }\n\t            return actual && expected && DataUtil.startsWith(actual, expected);\n\t        },\n\t        endswith: function (actual, expected, ignoreCase) {\n\t            if (ignoreCase) {\n\t                return actual && expected && DataUtil.endsWith(actual.toLowerCase(), expected.toLowerCase());\n\t            }\n\t            return actual && expected && DataUtil.endsWith(actual, expected);\n\t        },\n\t        processSymbols: function (operator) {\n\t            var fnName = DataUtil.operatorSymbols[operator];\n\t            if (fnName) {\n\t                var fn = DataUtil.fnOperators[fnName];\n\t                return fn;\n\t            }\n\t            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n\t        },\n\t        processOperator: function (operator) {\n\t            var fn = DataUtil.fnOperators[operator];\n\t            if (fn) {\n\t                return fn;\n\t            }\n\t            return DataUtil.fnOperators.processSymbols(operator);\n\t        }\n\t    };\n\t    DataUtil.parse = {\n\t        parseJson: function (jsonText) {\n\t            if (typeof jsonText === 'string') {\n\t                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n\t            }\n\t            else if (jsonText instanceof Array) {\n\t                DataUtil.parse.iterateAndReviveArray(jsonText);\n\t            }\n\t            else if (typeof jsonText === 'object') {\n\t                DataUtil.parse.iterateAndReviveJson(jsonText);\n\t            }\n\t            return jsonText;\n\t        },\n\t        iterateAndReviveArray: function (array) {\n\t            for (var i = 0; i < array.length; i++) {\n\t                if (typeof array[i] === 'object') {\n\t                    DataUtil.parse.iterateAndReviveJson(array[i]);\n\t                }\n\t                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{|\\\"/g.test(array[i])) {\n\t                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n\t                }\n\t                else {\n\t                    array[i] = DataUtil.parse.parseJson(array[i]);\n\t                }\n\t            }\n\t        },\n\t        iterateAndReviveJson: function (json) {\n\t            var value;\n\t            var keys = Object.keys(json);\n\t            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n\t                var prop = keys_2[_i];\n\t                if (DataUtil.startsWith(prop, '__')) {\n\t                    continue;\n\t                }\n\t                value = json[prop];\n\t                if (typeof value === 'object') {\n\t                    if (value instanceof Array) {\n\t                        DataUtil.parse.iterateAndReviveArray(value);\n\t                    }\n\t                    else if (value) {\n\t                        DataUtil.parse.iterateAndReviveJson(value);\n\t                    }\n\t                }\n\t                else {\n\t                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n\t                }\n\t            }\n\t        },\n\t        jsonReviver: function (field, value) {\n\t            var dupValue = value;\n\t            if (typeof value === 'string') {\n\t                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n\t                if (ms) {\n\t                    return DataUtil.parse.jsonReplacer({ value: new Date(parseInt(ms[1], 10)) }, false).value;\n\t                }\n\t                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n\t                    var arr = dupValue.split(/[^0-9]/);\n\t                    value = DataUtil.parse.jsonReplacer({\n\t                        value: new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10))\n\t                    }, false).value;\n\t                }\n\t            }\n\t            return value;\n\t        },\n\t        isJson: function (jsonData) {\n\t            if (typeof jsonData[0] === 'string') {\n\t                return jsonData;\n\t            }\n\t            return DataUtil.parse.parseJson(jsonData);\n\t        },\n\t        isGuid: function (value) {\n\t            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n\t            var match = regex.exec(value);\n\t            return match != null;\n\t        },\n\t        replacer: function (value, stringify) {\n\t            if (DataUtil.isPlainObject(value)) {\n\t                return DataUtil.parse.jsonReplacer(value, stringify);\n\t            }\n\t            if (value instanceof Array) {\n\t                return DataUtil.parse.arrayReplacer(value);\n\t            }\n\t            if (value instanceof Date) {\n\t                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n\t            }\n\t            return value;\n\t        },\n\t        jsonReplacer: function (val, stringify) {\n\t            if (stringify === void 0) { stringify = true; }\n\t            var value;\n\t            var keys = Object.keys(val);\n\t            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n\t                var prop = keys_3[_i];\n\t                value = val[prop];\n\t                if (!(value instanceof Date)) {\n\t                    continue;\n\t                }\n\t                var d = value;\n\t                var unixstamp = +d - (d.getTimezoneOffset() * 60000);\n\t                val[prop] = new Date(unixstamp - (DataUtil.serverTimezoneOffset * 3600000));\n\t                if (stringify) {\n\t                    val[prop] = val[prop].toJSON();\n\t                }\n\t            }\n\t            return val;\n\t        },\n\t        arrayReplacer: function (val) {\n\t            for (var i = 0; i < val.length; i++) {\n\t                if (DataUtil.isPlainObject(val[i])) {\n\t                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n\t                }\n\t                else if (val[i] instanceof Date) {\n\t                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n\t                }\n\t            }\n\t            return val;\n\t        }\n\t    };\n\t    exports.DataUtil = DataUtil;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, util_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var Query = (function () {\n\t        function Query(from) {\n\t            this.subQuery = null;\n\t            this.isChild = false;\n\t            this.queries = [];\n\t            this.key = '';\n\t            this.fKey = '';\n\t            if (typeof from === 'string') {\n\t                this.fromTable = from;\n\t            }\n\t            else if (from && from instanceof Array) {\n\t                this.lookups = from;\n\t            }\n\t            this.expands = [];\n\t            this.sortedColumns = [];\n\t            this.groupedColumns = [];\n\t            this.subQuery = null;\n\t            this.isChild = false;\n\t            this.params = [];\n\t            return this;\n\t        }\n\t        Query.prototype.setKey = function (field) {\n\t            this.key = field;\n\t            return this;\n\t        };\n\t        Query.prototype.using = function (dataManager) {\n\t            this.dataManager = dataManager;\n\t            return this;\n\t        };\n\t        Query.prototype.execute = function (dataManager, done, fail, always) {\n\t            dataManager = dataManager || this.dataManager;\n\t            if (dataManager) {\n\t                return dataManager.executeQuery(this, done, fail, always);\n\t            }\n\t            return util_1.DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n\t        };\n\t        Query.prototype.executeLocal = function (dataManager) {\n\t            dataManager = dataManager || this.dataManager;\n\t            if (dataManager) {\n\t                return dataManager.executeLocal(this);\n\t            }\n\t            return util_1.DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n\t        };\n\t        Query.prototype.clone = function () {\n\t            var cloned = new Query();\n\t            cloned.queries = this.queries.slice(0);\n\t            cloned.key = this.key;\n\t            cloned.isChild = this.isChild;\n\t            cloned.dataManager = this.dataManager;\n\t            cloned.fromTable = this.fromTable;\n\t            cloned.params = this.params.slice(0);\n\t            cloned.expands = this.expands.slice(0);\n\t            cloned.sortedColumns = this.sortedColumns.slice(0);\n\t            cloned.groupedColumns = this.groupedColumns.slice(0);\n\t            cloned.subQuerySelector = this.subQuerySelector;\n\t            cloned.subQuery = this.subQuery;\n\t            cloned.fKey = this.fKey;\n\t            cloned.requiresCounts = this.requiresCounts;\n\t            return cloned;\n\t        };\n\t        Query.prototype.from = function (tableName) {\n\t            this.fromTable = tableName;\n\t            return this;\n\t        };\n\t        Query.prototype.addParams = function (key, value) {\n\t            if (typeof value === 'function') {\n\t                this.params.push({ key: key, fn: value });\n\t            }\n\t            else {\n\t                this.params.push({ key: key, value: value });\n\t            }\n\t            return this;\n\t        };\n\t        Query.prototype.expand = function (tables) {\n\t            if (typeof tables === 'string') {\n\t                this.expands = [].slice.call([tables], 0);\n\t            }\n\t            else {\n\t                this.expands = tables.slice(0);\n\t            }\n\t            return this;\n\t        };\n\t        Query.prototype.where = function (fieldName, operator, value, ignoreCase) {\n\t            operator = operator ? (operator).toLowerCase() : null;\n\t            var predicate = null;\n\t            if (typeof fieldName === 'string') {\n\t                predicate = new Predicate(fieldName, operator, value, ignoreCase);\n\t            }\n\t            else if (fieldName instanceof Predicate) {\n\t                predicate = fieldName;\n\t            }\n\t            this.queries.push({\n\t                fn: 'onWhere',\n\t                e: predicate\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase) {\n\t            if (typeof fieldNames === 'string') {\n\t                fieldNames = [fieldNames];\n\t            }\n\t            operator = operator || 'contains';\n\t            var comparer = util_1.DataUtil.fnOperators[operator];\n\t            this.queries.push({\n\t                fn: 'onSearch',\n\t                e: {\n\t                    fieldNames: fieldNames,\n\t                    operator: operator,\n\t                    searchKey: searchKey,\n\t                    ignoreCase: ignoreCase,\n\t                    comparer: comparer\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n\t            var order = 'ascending';\n\t            var sorts;\n\t            var temp;\n\t            if (typeof fieldName === 'string' && util_1.DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n\t                fieldName = fieldName.replace(/ desc$/i, '');\n\t                comparer = 'descending';\n\t            }\n\t            if (!comparer || typeof comparer === 'string') {\n\t                order = comparer ? comparer.toLowerCase() : 'ascending';\n\t                comparer = util_1.DataUtil.fnSort(comparer);\n\t            }\n\t            if (isFromGroup) {\n\t                sorts = Query.filterQueries(this.queries, 'onSortBy');\n\t                for (var i = 0; i < sorts.length; i++) {\n\t                    temp = sorts[i].e.fieldName;\n\t                    if (typeof temp === 'string') {\n\t                        if (temp === fieldName) {\n\t                            return this;\n\t                        }\n\t                    }\n\t                    else if (temp instanceof Array) {\n\t                        for (var j = 0; j < temp.length; j++) {\n\t                            if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n\t                                return this;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            this.queries.push({\n\t                fn: 'onSortBy',\n\t                e: {\n\t                    fieldName: fieldName,\n\t                    comparer: comparer,\n\t                    direction: order\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.sortByDesc = function (fieldName) {\n\t            return this.sortBy(fieldName, 'descending');\n\t        };\n\t        Query.prototype.group = function (fieldName, fn, format) {\n\t            this.sortBy(fieldName, null, true);\n\t            this.queries.push({\n\t                fn: 'onGroup',\n\t                e: {\n\t                    fieldName: fieldName,\n\t                    comparer: fn ? fn : null,\n\t                    format: format ? format : null\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.page = function (pageIndex, pageSize) {\n\t            this.queries.push({\n\t                fn: 'onPage',\n\t                e: {\n\t                    pageIndex: pageIndex,\n\t                    pageSize: pageSize\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.range = function (start, end) {\n\t            this.queries.push({\n\t                fn: 'onRange',\n\t                e: {\n\t                    start: start,\n\t                    end: end\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.take = function (nos) {\n\t            this.queries.push({\n\t                fn: 'onTake',\n\t                e: {\n\t                    nos: nos\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.skip = function (nos) {\n\t            this.queries.push({\n\t                fn: 'onSkip',\n\t                e: { nos: nos }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.select = function (fieldNames) {\n\t            if (typeof fieldNames === 'string') {\n\t                fieldNames = [].slice.call([fieldNames], 0);\n\t            }\n\t            this.queries.push({\n\t                fn: 'onSelect',\n\t                e: { fieldNames: fieldNames }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.hierarchy = function (query, selectorFn) {\n\t            this.subQuerySelector = selectorFn;\n\t            this.subQuery = query;\n\t            return this;\n\t        };\n\t        Query.prototype.foreignKey = function (key) {\n\t            this.fKey = key;\n\t            return this;\n\t        };\n\t        Query.prototype.requiresCount = function () {\n\t            this.requiresCounts = true;\n\t            return this;\n\t        };\n\t        Query.prototype.aggregate = function (type, field) {\n\t            this.queries.push({\n\t                fn: 'onAggregates',\n\t                e: { field: field, type: type }\n\t            });\n\t            return this;\n\t        };\n\t        Query.filterQueries = function (queries, name) {\n\t            return queries.filter(function (q) {\n\t                return q.fn === name;\n\t            });\n\t        };\n\t        Query.filterQueryLists = function (queries, singles) {\n\t            var filtered = queries.filter(function (q) {\n\t                return singles.indexOf(q.fn) !== -1;\n\t            });\n\t            var res = {};\n\t            for (var i = 0; i < filtered.length; i++) {\n\t                if (!res[filtered[i].fn]) {\n\t                    res[filtered[i].fn] = filtered[i].e;\n\t                }\n\t            }\n\t            return res;\n\t        };\n\t        return Query;\n\t    }());\n\t    exports.Query = Query;\n\t    var Predicate = (function () {\n\t        function Predicate(field, operator, value, ignoreCase) {\n\t            if (ignoreCase === void 0) { ignoreCase = false; }\n\t            this.isComplex = false;\n\t            if (typeof field === 'string') {\n\t                this.field = field;\n\t                this.operator = operator.toLowerCase();\n\t                this.value = value;\n\t                this.ignoreCase = ignoreCase;\n\t                this.isComplex = false;\n\t                this.comparer = util_1.DataUtil.fnOperators.processOperator(this.operator);\n\t            }\n\t            else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n\t                this.isComplex = true;\n\t                this.condition = operator.toLowerCase();\n\t                this.predicates = [field];\n\t                if (value instanceof Array) {\n\t                    [].push.apply(this.predicates, value);\n\t                }\n\t                else {\n\t                    this.predicates.push(value);\n\t                }\n\t            }\n\t            return this;\n\t        }\n\t        Predicate.and = function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i] = arguments[_i];\n\t            }\n\t            return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n\t        };\n\t        Predicate.prototype.and = function (field, operator, value, ignoreCase) {\n\t            return Predicate.combine(this, field, operator, value, 'and', ignoreCase);\n\t        };\n\t        Predicate.or = function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i] = arguments[_i];\n\t            }\n\t            return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n\t        };\n\t        Predicate.prototype.or = function (field, operator, value, ignoreCase) {\n\t            return Predicate.combine(this, field, operator, value, 'or', ignoreCase);\n\t        };\n\t        Predicate.fromJson = function (json) {\n\t            if (json instanceof Array) {\n\t                var res = [];\n\t                for (var i = 0, len = json.length; i < len; i++) {\n\t                    res.push(this.fromJSONData(json[i]));\n\t                }\n\t                return res;\n\t            }\n\t            var pred = json;\n\t            return this.fromJSONData(pred);\n\t        };\n\t        Predicate.prototype.validate = function (record) {\n\t            var predicate = this.predicates ? this.predicates : [];\n\t            var isAnd;\n\t            var ret;\n\t            if (!this.isComplex && this.comparer) {\n\t                return this.comparer.call(this, util_1.DataUtil.getObject(this.field, record), this.value, this.ignoreCase);\n\t            }\n\t            isAnd = this.condition === 'and';\n\t            for (var i = 0; i < predicate.length; i++) {\n\t                ret = predicate[i].validate(record);\n\t                if (isAnd) {\n\t                    if (!ret) {\n\t                        return false;\n\t                    }\n\t                }\n\t                else {\n\t                    if (ret) {\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t            return isAnd;\n\t        };\n\t        Predicate.prototype.toJson = function () {\n\t            var predicates;\n\t            var p;\n\t            if (this.isComplex) {\n\t                predicates = [];\n\t                p = this.predicates;\n\t                for (var i = 0; i < p.length; i++) {\n\t                    predicates.push(p[i].toJson());\n\t                }\n\t            }\n\t            return {\n\t                isComplex: this.isComplex,\n\t                field: this.field,\n\t                operator: this.operator,\n\t                value: this.value,\n\t                ignoreCase: this.ignoreCase,\n\t                condition: this.condition,\n\t                predicates: predicates\n\t            };\n\t        };\n\t        Predicate.combinePredicates = function (predicates, operator) {\n\t            if (predicates.length === 1) {\n\t                if (!(predicates[0] instanceof Array)) {\n\t                    return predicates[0];\n\t                }\n\t                predicates = predicates[0];\n\t            }\n\t            return new Predicate(predicates[0], operator, predicates.slice(1));\n\t        };\n\t        Predicate.combine = function (pred, field, operator, value, condition, ignoreCase) {\n\t            if (field instanceof Predicate) {\n\t                return Predicate[condition](pred, field);\n\t            }\n\t            if (typeof field === 'string') {\n\t                return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase));\n\t            }\n\t            return util_1.DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n\t        };\n\t        Predicate.fromJSONData = function (json) {\n\t            var preds = json.predicates || [];\n\t            var len = preds.length;\n\t            var predicates = [];\n\t            var result;\n\t            for (var i = 0; i < len; i++) {\n\t                predicates.push(this.fromJSONData(preds[i]));\n\t            }\n\t            if (!json.isComplex) {\n\t                result = new Predicate(json.field, json.operator, json.value, json.ignoreCase);\n\t            }\n\t            else {\n\t                result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n\t            }\n\t            return result;\n\t        };\n\t        return Predicate;\n\t    }());\n\t    exports.Predicate = Predicate;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, util_1, query_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var Adaptor = (function () {\n\t        function Adaptor(ds) {\n\t            this.options = {\n\t                from: 'table',\n\t                requestType: 'json',\n\t                sortBy: 'sorted',\n\t                select: 'select',\n\t                skip: 'skip',\n\t                group: 'group',\n\t                take: 'take',\n\t                search: 'search',\n\t                count: 'requiresCounts',\n\t                where: 'where',\n\t                aggregates: 'aggregates'\n\t            };\n\t            this.type = Adaptor;\n\t            this.dataSource = ds;\n\t            this.pvt = {};\n\t        }\n\t        Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n\t            return data;\n\t        };\n\t        return Adaptor;\n\t    }());\n\t    exports.Adaptor = Adaptor;\n\t    var JsonAdaptor = (function (_super) {\n\t        __extends(JsonAdaptor, _super);\n\t        function JsonAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n\t            var result = dataManager.dataSource.json.slice(0);\n\t            var count = result.length;\n\t            var countFlg = true;\n\t            var ret;\n\t            var key;\n\t            var agg = {};\n\t            for (var i = 0; i < query.queries.length; i++) {\n\t                key = query.queries[i];\n\t                ret = this[key.fn].call(this, result, key.e, query);\n\t                if (key.fn === 'onAggregates') {\n\t                    agg[key.e.field + ' - ' + key.e.type] = ret;\n\t                }\n\t                else {\n\t                    result = ret !== undefined ? ret : result;\n\t                }\n\t                if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n\t                    countFlg = false;\n\t                }\n\t                if (countFlg) {\n\t                    count = result.length;\n\t                }\n\t            }\n\t            if (query.requiresCounts) {\n\t                result = {\n\t                    result: result,\n\t                    count: count,\n\t                    aggregates: agg\n\t                };\n\t            }\n\t            return result;\n\t        };\n\t        JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var i;\n\t            for (i = 0; i < changes.addedRecords.length; i++) {\n\t                this.insert(dm, changes.addedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.changedRecords.length; i++) {\n\t                this.update(dm, e.key, changes.changedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.deletedRecords.length; i++) {\n\t                this.remove(dm, e.key, changes.deletedRecords[i]);\n\t            }\n\t            return changes;\n\t        };\n\t        JsonAdaptor.prototype.onWhere = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.filter(function (obj) {\n\t                if (e) {\n\t                    return e.validate(obj);\n\t                }\n\t            });\n\t        };\n\t        JsonAdaptor.prototype.onAggregates = function (ds, e) {\n\t            var fn = util_1.DataUtil.aggregates[e.type];\n\t            if (!ds || !fn || ds.length === 0) {\n\t                return null;\n\t            }\n\t            return fn(ds, e.field);\n\t        };\n\t        JsonAdaptor.prototype.onSearch = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            if (e.fieldNames.length === 0) {\n\t                util_1.DataUtil.getFieldList(ds[0], e.fieldNames);\n\t            }\n\t            return ds.filter(function (obj) {\n\t                for (var j = 0; j < e.fieldNames.length; j++) {\n\t                    if (e.comparer.call(obj, util_1.DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase)) {\n\t                        return true;\n\t                    }\n\t                }\n\t                return false;\n\t            });\n\t        };\n\t        JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            var fnCompare;\n\t            var field = util_1.DataUtil.getValue(e.fieldName, query);\n\t            if (!field) {\n\t                return ds.sort(e.comparer);\n\t            }\n\t            if (field instanceof Array) {\n\t                field = field.slice(0);\n\t                for (var i = field.length - 1; i >= 0; i--) {\n\t                    if (!field[i]) {\n\t                        continue;\n\t                    }\n\t                    fnCompare = e.comparer;\n\t                    if (util_1.DataUtil.endsWith(field[i], ' desc')) {\n\t                        fnCompare = util_1.DataUtil.fnSort('descending');\n\t                        field[i] = field[i].replace(' desc', '');\n\t                    }\n\t                    ds = util_1.DataUtil.sort(ds, field[i], fnCompare);\n\t                }\n\t                return ds;\n\t            }\n\t            return util_1.DataUtil.sort(ds, field, e.comparer);\n\t        };\n\t        JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            var aggQuery = query_1.Query.filterQueries(query.queries, 'onAggregates');\n\t            var agg = [];\n\t            if (aggQuery.length) {\n\t                var tmp = void 0;\n\t                for (var i = 0; i < aggQuery.length; i++) {\n\t                    tmp = aggQuery[i].e;\n\t                    agg.push({ type: tmp.type, field: util_1.DataUtil.getValue(tmp.field, query) });\n\t                }\n\t            }\n\t            return util_1.DataUtil.group(ds, util_1.DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n\t        };\n\t        JsonAdaptor.prototype.onPage = function (ds, e, query) {\n\t            var size = util_1.DataUtil.getValue(e.pageSize, query);\n\t            var start = (util_1.DataUtil.getValue(e.pageIndex, query) - 1) * size;\n\t            var end = start + size;\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(start, end);\n\t        };\n\t        JsonAdaptor.prototype.onRange = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(util_1.DataUtil.getValue(e.start), util_1.DataUtil.getValue(e.end));\n\t        };\n\t        JsonAdaptor.prototype.onTake = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(0, util_1.DataUtil.getValue(e.nos));\n\t        };\n\t        JsonAdaptor.prototype.onSkip = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(util_1.DataUtil.getValue(e.nos));\n\t        };\n\t        JsonAdaptor.prototype.onSelect = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return util_1.DataUtil.select(ds, util_1.DataUtil.getValue(e.fieldNames));\n\t        };\n\t        JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n\t            if (ej2_base_1.isNullOrUndefined(position)) {\n\t                return dm.dataSource.json.push(data);\n\t            }\n\t            else {\n\t                return dm.dataSource.json.splice(position, 0, data);\n\t            }\n\t        };\n\t        JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            var ds = dm.dataSource.json;\n\t            var i;\n\t            if (typeof value === 'object') {\n\t                value = value[keyField];\n\t            }\n\t            for (i = 0; i < ds.length; i++) {\n\t                if (ds[i][keyField] === value) {\n\t                    break;\n\t                }\n\t            }\n\t            return i !== ds.length ? ds.splice(i, 1) : null;\n\t        };\n\t        JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            var ds = dm.dataSource.json;\n\t            var i;\n\t            var key = value[keyField];\n\t            for (i = 0; i < ds.length; i++) {\n\t                if (ds[i][keyField] === key) {\n\t                    break;\n\t                }\n\t            }\n\t            return i < ds.length ? ej2_base_1.merge(ds[i], value) : null;\n\t        };\n\t        return JsonAdaptor;\n\t    }(Adaptor));\n\t    exports.JsonAdaptor = JsonAdaptor;\n\t    var UrlAdaptor = (function (_super) {\n\t        __extends(UrlAdaptor, _super);\n\t        function UrlAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n\t            var queries = this.getQueryRequest(query);\n\t            var singles = query_1.Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n\t            var params = query.params;\n\t            var url = dm.dataSource.url;\n\t            var temp;\n\t            var skip;\n\t            var take = null;\n\t            var options = this.options;\n\t            var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n\t            if ('onPage' in singles) {\n\t                temp = singles.onPage;\n\t                skip = util_1.DataUtil.getValue(temp.pageIndex, query);\n\t                take = util_1.DataUtil.getValue(temp.pageSize, query);\n\t                skip = (skip - 1) * take;\n\t            }\n\t            else if ('onRange' in singles) {\n\t                temp = singles.onRange;\n\t                skip = temp.start;\n\t                take = temp.end - temp.start;\n\t            }\n\t            for (var i = 0; i < queries.sorts.length; i++) {\n\t                temp = util_1.DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n\t                request.sorts.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n\t            }\n\t            if (hierarchyFilters) {\n\t                temp = this.getFiltersFrom(hierarchyFilters, query);\n\t                if (temp) {\n\t                    request.filters.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n\t                }\n\t            }\n\t            for (var i = 0; i < queries.filters.length; i++) {\n\t                request.filters.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n\t                var keys_1 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n\t                for (var _i = 0, keys_2 = keys_1; _i < keys_2.length; _i++) {\n\t                    var prop = keys_2[_i];\n\t                    if (util_1.DataUtil.isNull((request)[prop])) {\n\t                        delete request[prop];\n\t                    }\n\t                }\n\t            }\n\t            for (var i = 0; i < queries.searches.length; i++) {\n\t                temp = queries.searches[i].e;\n\t                request.searches.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n\t                    fields: temp.fieldNames,\n\t                    operator: temp.operator,\n\t                    key: temp.searchKey,\n\t                    ignoreCase: temp.ignoreCase\n\t                }, query));\n\t            }\n\t            for (var i = 0; i < queries.groups.length; i++) {\n\t                request.groups.push(util_1.DataUtil.getValue(queries.groups[i].e.fieldName, query));\n\t            }\n\t            for (var i = 0; i < queries.aggregates.length; i++) {\n\t                temp = queries.aggregates[i].e;\n\t                request.aggregates.push({ type: temp.type, field: util_1.DataUtil.getValue(temp.field, query) });\n\t            }\n\t            var req = {};\n\t            this.getRequestQuery(options, query, singles, request, req);\n\t            util_1.DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n\t            var keys = Object.keys(req);\n\t            for (var _a = 0, keys_3 = keys; _a < keys_3.length; _a++) {\n\t                var prop = keys_3[_a];\n\t                if (util_1.DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n\t                    delete req[prop];\n\t                }\n\t            }\n\t            if (!(options.skip in req && options.take in req) && take !== null) {\n\t                req[options.skip] = util_1.DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n\t                req[options.take] = util_1.DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n\t            }\n\t            var p = this.pvt;\n\t            this.pvt = {};\n\t            if (this.options.requestType === 'json') {\n\t                return {\n\t                    data: JSON.stringify(req),\n\t                    url: url,\n\t                    pvtData: p,\n\t                    type: 'POST',\n\t                    contentType: 'application/json; charset=utf-8'\n\t                };\n\t            }\n\t            temp = this.convertToQueryString(req, query, dm);\n\t            temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n\t            return {\n\t                type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n\t            var param = 'param';\n\t            var req = request1;\n\t            req[options.from] = query.fromTable;\n\t            if (options.expand) {\n\t                req[options.expand] = query.expands;\n\t            }\n\t            req[options.select] = 'onSelect' in singles ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onSelect', util_1.DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n\t            req[options.count] = query.requiresCounts ? util_1.DataUtil.callAdaptorFunction(this, 'onCount', query.requiresCounts, query) : '';\n\t            req[options.search] = request.searches.length ? util_1.DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n\t            req[options.skip] = 'onSkip' in singles ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onSkip', util_1.DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n\t            req[options.take] = 'onTake' in singles ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onTake', util_1.DataUtil.getValue(singles.onTake.nos, query), query) : '';\n\t            req[options.where] = request.filters.length || request.searches.length ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n\t            req[options.sortBy] = request.sorts.length ? util_1.DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n\t            req[options.group] = request.groups.length ? util_1.DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n\t            req[options.aggregates] = request.aggregates.length ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n\t            req[param] = [];\n\t        };\n\t        UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n\t            return '';\n\t        };\n\t        UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var requests = request;\n\t            var pvt = requests.pvtData || {};\n\t            var groupDs = data.groupDs;\n\t            if (xhr && xhr.getResponseHeader('Content-Type') &&\n\t                xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n\t                return (query.requiresCounts ? { result: [], count: 0 } : []);\n\t            }\n\t            var d = JSON.parse(requests.data);\n\t            if (d && d.action === 'batch' && data.addedRecords) {\n\t                changes.addedRecords = data.addedRecords;\n\t                return changes;\n\t            }\n\t            if (data.d) {\n\t                data = data.d;\n\t            }\n\t            var args = {};\n\t            if ('count' in data) {\n\t                args.count = data.count;\n\t            }\n\t            args.result = data.result ? data.result : data;\n\t            this.getAggregateResult(pvt, data, args, groupDs);\n\t            return util_1.DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n\t        };\n\t        UrlAdaptor.prototype.onGroup = function (e) {\n\t            this.pvt.groups = e;\n\t            return e;\n\t        };\n\t        UrlAdaptor.prototype.onAggregates = function (e) {\n\t            this.pvt.aggregates = e;\n\t        };\n\t        UrlAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var url;\n\t            var key;\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n\t                contentType: 'application/json; charset=utf-8',\n\t                dataType: 'json',\n\t                data: JSON.stringify({\n\t                    changed: changes.changedRecords,\n\t                    added: changes.addedRecords,\n\t                    deleted: changes.deletedRecords,\n\t                    action: 'batch',\n\t                    table: e[url],\n\t                    key: e[key]\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.beforeSend = function (dm, request) {\n\t        };\n\t        UrlAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            return {\n\t                url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                data: JSON.stringify({\n\t                    value: data,\n\t                    table: tableName,\n\t                    action: 'insert'\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                data: JSON.stringify({\n\t                    key: value,\n\t                    keyColumn: keyField,\n\t                    table: tableName,\n\t                    action: 'remove'\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                data: JSON.stringify({\n\t                    value: value,\n\t                    action: 'update',\n\t                    keyColumn: keyField,\n\t                    key: value[keyField],\n\t                    table: tableName\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n\t            var key = query.fKey;\n\t            var value;\n\t            var prop = key;\n\t            var pKey = query.key;\n\t            var predicats = [];\n\t            if (typeof data[0] !== 'object') {\n\t                prop = null;\n\t            }\n\t            for (var i = 0; i < data.length; i++) {\n\t                if (typeof data[0] === 'object') {\n\t                    value = util_1.DataUtil.getObject(pKey || prop, data[i]);\n\t                }\n\t                else {\n\t                    value = data[i];\n\t                }\n\t                predicats.push(new query_1.Predicate(key, 'equal', value));\n\t            }\n\t            return query_1.Predicate.or(predicats);\n\t        };\n\t        UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs) {\n\t            var pData = data;\n\t            if (data && data.result) {\n\t                pData = data.result;\n\t            }\n\t            if (pvt && pvt.aggregates && pvt.aggregates.length) {\n\t                var agg = pvt.aggregates;\n\t                var fn = void 0;\n\t                var aggregateData = pData;\n\t                var res = {};\n\t                if (data.aggregate) {\n\t                    aggregateData = data.aggregate;\n\t                }\n\t                for (var i = 0; i < agg.length; i++) {\n\t                    fn = util_1.DataUtil.aggregates[agg[i].type];\n\t                    if (fn) {\n\t                        res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n\t                    }\n\t                }\n\t                args.aggregates = res;\n\t            }\n\t            if (pvt && pvt.groups && pvt.groups.length) {\n\t                var groups = pvt.groups;\n\t                for (var i = 0; i < groups.length; i++) {\n\t                    var level = null;\n\t                    if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                        groupDs = util_1.DataUtil.group(groupDs, groups[i]);\n\t                    }\n\t                    pData = util_1.DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs);\n\t                }\n\t                args.result = pData;\n\t            }\n\t            return args;\n\t        };\n\t        UrlAdaptor.prototype.getQueryRequest = function (query) {\n\t            var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n\t            req.sorts = query_1.Query.filterQueries(query.queries, 'onSortBy');\n\t            req.groups = query_1.Query.filterQueries(query.queries, 'onGroup');\n\t            req.filters = query_1.Query.filterQueries(query.queries, 'onWhere');\n\t            req.searches = query_1.Query.filterQueries(query.queries, 'onSearch');\n\t            req.aggregates = query_1.Query.filterQueries(query.queries, 'onAggregates');\n\t            return req;\n\t        };\n\t        UrlAdaptor.prototype.addParams = function (options) {\n\t            var req = options.reqParams;\n\t            if (options.params.length) {\n\t                req.params = {};\n\t            }\n\t            for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n\t                var tmp = _a[_i];\n\t                if (req[tmp.key]) {\n\t                    throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n\t                }\n\t                req[tmp.key] = tmp.value;\n\t                if (tmp.fn) {\n\t                    req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n\t                }\n\t                req.params[tmp.key] = req[tmp.key];\n\t            }\n\t        };\n\t        return UrlAdaptor;\n\t    }(Adaptor));\n\t    exports.UrlAdaptor = UrlAdaptor;\n\t    var ODataAdaptor = (function (_super) {\n\t        __extends(ODataAdaptor, _super);\n\t        function ODataAdaptor() {\n\t            var _this = _super.call(this) || this;\n\t            _this.options = ej2_base_1.extend({}, _this.options, {\n\t                requestType: 'get',\n\t                accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n\t                multipartAccept: 'multipart/mixed',\n\t                sortBy: '$orderby',\n\t                select: '$select',\n\t                skip: '$skip',\n\t                take: '$top',\n\t                count: '$inlinecount',\n\t                where: '$filter',\n\t                expand: '$expand',\n\t                batch: '$batch',\n\t                changeSet: '--changeset_',\n\t                batchPre: 'batch_',\n\t                contentId: 'Content-Id: ',\n\t                batchContent: 'Content-Type: multipart/mixed; boundary=',\n\t                changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n\t                batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 '\n\t            });\n\t            _this.getModuleName = ej2_base_1.getValue('getModulename', _this);\n\t            return _this;\n\t        }\n\t        ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n\t            var returnValue = '';\n\t            var operator;\n\t            var guid;\n\t            var val = predicate.value;\n\t            var type = typeof val;\n\t            var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n\t            if (val instanceof Date) {\n\t                val = 'datetime\\'' + util_1.DataUtil.parse.replacer(val) + '\\'';\n\t            }\n\t            if (type === 'string') {\n\t                val = '\\'' + val + '\\'';\n\t                if (requiresCast) {\n\t                    field = 'cast(' + field + ', \\'Edm.String\\')';\n\t                }\n\t                if (util_1.DataUtil.parse.isGuid(val)) {\n\t                    guid = 'guid';\n\t                }\n\t                if (predicate.ignoreCase) {\n\t                    if (!guid) {\n\t                        field = 'tolower(' + field + ')';\n\t                    }\n\t                    val = val.toLowerCase();\n\t                }\n\t            }\n\t            operator = util_1.DataUtil.odBiOperator[predicate.operator];\n\t            if (operator) {\n\t                returnValue += field;\n\t                returnValue += operator;\n\t                if (guid) {\n\t                    returnValue += guid;\n\t                }\n\t                return returnValue + val;\n\t            }\n\t            if (!ej2_base_1.isNullOrUndefined(this.getModuleName)) {\n\t                if (this.getModuleName() === 'ODataV4Adaptor') {\n\t                    operator = util_1.DataUtil.odv4UniOperator[predicate.operator];\n\t                }\n\t            }\n\t            else {\n\t                operator = util_1.DataUtil.odUniOperator[predicate.operator];\n\t            }\n\t            if (operator === 'substringof') {\n\t                var temp = val;\n\t                val = field;\n\t                field = temp;\n\t            }\n\t            returnValue += operator + '(';\n\t            returnValue += field + ',';\n\t            if (guid) {\n\t                returnValue += guid;\n\t            }\n\t            returnValue += val + ')';\n\t            return returnValue;\n\t        };\n\t        ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n\t            var res = [];\n\t            for (var i = 0; i < predicate.predicates.length; i++) {\n\t                res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n\t            }\n\t            return res.join(' ' + predicate.condition + ' ');\n\t        };\n\t        ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n\t            return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n\t        };\n\t        ODataAdaptor.prototype.onWhere = function (filters) {\n\t            if (this.pvt.search) {\n\t                filters.push(this.onEachWhere(this.pvt.search, null, true));\n\t            }\n\t            return filters.join(' and ');\n\t        };\n\t        ODataAdaptor.prototype.onEachSearch = function (e) {\n\t            if (e.fields && e.fields.length === 0) {\n\t                util_1.DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n\t            }\n\t            var filter = this.pvt.search || [];\n\t            for (var i = 0; i < e.fields.length; i++) {\n\t                filter.push(new query_1.Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n\t            }\n\t            this.pvt.search = filter;\n\t        };\n\t        ODataAdaptor.prototype.onSearch = function (e) {\n\t            this.pvt.search = query_1.Predicate.or(this.pvt.search);\n\t            return '';\n\t        };\n\t        ODataAdaptor.prototype.onEachSort = function (e) {\n\t            var res = [];\n\t            if (e.name instanceof Array) {\n\t                for (var i = 0; i < e.name.length; i++) {\n\t                    res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n\t                }\n\t            }\n\t            else {\n\t                res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n\t            }\n\t            return res.join(',');\n\t        };\n\t        ODataAdaptor.prototype.onSortBy = function (e) {\n\t            return e.reverse().join(',');\n\t        };\n\t        ODataAdaptor.prototype.onGroup = function (e) {\n\t            this.pvt.groups = e;\n\t            return [];\n\t        };\n\t        ODataAdaptor.prototype.onSelect = function (e) {\n\t            for (var i = 0; i < e.length; i++) {\n\t                e[i] = ODataAdaptor.getField(e[i]);\n\t            }\n\t            return e.join(',');\n\t        };\n\t        ODataAdaptor.prototype.onAggregates = function (e) {\n\t            this.pvt.aggregates = e;\n\t            return '';\n\t        };\n\t        ODataAdaptor.prototype.onCount = function (e) {\n\t            return e === true ? 'allpages' : '';\n\t        };\n\t        ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            if (util_1.DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n\t                request.setRequestHeader('Accept', this.options.multipartAccept);\n\t                request.setRequestHeader('DataServiceVersion', '2.0');\n\t                request.overrideMimeType('text/plain; charset=x-user-defined');\n\t            }\n\t            else {\n\t                request.setRequestHeader('Accept', this.options.accept);\n\t            }\n\t            request.setRequestHeader('DataServiceVersion', '2.0');\n\t            request.setRequestHeader('MaxDataServiceVersion', '2.0');\n\t        };\n\t        ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var pvtData = 'pvtData';\n\t            if (!ej2_base_1.isNullOrUndefined(data.d)) {\n\t                var dataCopy = (query && query.requiresCounts) ? data.d.results : data.d;\n\t                var metaData = '__metadata';\n\t                if (!ej2_base_1.isNullOrUndefined(dataCopy)) {\n\t                    for (var i = 0; i < dataCopy.length; i++) {\n\t                        if (!ej2_base_1.isNullOrUndefined(dataCopy[i][metaData])) {\n\t                            delete dataCopy[i][metaData];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            var pvt = request && request[pvtData];\n\t            var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n\t            if (emptyAndBatch) {\n\t                return emptyAndBatch;\n\t            }\n\t            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n\t            var count = null;\n\t            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n\t            if (query && query.requiresCounts) {\n\t                var oDataCount = '__count';\n\t                if (data[oDataCount] || data['odata.count']) {\n\t                    count = data[oDataCount] || data['odata.count'];\n\t                }\n\t                if (data.d) {\n\t                    data = data.d;\n\t                }\n\t                if (data[oDataCount] || data['odata.count']) {\n\t                    count = data[oDataCount] || data['odata.count'];\n\t                }\n\t            }\n\t            if (version === 3 && data.value) {\n\t                data = data.value;\n\t            }\n\t            if (data.d) {\n\t                data = data.d;\n\t            }\n\t            if (version < 3 && data.results) {\n\t                data = data.results;\n\t            }\n\t            var args = {};\n\t            args.count = count;\n\t            args.result = data;\n\t            this.getAggregateResult(pvt, data, args);\n\t            return util_1.DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n\t        };\n\t        ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n\t            var res = [];\n\t            var table = 'table';\n\t            var tableName = request[table] || '';\n\t            var format = '$format';\n\t            delete request[table];\n\t            if (dm.dataSource.requiresFormat) {\n\t                request[format] = 'json';\n\t            }\n\t            var keys = Object.keys(request);\n\t            for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n\t                var prop = keys_4[_i];\n\t                res.push(prop + '=' + request[prop]);\n\t            }\n\t            res = res.join('&');\n\t            if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n\t                return res;\n\t            }\n\t            return res.length ? tableName + '?' + res : tableName || '';\n\t        };\n\t        ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            return {\n\t                url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : ''),\n\t                data: JSON.stringify(data)\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'DELETE',\n\t                url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : '') + '(' + value + ')'\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'PUT',\n\t                url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : '') + '(' + value[keyField] + ')',\n\t                data: JSON.stringify(value),\n\t                accept: this.options.accept\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var initialGuid = e.guid = util_1.DataUtil.getGuid(this.options.batchPre);\n\t            var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n\t            var args = {\n\t                url: e.url,\n\t                key: e.key,\n\t                cid: 1,\n\t                cSet: util_1.DataUtil.getGuid(this.options.changeSet)\n\t            };\n\t            var req = '--' + initialGuid + '\\n';\n\t            req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n\t            this.pvt.changeSet = 0;\n\t            req += this.generateInsertRequest(changes.addedRecords, args);\n\t            req += this.generateUpdateRequest(changes.changedRecords, args);\n\t            req += this.generateDeleteRequest(changes.deletedRecords, args);\n\t            req += args.cSet + '--\\n';\n\t            req += '--' + initialGuid + '--';\n\t            return {\n\t                type: 'POST',\n\t                url: url,\n\t                dataType: 'json',\n\t                contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n\t                data: req\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.generateDeleteRequest = function (arr, e) {\n\t            if (!arr) {\n\t                return '';\n\t            }\n\t            var req = '';\n\t            var stat = {\n\t                'method': 'DELETE ',\n\t                'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n\t                'data': function (data, i) { return ''; }\n\t            };\n\t            req = this.generateBodyContent(arr, e, stat);\n\t            return req + '\\n';\n\t        };\n\t        ODataAdaptor.prototype.generateInsertRequest = function (arr, e) {\n\t            if (!arr) {\n\t                return '';\n\t            }\n\t            var req = '';\n\t            var stat = {\n\t                'method': 'POST ',\n\t                'url': function (data, i, key) { return ''; },\n\t                'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n\t            };\n\t            req = this.generateBodyContent(arr, e, stat);\n\t            return req;\n\t        };\n\t        ODataAdaptor.prototype.generateUpdateRequest = function (arr, e) {\n\t            if (!arr) {\n\t                return '';\n\t            }\n\t            var req = '';\n\t            var stat = {\n\t                'method': 'PUT ',\n\t                'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n\t                'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n\t            };\n\t            req = this.generateBodyContent(arr, e, stat);\n\t            return req;\n\t        };\n\t        ODataAdaptor.getField = function (prop) {\n\t            return prop.replace(/\\./g, '/');\n\t        };\n\t        ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat) {\n\t            var req = '';\n\t            for (var i = 0; i < arr.length; i++) {\n\t                req += '\\n' + e.cSet + '\\n';\n\t                req += this.options.changeSetContent + '\\n\\n';\n\t                req += stat.method;\n\t                req += e.url + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n\t                req += 'Accept: ' + this.options.accept + '\\n';\n\t                req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n\t                req += this.options.batchChangeSetContentType + '\\n\\n';\n\t                req += stat.data(arr, i);\n\t            }\n\t            return req;\n\t        };\n\t        ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n\t            if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n\t                return (query.requiresCounts ? { result: [], count: 0 } : []);\n\t            }\n\t            if (request && this.options.batch && util_1.DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n\t                var guid = xhr.getResponseHeader('Content-Type');\n\t                var cIdx = void 0;\n\t                var jsonObj = void 0;\n\t                guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n\t                data = data.split(guid);\n\t                if (data.length < 2) {\n\t                    return {};\n\t                }\n\t                data = data[1];\n\t                var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(data);\n\t                if (exVal) {\n\t                    data.replace(exVal[0], '');\n\t                }\n\t                var changeGuid = exVal ? exVal[1] : '';\n\t                data = data.split(changeGuid);\n\t                for (var i = data.length; i > -1; i--) {\n\t                    if (!/\\bContent-ID:/i.test(data[i]) || !/\\bHTTP.+201/.test(data[i])) {\n\t                        continue;\n\t                    }\n\t                    cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(data[i])[1], 10);\n\t                    if (changes.addedRecords[cIdx]) {\n\t                        jsonObj = util_1.DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(data[i])[0]);\n\t                        ej2_base_1.extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n\t                    }\n\t                }\n\t                return changes;\n\t            }\n\t            return null;\n\t        };\n\t        return ODataAdaptor;\n\t    }(UrlAdaptor));\n\t    exports.ODataAdaptor = ODataAdaptor;\n\t    var ODataV4Adaptor = (function (_super) {\n\t        __extends(ODataV4Adaptor, _super);\n\t        function ODataV4Adaptor() {\n\t            var _this = _super !== null && _super.apply(this, arguments) || this;\n\t            _this.options = ej2_base_1.extend({}, _this.options, {\n\t                requestType: 'get',\n\t                accept: 'application/json, text/javascript, */*; q=0.01',\n\t                multipartAccept: 'multipart/mixed',\n\t                sortBy: '$orderby',\n\t                select: '$select',\n\t                skip: '$skip',\n\t                take: '$top',\n\t                count: '$count',\n\t                search: '$search',\n\t                where: '$filter',\n\t                expand: '$expand',\n\t                batch: '$batch',\n\t                changeSet: '--changeset_',\n\t                batchPre: 'batch_',\n\t                contentId: 'Content-Id: ',\n\t                batchContent: 'Content-Type: multipart/mixed; boundary=',\n\t                changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n\t                batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 '\n\t            });\n\t            return _this;\n\t        }\n\t        ODataV4Adaptor.prototype.getModulename = function () {\n\t            return 'ODataV4Adaptor';\n\t        };\n\t        ;\n\t        ODataV4Adaptor.prototype.onCount = function (e) {\n\t            return e === true ? 'true' : '';\n\t        };\n\t        ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n\t            var returnValue = '';\n\t            var val = predicate.value;\n\t            var isDate = val instanceof Date;\n\t            returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n\t            if (isDate) {\n\t                returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n\t            }\n\t            return returnValue;\n\t        };\n\t        ODataV4Adaptor.prototype.onEachSearch = function (e) {\n\t            var search = this.pvt.searches || [];\n\t            search.push(e.key);\n\t            this.pvt.searches = search;\n\t        };\n\t        ODataV4Adaptor.prototype.onSearch = function (e) {\n\t            return this.pvt.searches.join(' OR ');\n\t        };\n\t        ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            request.setRequestHeader('Accept', this.options.accept);\n\t        };\n\t        ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var pvtData = 'pvtData';\n\t            var pvt = request && request[pvtData];\n\t            var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n\t            if (emptyAndBatch) {\n\t                return emptyAndBatch;\n\t            }\n\t            var count = null;\n\t            var dataCount = '@odata.count';\n\t            if (query && query.requiresCounts) {\n\t                if (dataCount in data) {\n\t                    count = data[dataCount];\n\t                }\n\t            }\n\t            data = data.value;\n\t            var args = {};\n\t            args.count = count;\n\t            args.result = data;\n\t            this.getAggregateResult(pvt, data, args);\n\t            return util_1.DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n\t        };\n\t        return ODataV4Adaptor;\n\t    }(ODataAdaptor));\n\t    exports.ODataV4Adaptor = ODataV4Adaptor;\n\t    var WebApiAdaptor = (function (_super) {\n\t        __extends(WebApiAdaptor, _super);\n\t        function WebApiAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.url,\n\t                data: JSON.stringify(data)\n\t            };\n\t        };\n\t        WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'DELETE',\n\t                url: dm.dataSource.url + '/' + value,\n\t                data: JSON.stringify(value)\n\t            };\n\t        };\n\t        WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'PUT',\n\t                url: dm.dataSource.url,\n\t                data: JSON.stringify(value)\n\t            };\n\t        };\n\t        WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n\t        };\n\t        WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var pvtData = 'pvtData';\n\t            var pvt = request && request[pvtData];\n\t            var count = null;\n\t            var args = {};\n\t            if (request && request.type.toLowerCase() !== 'post') {\n\t                var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n\t                var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n\t                if (query && query.requiresCounts) {\n\t                    if (!util_1.DataUtil.isNull(data.Count)) {\n\t                        count = data.Count;\n\t                    }\n\t                }\n\t                if (version < 3 && data.Items) {\n\t                    data = data.Items;\n\t                }\n\t                args.count = count;\n\t                args.result = data;\n\t                this.getAggregateResult(pvt, data, args);\n\t            }\n\t            args.result = args.result || data;\n\t            return util_1.DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n\t        };\n\t        return WebApiAdaptor;\n\t    }(ODataAdaptor));\n\t    exports.WebApiAdaptor = WebApiAdaptor;\n\t    var WebMethodAdaptor = (function (_super) {\n\t        __extends(WebMethodAdaptor, _super);\n\t        function WebMethodAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n\t            var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n\t            var getData = 'data';\n\t            var data = util_1.DataUtil.parse.parseJson(obj[getData]);\n\t            var result = {};\n\t            var value = 'value';\n\t            if (data.param) {\n\t                for (var i = 0; i < data.param.length; i++) {\n\t                    var param = data.param[i];\n\t                    var key = Object.keys(param)[0];\n\t                    result[key] = param[key];\n\t                }\n\t            }\n\t            result[value] = data;\n\t            var pvtData = 'pvtData';\n\t            var url = 'url';\n\t            return {\n\t                data: JSON.stringify(result),\n\t                url: obj[url],\n\t                pvtData: obj[pvtData],\n\t                type: 'POST',\n\t                contentType: 'application/json; charset=utf-8'\n\t            };\n\t        };\n\t        return WebMethodAdaptor;\n\t    }(UrlAdaptor));\n\t    exports.WebMethodAdaptor = WebMethodAdaptor;\n\t    var RemoteSaveAdaptor = (function (_super) {\n\t        __extends(RemoteSaveAdaptor, _super);\n\t        function RemoteSaveAdaptor() {\n\t            var _this = _super.call(this) || this;\n\t            ej2_base_1.setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n\t            ej2_base_1.setValue('insert', UrlAdaptor.prototype.insert, _this);\n\t            ej2_base_1.setValue('update', UrlAdaptor.prototype.update, _this);\n\t            ej2_base_1.setValue('remove', UrlAdaptor.prototype.remove, _this);\n\t            return _this;\n\t        }\n\t        RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var i;\n\t            for (i = 0; i < changes.addedRecords.length; i++) {\n\t                JsonAdaptor.prototype.insert(dm, changes.addedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.changedRecords.length; i++) {\n\t                JsonAdaptor.prototype.update(dm, e.key, changes.changedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.deletedRecords.length; i++) {\n\t                JsonAdaptor.prototype.remove(dm, e.key, changes.deletedRecords[i]);\n\t            }\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                contentType: 'application/json; charset=utf-8',\n\t                dataType: 'json',\n\t                data: JSON.stringify({\n\t                    changed: changes.changedRecords,\n\t                    added: changes.addedRecords,\n\t                    deleted: changes.deletedRecords,\n\t                    action: 'batch',\n\t                    table: e.url,\n\t                    key: e.key\n\t                })\n\t            };\n\t        };\n\t        return RemoteSaveAdaptor;\n\t    }(JsonAdaptor));\n\t    exports.RemoteSaveAdaptor = RemoteSaveAdaptor;\n\t    var CacheAdaptor = (function (_super) {\n\t        __extends(CacheAdaptor, _super);\n\t        function CacheAdaptor(adaptor, timeStamp, pageSize) {\n\t            var _this = _super.call(this) || this;\n\t            _this.isCrudAction = false;\n\t            _this.isInsertAction = false;\n\t            if (!ej2_base_1.isNullOrUndefined(adaptor)) {\n\t                _this.cacheAdaptor = adaptor;\n\t            }\n\t            _this.pageSize = pageSize;\n\t            _this.guidId = util_1.DataUtil.getGuid('cacheAdaptor');\n\t            var obj = { keys: [], results: [] };\n\t            window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n\t            var guid = _this.guidId;\n\t            if (!ej2_base_1.isNullOrUndefined(timeStamp)) {\n\t                setInterval(function () {\n\t                    var data;\n\t                    data = util_1.DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n\t                    var forDel = [];\n\t                    for (var i = 0; i < data.results.length; i++) {\n\t                        var currentTime = +new Date();\n\t                        var requestTime = +new Date(data.results[i].timeStamp);\n\t                        data.results[i].timeStamp = currentTime - requestTime;\n\t                        if (currentTime - requestTime > timeStamp) {\n\t                            forDel.push(i);\n\t                        }\n\t                    }\n\t                    for (var i = 0; i < forDel.length; i++) {\n\t                        data.results.splice(forDel[i], 1);\n\t                        data.keys.splice(forDel[i], 1);\n\t                    }\n\t                    window.localStorage.removeItem(guid);\n\t                    window.localStorage.setItem(guid, JSON.stringify(data));\n\t                }, timeStamp);\n\t            }\n\t            return _this;\n\t        }\n\t        CacheAdaptor.prototype.generateKey = function (url, query) {\n\t            var queries = this.getQueryRequest(query);\n\t            var singles = query_1.Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n\t            var key = url;\n\t            var page = 'onPage';\n\t            if (page in singles) {\n\t                key += singles[page].pageIndex;\n\t            }\n\t            queries.sorts.forEach(function (obj) {\n\t                key += obj.e.direction + obj.e.fieldName;\n\t            });\n\t            queries.groups.forEach(function (obj) {\n\t                key += obj.e.fieldName;\n\t            });\n\t            queries.searches.forEach(function (obj) {\n\t                key += obj.e.searchKey;\n\t            });\n\t            for (var filter = 0; filter < queries.filters.length; filter++) {\n\t                var currentFilter = queries.filters[filter];\n\t                if (currentFilter.e.isComplex) {\n\t                    var newQuery = query.clone();\n\t                    newQuery.queries = [];\n\t                    for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n\t                        newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n\t                    }\n\t                    key += currentFilter.e.condition + this.generateKey(url, newQuery);\n\t                }\n\t                else {\n\t                    key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n\t                }\n\t            }\n\t            return key;\n\t        };\n\t        CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n\t            var key = this.generateKey(dm.dataSource.url, query);\n\t            var cachedItems;\n\t            cachedItems = util_1.DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n\t            var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n\t            if (data != null && !this.isCrudAction && !this.isInsertAction) {\n\t                return data;\n\t            }\n\t            this.isCrudAction = null;\n\t            this.isInsertAction = null;\n\t            return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n\t        };\n\t        CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n\t                util_1.DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n\t                return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n\t            }\n\t            data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n\t            var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n\t            var obj = {};\n\t            obj = util_1.DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n\t            var index = obj.keys.indexOf(key);\n\t            if (index !== -1) {\n\t                obj.results.splice(index, 1);\n\t                obj.keys.splice(index, 1);\n\t            }\n\t            obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n\t            while (obj.results.length > this.pageSize) {\n\t                obj.results.splice(0, 1);\n\t                obj.keys.splice(0, 1);\n\t            }\n\t            window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n\t            return data;\n\t        };\n\t        CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            if (util_1.DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n\t                request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n\t            }\n\t            if (!dm.dataSource.crossDomain) {\n\t                request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n\t            }\n\t        };\n\t        CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            this.isCrudAction = true;\n\t            return this.cacheAdaptor.update(dm, keyField, value, tableName);\n\t        };\n\t        CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            this.isInsertAction = true;\n\t            return this.cacheAdaptor.insert(dm, data, tableName);\n\t        };\n\t        CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            this.isCrudAction = true;\n\t            return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n\t        };\n\t        CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            return this.cacheAdaptor.batchRequest(dm, changes, e);\n\t        };\n\t        return CacheAdaptor;\n\t    }(UrlAdaptor));\n\t    exports.CacheAdaptor = CacheAdaptor;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ })\n/******/ ])\n});\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}