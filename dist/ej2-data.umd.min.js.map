/*!
*  filename: ej2-data.umd.min.js.map
*  version : 15.4.17
*  Copyright Syncfusion Inc. 2001 - 2017. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/

{"version":3,"sources":["ej2-data.umd.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","manager_1","query_1","adaptors_1","util_1","__export","hasOwnProperty","Object","defineProperty","value","apply","ej2_base_1","ej2_base_2","DataManager","dataSource","query","adaptor","_this","dateParse","requests","data","Array","json","offline","url","insertUrl","removeUrl","updateUrl","crudUrl","batchUrl","headers","accept","timeTillExpiration","cachingPageSize","enableCaching","requestType","key","crossDomain","jsonp","dataType","RemoteSaveAdaptor","requiresFormat","DataUtil","throwError","isCors","isNullOrUndefined","defaultQuery","length","isDataAvailable","ODataAdaptor","ready","executeQuery","Query","then","e","result","JsonAdaptor","CacheAdaptor","prototype","setDefaultQuery","executeLocal","processQuery","subQuery","from","fromTable","lookup","lookups","res","isCountRequired","buildHierarchy","fKey","j","extend","processResponse","using","slice","done","fail","always","deffered","Deferred","args","nextTick","getDeferedArgs","resolve","makeRequest","promise","count","aggregates","fn","window","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","type","cache","processData","onSuccess","onFailure","isSelector","subQuerySelector","error","reject","process","xhr","request","actual","virtualSelectRecords","parseInt","toString","fnQueryChild","selector","subDeffer","childArgs","parent","isChild","subUrl","childReq","subData","httpRequest","getResponseHeader","indexOf","parse","parseJson","virtualRecords","req","ajax","Ajax","beforeSend","send","catch","push","Promise","all","_i","arguments","pResult","cResult","settings","props","keys","keys_1","prop","setRequestHeader","saveChanges","changes","tableName","batchRequest","deff","insert","position","replacer","doAjaxRequest","remove","keyField","update","defer","contentType","record","dataManager","bind","consts","GroupGuid","getValue","inst","endsWith","input","substr","startsWith","start","fnSort","order","toLowerCase","fnAscending","fnDescending","x","y","localeCompare","extractFields","obj","fields","newObj","getObject","replace","select","jsonArray","newData","group","field","level","groupDs","format","jsonData","this_1","items","indx","temp","filter","childLevels","grouped","groupedArray","records","this_2","val","getVal","tempObj","aggs","source","pKey","grp","fKeyData","getFieldList","prefix","copyObj","nameSpace","splits","split","sort","ds","comparer","middle","left","right","merge","fieldName","current","shift","array","index","callAdaptorFunction","fnName","param1","param2","fnOperators","isnull","isPlainObject","constructor","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","distinct","requiresCompleteRecord","tmp","forEach","serverTimezoneOffset","Error","message","stack","sum","isNaN","average","min","max","truecount","where","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","expected","ignoreCase","notnull","processSymbols","operator","processOperator","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","dupValue","ms","exec","jsonReplacer","Date","isJson","isGuid","stringify","arrayReplacer","keys_3","d","unixstamp","getTimezoneOffset","toJSON","date","queries","expands","sortedColumns","groupedColumns","params","setKey","execute","clone","cloned","addParams","expand","tables","predicate","Predicate","search","searchKey","fieldNames","sortBy","isFromGroup","sorts","filterQueries","direction","sortByDesc","page","pageIndex","pageSize","range","end","take","nos","skip","hierarchy","selectorFn","foreignKey","requiresCount","aggregate","name","q","filterQueryLists","singles","filtered","isComplex","condition","predicates","and","combinePredicates","combine","or","fromJson","len","fromJSONData","pred","validate","isAnd","ret","toJson","preds","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","Adaptor","options","pvt","_super","countFlg","agg","dm","addedRecords","changedRecords","deletedRecords","onWhere","onAggregates","onSearch","onSortBy","fnCompare","onGroup","aggQuery","onPage","size","onRange","onTake","onSkip","onSelect","splice","UrlAdaptor","hierarchyFilters","getQueryRequest","groups","filters","searches","getFiltersFrom","getRequestQuery","reqParams","_a","pvtData","convertToQueryString","request1","action","getAggregateResult","changed","added","deleted","table","keyColumn","predicats","pData","aggregateData","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","onComplexPredicate","onEachWhere","join","onEachSearch","onEachSort","reverse","onCount","overrideMimeType","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","keys_4","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","cIdx","jsonObj","substring","exVal","changeGuid","ODataV4Adaptor","getModulename","isDate","WebApiAdaptor","Count","Items","WebMethodAdaptor","param","setValue","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems"],"mappings":"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","file":"ej2-data.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@syncfusion/ej2-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@syncfusion/ej2-base\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"@syncfusion/ej2-base\")) : factory(root[\"@syncfusion/ej2-base\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(1), __webpack_require__(4), __webpack_require__(5), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, manager_1, query_1, adaptors_1, util_1) {\n\t    \"use strict\";\n\t    function __export(m) {\n\t        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t    }\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    __export(manager_1);\n\t    __export(query_1);\n\t    __export(adaptors_1);\n\t    __export(util_1);\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(2), __webpack_require__(3), __webpack_require__(4), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, ej2_base_2, util_1, query_1, adaptors_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var DataManager = (function () {\n\t        function DataManager(dataSource, query, adaptor) {\n\t            var _this = this;\n\t            this.dateParse = true;\n\t            this.requests = [];\n\t            if (!dataSource && !this.dataSource) {\n\t                dataSource = [];\n\t            }\n\t            adaptor = adaptor || dataSource.adaptor;\n\t            var data;\n\t            if (dataSource instanceof Array) {\n\t                data = {\n\t                    json: dataSource,\n\t                    offline: true\n\t                };\n\t            }\n\t            else if (typeof dataSource === 'object') {\n\t                if (!dataSource.json) {\n\t                    dataSource.json = [];\n\t                }\n\t                data = {\n\t                    url: dataSource.url,\n\t                    insertUrl: dataSource.insertUrl,\n\t                    removeUrl: dataSource.removeUrl,\n\t                    updateUrl: dataSource.updateUrl,\n\t                    crudUrl: dataSource.crudUrl,\n\t                    batchUrl: dataSource.batchUrl,\n\t                    json: dataSource.json,\n\t                    headers: dataSource.headers,\n\t                    accept: dataSource.accept,\n\t                    data: dataSource.data,\n\t                    timeTillExpiration: dataSource.timeTillExpiration,\n\t                    cachingPageSize: dataSource.cachingPageSize,\n\t                    enableCaching: dataSource.enableCaching,\n\t                    requestType: dataSource.requestType,\n\t                    key: dataSource.key,\n\t                    crossDomain: dataSource.crossDomain,\n\t                    jsonp: dataSource.jsonp,\n\t                    dataType: dataSource.dataType,\n\t                    offline: dataSource.offline !== undefined ? dataSource.offline\n\t                        : dataSource.adaptor instanceof adaptors_1.RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n\t                    requiresFormat: dataSource.requiresFormat\n\t                };\n\t            }\n\t            else {\n\t                util_1.DataUtil.throwError('DataManager: Invalid arguments');\n\t            }\n\t            if (data.requiresFormat === undefined && !util_1.DataUtil.isCors()) {\n\t                data.requiresFormat = ej2_base_2.isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n\t            }\n\t            if (data.dataType === undefined) {\n\t                data.dataType = 'json';\n\t            }\n\t            this.dataSource = data;\n\t            this.defaultQuery = query;\n\t            if (data.url && data.offline && !data.json.length) {\n\t                this.isDataAvailable = false;\n\t                this.adaptor = adaptor || new adaptors_1.ODataAdaptor();\n\t                this.dataSource.offline = false;\n\t                this.ready = this.executeQuery(query || new query_1.Query());\n\t                this.ready.then(function (e) {\n\t                    _this.dataSource.offline = true;\n\t                    _this.isDataAvailable = true;\n\t                    data.json = e.result;\n\t                    _this.adaptor = new adaptors_1.JsonAdaptor();\n\t                });\n\t            }\n\t            else {\n\t                this.adaptor = data.offline ? new adaptors_1.JsonAdaptor() : new adaptors_1.ODataAdaptor();\n\t            }\n\t            if (!data.jsonp && this.adaptor instanceof adaptors_1.ODataAdaptor) {\n\t                data.jsonp = 'callback';\n\t            }\n\t            this.adaptor = adaptor || this.adaptor;\n\t            if (data.enableCaching) {\n\t                this.adaptor = new adaptors_1.CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n\t            }\n\t            return this;\n\t        }\n\t        DataManager.prototype.setDefaultQuery = function (query) {\n\t            this.defaultQuery = query;\n\t            return this;\n\t        };\n\t        DataManager.prototype.executeLocal = function (query) {\n\t            if (!this.defaultQuery && !(query instanceof query_1.Query)) {\n\t                util_1.DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n\t            }\n\t            if (!this.dataSource.json) {\n\t                util_1.DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n\t            }\n\t            query = query || this.defaultQuery;\n\t            var result = this.adaptor.processQuery(this, query);\n\t            if (query.subQuery) {\n\t                var from = query.subQuery.fromTable;\n\t                var lookup = query.subQuery.lookups;\n\t                var res = query.isCountRequired ? result.result :\n\t                    result;\n\t                if (lookup && lookup instanceof Array) {\n\t                    util_1.DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n\t                }\n\t                for (var j = 0; j < res.length; j++) {\n\t                    if (res[j][from] instanceof Array) {\n\t                        res[j] = ej2_base_2.extend({}, {}, res[j]);\n\t                        res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n\t                    }\n\t                }\n\t            }\n\t            return this.adaptor.processResponse(result, this, query);\n\t        };\n\t        DataManager.prototype.executeQuery = function (query, done, fail, always) {\n\t            var _this = this;\n\t            if (typeof query === 'function') {\n\t                always = fail;\n\t                fail = done;\n\t                done = query;\n\t                query = null;\n\t            }\n\t            if (!query) {\n\t                query = this.defaultQuery;\n\t            }\n\t            if (!(query instanceof query_1.Query)) {\n\t                util_1.DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n\t            }\n\t            var deffered = new Deferred();\n\t            var args = { query: query };\n\t            if (!this.dataSource.offline && this.dataSource.url !== undefined) {\n\t                var result = this.adaptor.processQuery(this, query);\n\t                this.makeRequest(result, deffered, args, query);\n\t            }\n\t            else {\n\t                DataManager.nextTick(function () {\n\t                    var res = _this.executeLocal(query);\n\t                    args = DataManager.getDeferedArgs(query, res, args);\n\t                    deffered.resolve(args);\n\t                });\n\t            }\n\t            return deffered.promise;\n\t        };\n\t        DataManager.getDeferedArgs = function (query, result, args) {\n\t            if (query.isCountRequired) {\n\t                args.result = result.result;\n\t                args.count = result.count;\n\t                args.aggregates = result.aggregates;\n\t            }\n\t            else {\n\t                args.result = result;\n\t            }\n\t            return args;\n\t        };\n\t        DataManager.nextTick = function (fn) {\n\t            (window.setImmediate || window.setTimeout)(fn, 0);\n\t        };\n\t        DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n\t            return ej2_base_2.extend({}, {\n\t                type: 'GET',\n\t                dataType: this.dataSource.dataType,\n\t                crossDomain: this.dataSource.crossDomain,\n\t                jsonp: this.dataSource.jsonp,\n\t                cache: true,\n\t                processData: false,\n\t                onSuccess: fnSuccess,\n\t                onFailure: fnFail\n\t            }, url);\n\t        };\n\t        DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n\t            var _this = this;\n\t            var isSelector = !!query.subQuerySelector;\n\t            var fnFail = function (e) {\n\t                args.error = e;\n\t                deffered.reject(args);\n\t            };\n\t            var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n\t                args.xhr = xhr;\n\t                args.count = count ? parseInt(count.toString(), 10) : 0;\n\t                args.result = data;\n\t                args.request = request;\n\t                args.aggregates = aggregates;\n\t                args.actual = actual;\n\t                args.virtualSelectRecords = virtualSelectRecords;\n\t                deffered.resolve(args);\n\t            };\n\t            var fnQueryChild = function (data, selector) {\n\t                var subDeffer = new Deferred();\n\t                var childArgs = { parent: args };\n\t                query.subQuery.isChild = true;\n\t                var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n\t                var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n\t                if (!isSelector) {\n\t                    subDeffer.then(function (subData) {\n\t                        if (data) {\n\t                            util_1.DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n\t                            process(data, subData.count, subData.xhr);\n\t                        }\n\t                    }, fnFail);\n\t                }\n\t                return childReq;\n\t            };\n\t            var fnSuccess = function (data, request) {\n\t                if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n\t                    data = util_1.DataUtil.parse.parseJson(data);\n\t                }\n\t                var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n\t                var count = 0;\n\t                var aggregates = null;\n\t                var virtualSelectRecords = 'virtualSelectRecords';\n\t                var virtualRecords = data[virtualSelectRecords];\n\t                if (query.isCountRequired) {\n\t                    count = result.count;\n\t                    aggregates = result.aggregates;\n\t                    result = result.result;\n\t                }\n\t                if (!query.subQuery) {\n\t                    process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n\t                    return;\n\t                }\n\t                if (!isSelector) {\n\t                    fnQueryChild(result, request);\n\t                }\n\t            };\n\t            var req = this.extendRequest(url, fnSuccess, fnFail);\n\t            var ajax = new ej2_base_1.Ajax(req);\n\t            ajax.beforeSend = function () {\n\t                _this.beforeSend(ajax.httpRequest, ajax);\n\t            };\n\t            req = ajax.send();\n\t            req.catch(function (e) { return true; });\n\t            this.requests.push(ajax);\n\t            if (isSelector) {\n\t                var promise = void 0;\n\t                var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n\t                if (res && res.length) {\n\t                    promise = Promise.all([req, fnQueryChild(null, res)]);\n\t                    promise.then(function () {\n\t                        var args = [];\n\t                        for (var _i = 0; _i < arguments.length; _i++) {\n\t                            args[_i] = arguments[_i];\n\t                        }\n\t                        var result = args[0];\n\t                        var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n\t                        var count = 0;\n\t                        if (query.isCountRequired) {\n\t                            count = pResult.count;\n\t                            pResult = pResult.result;\n\t                        }\n\t                        var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n\t                        count = 0;\n\t                        if (query.subQuery.isCountRequired) {\n\t                            count = cResult.count;\n\t                            cResult = cResult.result;\n\t                        }\n\t                        util_1.DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n\t                        isSelector = false;\n\t                        process(pResult, count, _this.requests[0].httpRequest);\n\t                    });\n\t                }\n\t                else {\n\t                    isSelector = false;\n\t                }\n\t            }\n\t            return req;\n\t        };\n\t        DataManager.prototype.beforeSend = function (request, settings) {\n\t            this.adaptor.beforeSend(this, request, settings);\n\t            var headers = this.dataSource.headers;\n\t            var props;\n\t            for (var i = 0; headers && i < headers.length; i++) {\n\t                props = [];\n\t                var keys = Object.keys(headers[i]);\n\t                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n\t                    var prop = keys_1[_i];\n\t                    props.push(prop);\n\t                    request.setRequestHeader(prop, headers[i][prop]);\n\t                }\n\t            }\n\t        };\n\t        DataManager.prototype.saveChanges = function (changes, key, tableName, query) {\n\t            var _this = this;\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var args = {\n\t                url: tableName,\n\t                key: key || this.dataSource.key\n\t            };\n\t            var req = this.adaptor.batchRequest(this, changes, args, query);\n\t            if (this.dataSource.offline) {\n\t                return req;\n\t            }\n\t            var deff = new Deferred();\n\t            var ajax = new ej2_base_1.Ajax(req);\n\t            ajax.beforeSend = function () {\n\t                _this.beforeSend(ajax.httpRequest, ajax);\n\t            };\n\t            ajax.onSuccess = function (data, request) {\n\t                deff.resolve(_this, [_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes)]);\n\t            };\n\t            ajax.onFailure = function (e) {\n\t                deff.reject([{ error: e }]);\n\t            };\n\t            ajax.send().catch(function (e) { return true; });\n\t            return deff.promise;\n\t        };\n\t        DataManager.prototype.insert = function (data, tableName, query, position) {\n\t            data = util_1.DataUtil.parse.replacer(data);\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var req = this.adaptor.insert(this, data, tableName, query, position);\n\t            if (this.dataSource.offline) {\n\t                return req;\n\t            }\n\t            return this.doAjaxRequest(req);\n\t        };\n\t        DataManager.prototype.remove = function (keyField, value, tableName, query) {\n\t            if (typeof value === 'object') {\n\t                value = value[keyField];\n\t            }\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var res = this.adaptor.remove(this, keyField, value, tableName, query);\n\t            if (this.dataSource.offline) {\n\t                return res;\n\t            }\n\t            return this.doAjaxRequest(res);\n\t        };\n\t        DataManager.prototype.update = function (keyField, value, tableName, query) {\n\t            value = util_1.DataUtil.parse.replacer(value, !this.dataSource.offline);\n\t            if (tableName instanceof query_1.Query) {\n\t                query = tableName;\n\t                tableName = null;\n\t            }\n\t            var res = this.adaptor.update(this, keyField, value, tableName, query);\n\t            if (this.dataSource.offline) {\n\t                return res;\n\t            }\n\t            return this.doAjaxRequest(res);\n\t        };\n\t        DataManager.prototype.doAjaxRequest = function (res) {\n\t            var _this = this;\n\t            var defer = new Deferred();\n\t            res = ej2_base_2.extend({}, {\n\t                type: 'POST',\n\t                contentType: 'application/json; charset=utf-8',\n\t                processData: false\n\t            }, res);\n\t            var ajax = new ej2_base_1.Ajax(res);\n\t            ajax.beforeSend = function () {\n\t                _this.beforeSend(ajax.httpRequest, ajax);\n\t            };\n\t            ajax.onSuccess = function (record, request) {\n\t                try {\n\t                    util_1.DataUtil.parse.parseJson(record);\n\t                }\n\t                catch (e) {\n\t                    record = [];\n\t                }\n\t                record = _this.adaptor.processResponse(util_1.DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n\t                defer.resolve(_this, [{ record: record, dataManager: _this }]);\n\t            };\n\t            ajax.onFailure = function (e) {\n\t                defer.reject([{ error: e }]);\n\t            };\n\t            ajax.send().catch(function (e) { return true; });\n\t            return defer.promise;\n\t        };\n\t        return DataManager;\n\t    }());\n\t    exports.DataManager = DataManager;\n\t    var Deferred = (function () {\n\t        function Deferred() {\n\t            var _this = this;\n\t            this.promise = new Promise(function (resolve, reject) {\n\t                _this.resolve = resolve;\n\t                _this.reject = reject;\n\t            });\n\t            this.then = this.promise.then.bind(this.promise);\n\t            this.catch = this.promise.catch.bind(this.promise);\n\t        }\n\t        return Deferred;\n\t    }());\n\t    exports.Deferred = Deferred;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, manager_1, query_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var consts = { GroupGuid: '{271bbba0-1ee7}' };\n\t    var DataUtil = (function () {\n\t        function DataUtil() {\n\t        }\n\t        DataUtil.getValue = function (value, inst) {\n\t            if (typeof value === 'function') {\n\t                return value.call(inst || {});\n\t            }\n\t            return value;\n\t        };\n\t        DataUtil.endsWith = function (input, substr) {\n\t            return input.slice(-substr.length) === substr;\n\t        };\n\t        DataUtil.startsWith = function (input, start) {\n\t            return input.slice(0, start.length) === start;\n\t        };\n\t        DataUtil.fnSort = function (order) {\n\t            order = order ? order.toLowerCase() : 'ascending';\n\t            if (order === 'ascending') {\n\t                return this.fnAscending;\n\t            }\n\t            return this.fnDescending;\n\t        };\n\t        DataUtil.fnAscending = function (x, y) {\n\t            if (y === null || y === undefined) {\n\t                return -1;\n\t            }\n\t            if (typeof x === 'string') {\n\t                return x.localeCompare(y);\n\t            }\n\t            if (x === null || x === undefined) {\n\t                return 1;\n\t            }\n\t            return x - y;\n\t        };\n\t        DataUtil.fnDescending = function (x, y) {\n\t            if (y === null || y === undefined) {\n\t                return 1;\n\t            }\n\t            if (typeof x === 'string') {\n\t                return x.localeCompare(y) * -1;\n\t            }\n\t            if (x === null || x === undefined) {\n\t                return -1;\n\t            }\n\t            return y - x;\n\t        };\n\t        DataUtil.extractFields = function (obj, fields) {\n\t            var newObj = {};\n\t            if (fields.length === 1) {\n\t                return this.getObject(fields[0], obj);\n\t            }\n\t            for (var i = 0; i < fields.length; i++) {\n\t                newObj[fields[i].replace('.', '_')] = this.getObject(fields[i], obj);\n\t            }\n\t            return newObj;\n\t        };\n\t        DataUtil.select = function (jsonArray, fields) {\n\t            var newData = [];\n\t            for (var i = 0; i < jsonArray.length; i++) {\n\t                newData.push(this.extractFields(jsonArray[i], fields));\n\t            }\n\t            return newData;\n\t        };\n\t        DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n\t            level = level || 1;\n\t            var jsonData = jsonArray;\n\t            var guid = 'GroupGuid';\n\t            if (jsonData.GroupGuid === consts[guid]) {\n\t                var _loop_1 = function (j) {\n\t                    if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                        var indx = -1;\n\t                        var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n\t                        indx = groupDs.indexOf(temp[0]);\n\t                        jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n\t                        jsonData[j].count = groupDs[indx].count;\n\t                    }\n\t                    else {\n\t                        jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n\t                        jsonData[j].count = jsonData[j].items.length;\n\t                    }\n\t                };\n\t                var this_1 = this;\n\t                for (var j = 0; j < jsonData.length; j++) {\n\t                    _loop_1(j);\n\t                }\n\t                jsonData.childLevels += 1;\n\t                return jsonData;\n\t            }\n\t            var grouped = {};\n\t            var groupedArray = [];\n\t            groupedArray.GroupGuid = consts[guid];\n\t            groupedArray.level = level;\n\t            groupedArray.childLevels = 0;\n\t            groupedArray.records = jsonData;\n\t            var _loop_2 = function (i) {\n\t                var val = this_2.getVal(jsonData, i, field);\n\t                if (!ej2_base_1.isNullOrUndefined(format)) {\n\t                    val = format(val, field);\n\t                }\n\t                if (!grouped[val]) {\n\t                    grouped[val] = {\n\t                        key: val,\n\t                        count: 0,\n\t                        items: [],\n\t                        aggregates: {},\n\t                        field: field\n\t                    };\n\t                    groupedArray.push(grouped[val]);\n\t                    if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                        var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n\t                        grouped[val].count = tempObj[0].count;\n\t                    }\n\t                }\n\t                grouped[val].count = !ej2_base_1.isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n\t                grouped[val].items.push(jsonData[i]);\n\t            };\n\t            var this_2 = this;\n\t            for (var i = 0; i < jsonData.length; i++) {\n\t                _loop_2(i);\n\t            }\n\t            if (aggregates && aggregates.length) {\n\t                var _loop_3 = function (i) {\n\t                    var res = {};\n\t                    var fn = void 0;\n\t                    var aggs = aggregates;\n\t                    for (var j = 0; j < aggregates.length; j++) {\n\t                        fn = DataUtil.aggregates[aggregates[j].type];\n\t                        if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                            var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n\t                            if (fn) {\n\t                                res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n\t                            }\n\t                        }\n\t                        else {\n\t                            if (fn) {\n\t                                res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n\t                            }\n\t                        }\n\t                    }\n\t                    groupedArray[i].aggregates = res;\n\t                };\n\t                for (var i = 0; i < groupedArray.length; i++) {\n\t                    _loop_3(i);\n\t                }\n\t            }\n\t            return groupedArray;\n\t        };\n\t        DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n\t            var i;\n\t            var grp = {};\n\t            var temp;\n\t            if (lookup.result) {\n\t                lookup = lookup.result;\n\t            }\n\t            if (lookup.GroupGuid) {\n\t                this.throwError('DataManager: Do not have support Grouping in hierarchy');\n\t            }\n\t            for (i = 0; i < lookup.length; i++) {\n\t                var fKeyData = this.getObject(fKey, lookup[i]);\n\t                temp = grp[fKeyData] || (grp[fKeyData] = []);\n\t                temp.push(lookup[i]);\n\t            }\n\t            for (i = 0; i < source.length; i++) {\n\t                var fKeyData = this.getObject(pKey || fKey, source[i]);\n\t                source[i][from] = grp[fKeyData];\n\t            }\n\t        };\n\t        DataUtil.getFieldList = function (obj, fields, prefix) {\n\t            if (prefix === undefined) {\n\t                prefix = '';\n\t            }\n\t            if (fields === undefined || fields === null) {\n\t                return this.getFieldList(obj, [], prefix);\n\t            }\n\t            var copyObj = obj;\n\t            var keys = Object.keys(obj);\n\t            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n\t                var prop = keys_1[_i];\n\t                if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n\t                    this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n\t                }\n\t                else {\n\t                    fields.push(prefix + prop);\n\t                }\n\t            }\n\t            return fields;\n\t        };\n\t        DataUtil.getObject = function (nameSpace, from) {\n\t            if (!nameSpace) {\n\t                return from;\n\t            }\n\t            if (nameSpace.indexOf('.') === -1) {\n\t                return from[nameSpace];\n\t            }\n\t            var value = from;\n\t            var splits = nameSpace.split('.');\n\t            for (var i = 0; i < splits.length; i++) {\n\t                if (value == null) {\n\t                    break;\n\t                }\n\t                value = value[splits[i]];\n\t            }\n\t            return value;\n\t        };\n\t        DataUtil.sort = function (ds, field, comparer) {\n\t            if (ds.length <= 1) {\n\t                return ds;\n\t            }\n\t            var middle = parseInt((ds.length / 2).toString(), 10);\n\t            var left = ds.slice(0, middle);\n\t            var right = ds.slice(middle);\n\t            left = this.sort(left, field, comparer);\n\t            right = this.sort(right, field, comparer);\n\t            return this.merge(left, right, field, comparer);\n\t        };\n\t        DataUtil.merge = function (left, right, fieldName, comparer) {\n\t            var result = [];\n\t            var current;\n\t            while (left.length > 0 || right.length > 0) {\n\t                if (left.length > 0 && right.length > 0) {\n\t                    if (comparer) {\n\t                        current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName)) <= 0 ? left : right;\n\t                    }\n\t                    else {\n\t                        current = left[0][fieldName] < left[0][fieldName] ? left : right;\n\t                    }\n\t                }\n\t                else {\n\t                    current = left.length > 0 ? left : right;\n\t                }\n\t                result.push(current.shift());\n\t            }\n\t            return result;\n\t        };\n\t        DataUtil.getVal = function (array, index, field) {\n\t            return field ? this.getObject(field, array[index]) : array[index];\n\t        };\n\t        DataUtil.toLowerCase = function (val) {\n\t            return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n\t        };\n\t        DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n\t            if (fnName in adaptor) {\n\t                var res = adaptor[fnName](param1, param2);\n\t                if (!this.fnOperators.isnull(res)) {\n\t                    param1 = res;\n\t                }\n\t            }\n\t            return param1;\n\t        };\n\t        DataUtil.isPlainObject = function (obj) {\n\t            return (!!obj) && (obj.constructor === Object);\n\t        };\n\t        DataUtil.isCors = function () {\n\t            var xhr = null;\n\t            var request = 'XMLHttpRequest';\n\t            try {\n\t                xhr = new window[request]();\n\t            }\n\t            catch (e) {\n\t            }\n\t            return !!xhr && ('withCredentials' in xhr);\n\t        };\n\t        DataUtil.getGuid = function (prefix) {\n\t            var hexs = '0123456789abcdef';\n\t            var rand;\n\t            return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n\t                if ('crypto' in window && 'getRandomValues' in crypto) {\n\t                    var arr = new Uint8Array(1);\n\t                    window.crypto.getRandomValues(arr);\n\t                    rand = arr[0] % 16 | 0;\n\t                }\n\t                else {\n\t                    rand = Math.random() * 16 | 0;\n\t                }\n\t                return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n\t            });\n\t        };\n\t        DataUtil.isNull = function (val) {\n\t            return val === undefined || val === null;\n\t        };\n\t        DataUtil.getItemFromComparer = function (array, field, comparer) {\n\t            var keyVal;\n\t            var current;\n\t            var key;\n\t            var i = 0;\n\t            var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n\t            if (array.length) {\n\t                while (ej2_base_1.isNullOrUndefined(keyVal) && i < array.length) {\n\t                    keyVal = DataUtil.getVal(array, i, field);\n\t                    key = array[i++];\n\t                }\n\t            }\n\t            for (; i < array.length; i++) {\n\t                current = DataUtil.getVal(array, i, field);\n\t                if (ej2_base_1.isNullOrUndefined(current)) {\n\t                    continue;\n\t                }\n\t                if (castRequired) {\n\t                    keyVal = +keyVal;\n\t                    current = +current;\n\t                }\n\t                if (comparer(keyVal, current) > 0) {\n\t                    keyVal = current;\n\t                    key = array[i];\n\t                }\n\t            }\n\t            return key;\n\t        };\n\t        DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n\t            requiresCompleteRecord = ej2_base_1.isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n\t            var result = [];\n\t            var val;\n\t            var tmp = {};\n\t            json.forEach(function (data, index) {\n\t                val = DataUtil.getVal(json, index, fieldName);\n\t                if (!(val in tmp)) {\n\t                    result.push(!requiresCompleteRecord ? val : json[index]);\n\t                    tmp[val] = 1;\n\t                }\n\t            });\n\t            return result;\n\t        };\n\t        DataUtil.serverTimezoneOffset = 0;\n\t        DataUtil.throwError = function (error) {\n\t            try {\n\t                throw new Error(error);\n\t            }\n\t            catch (e) {\n\t                throw e.message + '\\n' + e.stack;\n\t            }\n\t        };\n\t        DataUtil.aggregates = {\n\t            sum: function (ds, field) {\n\t                var result = 0;\n\t                var val;\n\t                var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n\t                for (var i = 0; i < ds.length; i++) {\n\t                    val = DataUtil.getVal(ds, i, field);\n\t                    if (!isNaN(val) && val !== null) {\n\t                        if (castRequired) {\n\t                            val = +val;\n\t                        }\n\t                        result += val;\n\t                    }\n\t                }\n\t                return result;\n\t            },\n\t            average: function (ds, field) {\n\t                return DataUtil.aggregates.sum(ds, field) / ds.length;\n\t            },\n\t            min: function (ds, field) {\n\t                var comparer;\n\t                if (typeof field === 'function') {\n\t                    comparer = field;\n\t                    field = null;\n\t                }\n\t                return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n\t            },\n\t            max: function (ds, field) {\n\t                var comparer;\n\t                if (typeof field === 'function') {\n\t                    comparer = field;\n\t                    field = null;\n\t                }\n\t                return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n\t            },\n\t            truecount: function (ds, field) {\n\t                return new manager_1.DataManager(ds).executeLocal(new query_1.Query().where(field, 'equal', true, true)).length;\n\t            },\n\t            falsecount: function (ds, field) {\n\t                return new manager_1.DataManager(ds).executeLocal(new query_1.Query().where(field, 'equal', false, true)).length;\n\t            },\n\t            count: function (ds, field) {\n\t                return ds.length;\n\t            }\n\t        };\n\t        DataUtil.operatorSymbols = {\n\t            '<': 'lessthan',\n\t            '>': 'greaterthan',\n\t            '<=': 'lessthanorequal',\n\t            '>=': 'greaterthanorequal',\n\t            '==': 'equal',\n\t            '!=': 'notequal',\n\t            '*=': 'contains',\n\t            '$=': 'endswith',\n\t            '^=': 'startswith'\n\t        };\n\t        DataUtil.odBiOperator = {\n\t            '<': ' lt ',\n\t            '>': ' gt ',\n\t            '<=': ' le ',\n\t            '>=': ' ge ',\n\t            '==': ' eq ',\n\t            '!=': ' ne ',\n\t            'lessthan': ' lt ',\n\t            'lessthanorequal': ' le ',\n\t            'greaterthan': ' gt ',\n\t            'greaterthanorequal': ' ge ',\n\t            'equal': ' eq ',\n\t            'notequal': ' ne '\n\t        };\n\t        DataUtil.odUniOperator = {\n\t            '$=': 'endswith',\n\t            '^=': 'startswith',\n\t            '*=': 'substringof',\n\t            'endswith': 'endswith',\n\t            'startswith': 'startswith',\n\t            'contains': 'substringof'\n\t        };\n\t        DataUtil.odv4UniOperator = {\n\t            '$=': 'endswith',\n\t            '^=': 'startswith',\n\t            '*=': 'contains',\n\t            'endswith': 'endswith',\n\t            'startswith': 'startswith',\n\t            'contains': 'contains'\n\t        };\n\t        DataUtil.fnOperators = {\n\t            equal: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n\t                }\n\t                return actual === expected;\n\t            },\n\t            notequal: function (actual, expected, ignoreCase) {\n\t                return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n\t            },\n\t            lessthan: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n\t                }\n\t                return actual < expected;\n\t            },\n\t            greaterthan: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n\t                }\n\t                return actual > expected;\n\t            },\n\t            lessthanorequal: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n\t                }\n\t                return actual <= expected;\n\t            },\n\t            greaterthanorequal: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n\t                }\n\t                return actual >= expected;\n\t            },\n\t            contains: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return !ej2_base_1.isNullOrUndefined(actual) && !ej2_base_1.isNullOrUndefined(expected) &&\n\t                        DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n\t                }\n\t                return !ej2_base_1.isNullOrUndefined(actual) && !ej2_base_1.isNullOrUndefined(expected) &&\n\t                    actual.toString().indexOf(expected) !== -1;\n\t            },\n\t            notnull: function (actual) {\n\t                return actual !== null;\n\t            },\n\t            isnull: function (actual) {\n\t                return actual === null;\n\t            },\n\t            startswith: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return actual && expected && DataUtil.startsWith(actual.toLowerCase(), expected.toLowerCase());\n\t                }\n\t                return actual && expected && DataUtil.startsWith(actual, expected);\n\t            },\n\t            endswith: function (actual, expected, ignoreCase) {\n\t                if (ignoreCase) {\n\t                    return actual && expected && DataUtil.endsWith(actual.toLowerCase(), expected.toLowerCase());\n\t                }\n\t                return actual && expected && DataUtil.endsWith(actual, expected);\n\t            },\n\t            processSymbols: function (operator) {\n\t                var fnName = DataUtil.operatorSymbols[operator];\n\t                if (fnName) {\n\t                    var fn = DataUtil.fnOperators[fnName];\n\t                    return fn;\n\t                }\n\t                return DataUtil.throwError('Query - Process Operator : Invalid operator');\n\t            },\n\t            processOperator: function (operator) {\n\t                var fn = DataUtil.fnOperators[operator];\n\t                if (fn) {\n\t                    return fn;\n\t                }\n\t                return DataUtil.fnOperators.processSymbols(operator);\n\t            }\n\t        };\n\t        DataUtil.parse = {\n\t            parseJson: function (jsonText) {\n\t                if (typeof jsonText === 'string') {\n\t                    jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n\t                }\n\t                else if (jsonText instanceof Array) {\n\t                    DataUtil.parse.iterateAndReviveArray(jsonText);\n\t                }\n\t                else if (typeof jsonText === 'object') {\n\t                    DataUtil.parse.iterateAndReviveJson(jsonText);\n\t                }\n\t                return jsonText;\n\t            },\n\t            iterateAndReviveArray: function (array) {\n\t                for (var i = 0; i < array.length; i++) {\n\t                    if (typeof array[i] === 'object') {\n\t                        DataUtil.parse.iterateAndReviveJson(array[i]);\n\t                    }\n\t                    else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{|\\\"/g.test(array[i])) {\n\t                        array[i] = DataUtil.parse.jsonReviver('', array[i]);\n\t                    }\n\t                    else {\n\t                        array[i] = DataUtil.parse.parseJson(array[i]);\n\t                    }\n\t                }\n\t            },\n\t            iterateAndReviveJson: function (json) {\n\t                var value;\n\t                var keys = Object.keys(json);\n\t                for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n\t                    var prop = keys_2[_i];\n\t                    if (DataUtil.startsWith(prop, '__')) {\n\t                        continue;\n\t                    }\n\t                    value = json[prop];\n\t                    if (typeof value === 'object') {\n\t                        if (value instanceof Array) {\n\t                            DataUtil.parse.iterateAndReviveArray(value);\n\t                        }\n\t                        else if (value) {\n\t                            DataUtil.parse.iterateAndReviveJson(value);\n\t                        }\n\t                    }\n\t                    else {\n\t                        json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n\t                    }\n\t                }\n\t            },\n\t            jsonReviver: function (field, value) {\n\t                var dupValue = value;\n\t                if (typeof value === 'string') {\n\t                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n\t                    if (ms) {\n\t                        return DataUtil.parse.jsonReplacer({ value: new Date(parseInt(ms[1], 10)) }, false).value;\n\t                    }\n\t                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n\t                        var arr = dupValue.split(/[^0-9]/);\n\t                        value = DataUtil.parse.jsonReplacer({\n\t                            value: new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10))\n\t                        }, false).value;\n\t                    }\n\t                }\n\t                return value;\n\t            },\n\t            isJson: function (jsonData) {\n\t                if (typeof jsonData[0] === 'string') {\n\t                    return jsonData;\n\t                }\n\t                return DataUtil.parse.parseJson(jsonData);\n\t            },\n\t            isGuid: function (value) {\n\t                var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n\t                var match = regex.exec(value);\n\t                return match != null;\n\t            },\n\t            replacer: function (value, stringify) {\n\t                if (DataUtil.isPlainObject(value)) {\n\t                    return DataUtil.parse.jsonReplacer(value, stringify);\n\t                }\n\t                if (value instanceof Array) {\n\t                    return DataUtil.parse.arrayReplacer(value);\n\t                }\n\t                if (value instanceof Date) {\n\t                    return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n\t                }\n\t                return value;\n\t            },\n\t            jsonReplacer: function (val, stringify) {\n\t                if (stringify === void 0) { stringify = true; }\n\t                var value;\n\t                var keys = Object.keys(val);\n\t                for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n\t                    var prop = keys_3[_i];\n\t                    value = val[prop];\n\t                    if (!(value instanceof Date)) {\n\t                        continue;\n\t                    }\n\t                    var d = value;\n\t                    var unixstamp = +d - (d.getTimezoneOffset() * 60000);\n\t                    val[prop] = new Date(unixstamp - (DataUtil.serverTimezoneOffset * 3600000));\n\t                    if (stringify) {\n\t                        val[prop] = val[prop].toJSON();\n\t                    }\n\t                }\n\t                return val;\n\t            },\n\t            arrayReplacer: function (val) {\n\t                for (var i = 0; i < val.length; i++) {\n\t                    if (DataUtil.isPlainObject(val[i])) {\n\t                        val[i] = DataUtil.parse.jsonReplacer(val[i]);\n\t                    }\n\t                    else if (val[i] instanceof Date) {\n\t                        val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n\t                    }\n\t                }\n\t                return val;\n\t            }\n\t        };\n\t        return DataUtil;\n\t    }());\n\t    exports.DataUtil = DataUtil;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, util_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var Query = (function () {\n\t        function Query(from) {\n\t            this.subQuery = null;\n\t            this.isChild = false;\n\t            this.queries = [];\n\t            this.key = '';\n\t            this.fKey = '';\n\t            if (typeof from === 'string') {\n\t                this.fromTable = from;\n\t            }\n\t            else if (from && from instanceof Array) {\n\t                this.lookups = from;\n\t            }\n\t            this.expands = [];\n\t            this.sortedColumns = [];\n\t            this.groupedColumns = [];\n\t            this.subQuery = null;\n\t            this.isChild = false;\n\t            this.params = [];\n\t            return this;\n\t        }\n\t        Query.prototype.setKey = function (field) {\n\t            this.key = field;\n\t            return this;\n\t        };\n\t        Query.prototype.using = function (dataManager) {\n\t            this.dataManager = dataManager;\n\t            return this;\n\t        };\n\t        Query.prototype.execute = function (dataManager, done, fail, always) {\n\t            dataManager = dataManager || this.dataManager;\n\t            if (dataManager) {\n\t                return dataManager.executeQuery(this, done, fail, always);\n\t            }\n\t            return util_1.DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n\t        };\n\t        Query.prototype.executeLocal = function (dataManager) {\n\t            dataManager = dataManager || this.dataManager;\n\t            if (dataManager) {\n\t                return dataManager.executeLocal(this);\n\t            }\n\t            return util_1.DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n\t        };\n\t        Query.prototype.clone = function () {\n\t            var cloned = new Query();\n\t            cloned.queries = this.queries.slice(0);\n\t            cloned.key = this.key;\n\t            cloned.isChild = this.isChild;\n\t            cloned.dataManager = this.dataManager;\n\t            cloned.fromTable = this.fromTable;\n\t            cloned.params = this.params.slice(0);\n\t            cloned.expands = this.expands.slice(0);\n\t            cloned.sortedColumns = this.sortedColumns.slice(0);\n\t            cloned.groupedColumns = this.groupedColumns.slice(0);\n\t            cloned.subQuerySelector = this.subQuerySelector;\n\t            cloned.subQuery = this.subQuery;\n\t            cloned.fKey = this.fKey;\n\t            cloned.isCountRequired = this.isCountRequired;\n\t            return cloned;\n\t        };\n\t        Query.prototype.from = function (tableName) {\n\t            this.fromTable = tableName;\n\t            return this;\n\t        };\n\t        Query.prototype.addParams = function (key, value) {\n\t            if (typeof value === 'function') {\n\t                this.params.push({ key: key, fn: value });\n\t            }\n\t            else {\n\t                this.params.push({ key: key, value: value });\n\t            }\n\t            return this;\n\t        };\n\t        Query.prototype.expand = function (tables) {\n\t            if (typeof tables === 'string') {\n\t                this.expands = [].slice.call([tables], 0);\n\t            }\n\t            else {\n\t                this.expands = tables.slice(0);\n\t            }\n\t            return this;\n\t        };\n\t        Query.prototype.where = function (fieldName, operator, value, ignoreCase) {\n\t            operator = operator ? (operator).toLowerCase() : null;\n\t            var predicate = null;\n\t            if (typeof fieldName === 'string') {\n\t                predicate = new Predicate(fieldName, operator, value, ignoreCase);\n\t            }\n\t            else if (fieldName instanceof Predicate) {\n\t                predicate = fieldName;\n\t            }\n\t            this.queries.push({\n\t                fn: 'onWhere',\n\t                e: predicate\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase) {\n\t            if (typeof fieldNames === 'string') {\n\t                fieldNames = [fieldNames];\n\t            }\n\t            operator = operator || 'contains';\n\t            var comparer = util_1.DataUtil.fnOperators[operator];\n\t            this.queries.push({\n\t                fn: 'onSearch',\n\t                e: {\n\t                    fieldNames: fieldNames,\n\t                    operator: operator,\n\t                    searchKey: searchKey,\n\t                    ignoreCase: ignoreCase,\n\t                    comparer: comparer\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n\t            var order = 'ascending';\n\t            var sorts;\n\t            var temp;\n\t            if (typeof fieldName === 'string' && util_1.DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n\t                fieldName = fieldName.replace(/ desc$/i, '');\n\t                comparer = 'descending';\n\t            }\n\t            if (!comparer || typeof comparer === 'string') {\n\t                order = comparer ? comparer.toLowerCase() : 'ascending';\n\t                comparer = util_1.DataUtil.fnSort(comparer);\n\t            }\n\t            if (isFromGroup) {\n\t                sorts = Query.filterQueries(this.queries, 'onSortBy');\n\t                for (var i = 0; i < sorts.length; i++) {\n\t                    temp = sorts[i].e.fieldName;\n\t                    if (typeof temp === 'string') {\n\t                        if (temp === fieldName) {\n\t                            return this;\n\t                        }\n\t                    }\n\t                    else if (temp instanceof Array) {\n\t                        for (var j = 0; j < temp.length; j++) {\n\t                            if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n\t                                return this;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            this.queries.push({\n\t                fn: 'onSortBy',\n\t                e: {\n\t                    fieldName: fieldName,\n\t                    comparer: comparer,\n\t                    direction: order\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.sortByDesc = function (fieldName) {\n\t            return this.sortBy(fieldName, 'descending');\n\t        };\n\t        Query.prototype.group = function (fieldName, fn, format) {\n\t            this.sortBy(fieldName, null, true);\n\t            this.queries.push({\n\t                fn: 'onGroup',\n\t                e: {\n\t                    fieldName: fieldName,\n\t                    comparer: fn ? fn : null,\n\t                    format: format ? format : null\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.page = function (pageIndex, pageSize) {\n\t            this.queries.push({\n\t                fn: 'onPage',\n\t                e: {\n\t                    pageIndex: pageIndex,\n\t                    pageSize: pageSize\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.range = function (start, end) {\n\t            this.queries.push({\n\t                fn: 'onRange',\n\t                e: {\n\t                    start: start,\n\t                    end: end\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.take = function (nos) {\n\t            this.queries.push({\n\t                fn: 'onTake',\n\t                e: {\n\t                    nos: nos\n\t                }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.skip = function (nos) {\n\t            this.queries.push({\n\t                fn: 'onSkip',\n\t                e: { nos: nos }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.select = function (fieldNames) {\n\t            if (typeof fieldNames === 'string') {\n\t                fieldNames = [].slice.call([fieldNames], 0);\n\t            }\n\t            this.queries.push({\n\t                fn: 'onSelect',\n\t                e: { fieldNames: fieldNames }\n\t            });\n\t            return this;\n\t        };\n\t        Query.prototype.hierarchy = function (query, selectorFn) {\n\t            this.subQuerySelector = selectorFn;\n\t            this.subQuery = query;\n\t            return this;\n\t        };\n\t        Query.prototype.foreignKey = function (key) {\n\t            this.fKey = key;\n\t            return this;\n\t        };\n\t        Query.prototype.requiresCount = function () {\n\t            this.isCountRequired = true;\n\t            return this;\n\t        };\n\t        Query.prototype.aggregate = function (type, field) {\n\t            this.queries.push({\n\t                fn: 'onAggregates',\n\t                e: { field: field, type: type }\n\t            });\n\t            return this;\n\t        };\n\t        Query.filterQueries = function (queries, name) {\n\t            return queries.filter(function (q) {\n\t                return q.fn === name;\n\t            });\n\t        };\n\t        Query.filterQueryLists = function (queries, singles) {\n\t            var filtered = queries.filter(function (q) {\n\t                return singles.indexOf(q.fn) !== -1;\n\t            });\n\t            var res = {};\n\t            for (var i = 0; i < filtered.length; i++) {\n\t                if (!res[filtered[i].fn]) {\n\t                    res[filtered[i].fn] = filtered[i].e;\n\t                }\n\t            }\n\t            return res;\n\t        };\n\t        return Query;\n\t    }());\n\t    exports.Query = Query;\n\t    var Predicate = (function () {\n\t        function Predicate(field, operator, value, ignoreCase) {\n\t            if (ignoreCase === void 0) { ignoreCase = false; }\n\t            this.isComplex = false;\n\t            if (typeof field === 'string') {\n\t                this.field = field;\n\t                this.operator = operator.toLowerCase();\n\t                this.value = value;\n\t                this.ignoreCase = ignoreCase;\n\t                this.isComplex = false;\n\t                this.comparer = util_1.DataUtil.fnOperators.processOperator(this.operator);\n\t            }\n\t            else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n\t                this.isComplex = true;\n\t                this.condition = operator.toLowerCase();\n\t                this.predicates = [field];\n\t                if (value instanceof Array) {\n\t                    [].push.apply(this.predicates, value);\n\t                }\n\t                else {\n\t                    this.predicates.push(value);\n\t                }\n\t            }\n\t            return this;\n\t        }\n\t        Predicate.and = function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i] = arguments[_i];\n\t            }\n\t            return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n\t        };\n\t        Predicate.prototype.and = function (field, operator, value, ignoreCase) {\n\t            return Predicate.combine(this, field, operator, value, 'and', ignoreCase);\n\t        };\n\t        Predicate.or = function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i] = arguments[_i];\n\t            }\n\t            return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n\t        };\n\t        Predicate.prototype.or = function (field, operator, value, ignoreCase) {\n\t            return Predicate.combine(this, field, operator, value, 'or', ignoreCase);\n\t        };\n\t        Predicate.fromJson = function (json) {\n\t            if (json instanceof Array) {\n\t                var res = [];\n\t                for (var i = 0, len = json.length; i < len; i++) {\n\t                    res.push(this.fromJSONData(json[i]));\n\t                }\n\t                return res;\n\t            }\n\t            var pred = json;\n\t            return this.fromJSONData(pred);\n\t        };\n\t        Predicate.prototype.validate = function (record) {\n\t            var predicate = this.predicates ? this.predicates : [];\n\t            var isAnd;\n\t            var ret;\n\t            if (!this.isComplex && this.comparer) {\n\t                return this.comparer.call(this, util_1.DataUtil.getObject(this.field, record), this.value, this.ignoreCase);\n\t            }\n\t            isAnd = this.condition === 'and';\n\t            for (var i = 0; i < predicate.length; i++) {\n\t                ret = predicate[i].validate(record);\n\t                if (isAnd) {\n\t                    if (!ret) {\n\t                        return false;\n\t                    }\n\t                }\n\t                else {\n\t                    if (ret) {\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t            return isAnd;\n\t        };\n\t        Predicate.prototype.toJson = function () {\n\t            var predicates;\n\t            var p;\n\t            if (this.isComplex) {\n\t                predicates = [];\n\t                p = this.predicates;\n\t                for (var i = 0; i < p.length; i++) {\n\t                    predicates.push(p[i].toJson());\n\t                }\n\t            }\n\t            return {\n\t                isComplex: this.isComplex,\n\t                field: this.field,\n\t                operator: this.operator,\n\t                value: this.value,\n\t                ignoreCase: this.ignoreCase,\n\t                condition: this.condition,\n\t                predicates: predicates\n\t            };\n\t        };\n\t        Predicate.combinePredicates = function (predicates, operator) {\n\t            if (predicates.length === 1) {\n\t                if (!(predicates[0] instanceof Array)) {\n\t                    return predicates[0];\n\t                }\n\t                predicates = predicates[0];\n\t            }\n\t            return new Predicate(predicates[0], operator, predicates.slice(1));\n\t        };\n\t        Predicate.combine = function (pred, field, operator, value, condition, ignoreCase) {\n\t            if (field instanceof Predicate) {\n\t                return Predicate[condition](pred, field);\n\t            }\n\t            if (typeof field === 'string') {\n\t                return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase));\n\t            }\n\t            return util_1.DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n\t        };\n\t        Predicate.fromJSONData = function (json) {\n\t            var preds = json.predicates || [];\n\t            var len = preds.length;\n\t            var predicates = [];\n\t            var result;\n\t            for (var i = 0; i < len; i++) {\n\t                predicates.push(this.fromJSONData(preds[i]));\n\t            }\n\t            if (!json.isComplex) {\n\t                result = new Predicate(json.field, json.operator, json.value, json.ignoreCase);\n\t            }\n\t            else {\n\t                result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n\t            }\n\t            return result;\n\t        };\n\t        return Predicate;\n\t    }());\n\t    exports.Predicate = Predicate;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, ej2_base_1, util_1, query_1) {\n\t    \"use strict\";\n\t    Object.defineProperty(exports, \"__esModule\", { value: true });\n\t    var Adaptor = (function () {\n\t        function Adaptor(ds) {\n\t            this.options = {\n\t                from: 'table',\n\t                requestType: 'json',\n\t                sortBy: 'sorted',\n\t                select: 'select',\n\t                skip: 'skip',\n\t                group: 'group',\n\t                take: 'take',\n\t                search: 'search',\n\t                count: 'requiresCounts',\n\t                where: 'where',\n\t                aggregates: 'aggregates'\n\t            };\n\t            this.type = Adaptor;\n\t            this.dataSource = ds;\n\t            this.pvt = {};\n\t        }\n\t        Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n\t            return data;\n\t        };\n\t        return Adaptor;\n\t    }());\n\t    exports.Adaptor = Adaptor;\n\t    var JsonAdaptor = (function (_super) {\n\t        __extends(JsonAdaptor, _super);\n\t        function JsonAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n\t            var result = dataManager.dataSource.json.slice(0);\n\t            var count = result.length;\n\t            var countFlg = true;\n\t            var ret;\n\t            var key;\n\t            var agg = {};\n\t            for (var i = 0; i < query.queries.length; i++) {\n\t                key = query.queries[i];\n\t                ret = this[key.fn].call(this, result, key.e, query);\n\t                if (key.fn === 'onAggregates') {\n\t                    agg[key.e.field + ' - ' + key.e.type] = ret;\n\t                }\n\t                else {\n\t                    result = ret !== undefined ? ret : result;\n\t                }\n\t                if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n\t                    countFlg = false;\n\t                }\n\t                if (countFlg) {\n\t                    count = result.length;\n\t                }\n\t            }\n\t            if (query.isCountRequired) {\n\t                result = {\n\t                    result: result,\n\t                    count: count,\n\t                    aggregates: agg\n\t                };\n\t            }\n\t            return result;\n\t        };\n\t        JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var i;\n\t            for (i = 0; i < changes.addedRecords.length; i++) {\n\t                this.insert(dm, changes.addedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.changedRecords.length; i++) {\n\t                this.update(dm, e.key, changes.changedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.deletedRecords.length; i++) {\n\t                this.remove(dm, e.key, changes.deletedRecords[i]);\n\t            }\n\t            return changes;\n\t        };\n\t        JsonAdaptor.prototype.onWhere = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.filter(function (obj) {\n\t                if (e) {\n\t                    return e.validate(obj);\n\t                }\n\t            });\n\t        };\n\t        JsonAdaptor.prototype.onAggregates = function (ds, e) {\n\t            var fn = util_1.DataUtil.aggregates[e.type];\n\t            if (!ds || !fn || ds.length === 0) {\n\t                return null;\n\t            }\n\t            return fn(ds, e.field);\n\t        };\n\t        JsonAdaptor.prototype.onSearch = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            if (e.fieldNames.length === 0) {\n\t                util_1.DataUtil.getFieldList(ds[0], e.fieldNames);\n\t            }\n\t            return ds.filter(function (obj) {\n\t                for (var j = 0; j < e.fieldNames.length; j++) {\n\t                    if (e.comparer.call(obj, util_1.DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase)) {\n\t                        return true;\n\t                    }\n\t                }\n\t                return false;\n\t            });\n\t        };\n\t        JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            var fnCompare;\n\t            var field = util_1.DataUtil.getValue(e.fieldName, query);\n\t            if (!field) {\n\t                return ds.sort(e.comparer);\n\t            }\n\t            if (field instanceof Array) {\n\t                field = field.slice(0);\n\t                for (var i = field.length - 1; i >= 0; i--) {\n\t                    if (!field[i]) {\n\t                        continue;\n\t                    }\n\t                    fnCompare = e.comparer;\n\t                    if (util_1.DataUtil.endsWith(field[i], ' desc')) {\n\t                        fnCompare = util_1.DataUtil.fnSort('descending');\n\t                        field[i] = field[i].replace(' desc', '');\n\t                    }\n\t                    ds = util_1.DataUtil.sort(ds, field[i], fnCompare);\n\t                }\n\t                return ds;\n\t            }\n\t            return util_1.DataUtil.sort(ds, field, e.comparer);\n\t        };\n\t        JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            var aggQuery = query_1.Query.filterQueries(query.queries, 'onAggregates');\n\t            var agg = [];\n\t            if (aggQuery.length) {\n\t                var tmp = void 0;\n\t                for (var i = 0; i < aggQuery.length; i++) {\n\t                    tmp = aggQuery[i].e;\n\t                    agg.push({ type: tmp.type, field: util_1.DataUtil.getValue(tmp.field, query) });\n\t                }\n\t            }\n\t            return util_1.DataUtil.group(ds, util_1.DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n\t        };\n\t        JsonAdaptor.prototype.onPage = function (ds, e, query) {\n\t            var size = util_1.DataUtil.getValue(e.pageSize, query);\n\t            var start = (util_1.DataUtil.getValue(e.pageIndex, query) - 1) * size;\n\t            var end = start + size;\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(start, end);\n\t        };\n\t        JsonAdaptor.prototype.onRange = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(util_1.DataUtil.getValue(e.start), util_1.DataUtil.getValue(e.end));\n\t        };\n\t        JsonAdaptor.prototype.onTake = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(0, util_1.DataUtil.getValue(e.nos));\n\t        };\n\t        JsonAdaptor.prototype.onSkip = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return ds.slice(util_1.DataUtil.getValue(e.nos));\n\t        };\n\t        JsonAdaptor.prototype.onSelect = function (ds, e) {\n\t            if (!ds || !ds.length) {\n\t                return ds;\n\t            }\n\t            return util_1.DataUtil.select(ds, util_1.DataUtil.getValue(e.fieldNames));\n\t        };\n\t        JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n\t            if (ej2_base_1.isNullOrUndefined(position)) {\n\t                return dm.dataSource.json.push(data);\n\t            }\n\t            else {\n\t                return dm.dataSource.json.splice(position, 0, data);\n\t            }\n\t        };\n\t        JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            var ds = dm.dataSource.json;\n\t            var i;\n\t            if (typeof value === 'object') {\n\t                value = value[keyField];\n\t            }\n\t            for (i = 0; i < ds.length; i++) {\n\t                if (ds[i][keyField] === value) {\n\t                    break;\n\t                }\n\t            }\n\t            return i !== ds.length ? ds.splice(i, 1) : null;\n\t        };\n\t        JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            var ds = dm.dataSource.json;\n\t            var i;\n\t            var key = value[keyField];\n\t            for (i = 0; i < ds.length; i++) {\n\t                if (ds[i][keyField] === key) {\n\t                    break;\n\t                }\n\t            }\n\t            return i < ds.length ? ej2_base_1.merge(ds[i], value) : null;\n\t        };\n\t        return JsonAdaptor;\n\t    }(Adaptor));\n\t    exports.JsonAdaptor = JsonAdaptor;\n\t    var UrlAdaptor = (function (_super) {\n\t        __extends(UrlAdaptor, _super);\n\t        function UrlAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n\t            var queries = this.getQueryRequest(query);\n\t            var singles = query_1.Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n\t            var params = query.params;\n\t            var url = dm.dataSource.url;\n\t            var temp;\n\t            var skip;\n\t            var take = null;\n\t            var options = this.options;\n\t            var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n\t            if ('onPage' in singles) {\n\t                temp = singles.onPage;\n\t                skip = util_1.DataUtil.getValue(temp.pageIndex, query);\n\t                take = util_1.DataUtil.getValue(temp.pageSize, query);\n\t                skip = (skip - 1) * take;\n\t            }\n\t            else if ('onRange' in singles) {\n\t                temp = singles.onRange;\n\t                skip = temp.start;\n\t                take = temp.end - temp.start;\n\t            }\n\t            for (var i = 0; i < queries.sorts.length; i++) {\n\t                temp = util_1.DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n\t                request.sorts.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n\t            }\n\t            if (hierarchyFilters) {\n\t                temp = this.getFiltersFrom(hierarchyFilters, query);\n\t                if (temp) {\n\t                    request.filters.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n\t                }\n\t            }\n\t            for (var i = 0; i < queries.filters.length; i++) {\n\t                request.filters.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n\t                var keys_1 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n\t                for (var _i = 0, keys_2 = keys_1; _i < keys_2.length; _i++) {\n\t                    var prop = keys_2[_i];\n\t                    if (util_1.DataUtil.isNull((request)[prop])) {\n\t                        delete request[prop];\n\t                    }\n\t                }\n\t            }\n\t            for (var i = 0; i < queries.searches.length; i++) {\n\t                temp = queries.searches[i].e;\n\t                request.searches.push(util_1.DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n\t                    fields: temp.fieldNames,\n\t                    operator: temp.operator,\n\t                    key: temp.searchKey,\n\t                    ignoreCase: temp.ignoreCase\n\t                }, query));\n\t            }\n\t            for (var i = 0; i < queries.groups.length; i++) {\n\t                request.groups.push(util_1.DataUtil.getValue(queries.groups[i].e.fieldName, query));\n\t            }\n\t            for (var i = 0; i < queries.aggregates.length; i++) {\n\t                temp = queries.aggregates[i].e;\n\t                request.aggregates.push({ type: temp.type, field: util_1.DataUtil.getValue(temp.field, query) });\n\t            }\n\t            var req = {};\n\t            this.getRequestQuery(options, query, singles, request, req);\n\t            util_1.DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n\t            var keys = Object.keys(req);\n\t            for (var _a = 0, keys_3 = keys; _a < keys_3.length; _a++) {\n\t                var prop = keys_3[_a];\n\t                if (util_1.DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n\t                    delete req[prop];\n\t                }\n\t            }\n\t            if (!(options.skip in req && options.take in req) && take !== null) {\n\t                req[options.skip] = util_1.DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n\t                req[options.take] = util_1.DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n\t            }\n\t            var p = this.pvt;\n\t            this.pvt = {};\n\t            if (this.options.requestType === 'json') {\n\t                return {\n\t                    data: JSON.stringify(req),\n\t                    url: url,\n\t                    pvtData: p,\n\t                    type: 'POST',\n\t                    contentType: 'application/json; charset=utf-8'\n\t                };\n\t            }\n\t            temp = this.convertToQueryString(req, query, dm);\n\t            temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n\t            return {\n\t                type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n\t            var param = 'param';\n\t            var req = request1;\n\t            req[options.from] = query.fromTable;\n\t            if (options.expand) {\n\t                req[options.expand] = query.expands;\n\t            }\n\t            req[options.select] = 'onSelect' in singles ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onSelect', util_1.DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n\t            req[options.count] = query.isCountRequired ? util_1.DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n\t            req[options.search] = request.searches.length ? util_1.DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n\t            req[options.skip] = 'onSkip' in singles ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onSkip', util_1.DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n\t            req[options.take] = 'onTake' in singles ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onTake', util_1.DataUtil.getValue(singles.onTake.nos, query), query) : '';\n\t            req[options.where] = request.filters.length || request.searches.length ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n\t            req[options.sortBy] = request.sorts.length ? util_1.DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n\t            req[options.group] = request.groups.length ? util_1.DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n\t            req[options.aggregates] = request.aggregates.length ?\n\t                util_1.DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n\t            req[param] = [];\n\t        };\n\t        UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n\t            return '';\n\t        };\n\t        UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var requests = request;\n\t            var pvt = requests.pvtData || {};\n\t            var groupDs = data.groupDs;\n\t            if (xhr && xhr.getResponseHeader('Content-Type') &&\n\t                xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n\t                return (query.isCountRequired ? { result: [], count: 0 } : []);\n\t            }\n\t            var d = JSON.parse(requests.data);\n\t            if (d && d.action === 'batch' && data.addedRecords) {\n\t                changes.addedRecords = data.addedRecords;\n\t                return changes;\n\t            }\n\t            if (data.d) {\n\t                data = data.d;\n\t            }\n\t            var args = {};\n\t            if ('count' in data) {\n\t                args.count = data.count;\n\t            }\n\t            args.result = data.result ? data.result : data;\n\t            this.getAggregateResult(pvt, data, args, groupDs);\n\t            return util_1.DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n\t        };\n\t        UrlAdaptor.prototype.onGroup = function (e) {\n\t            this.pvt.groups = e;\n\t            return e;\n\t        };\n\t        UrlAdaptor.prototype.onAggregates = function (e) {\n\t            this.pvt.aggregates = e;\n\t        };\n\t        UrlAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var url;\n\t            var key;\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n\t                contentType: 'application/json; charset=utf-8',\n\t                dataType: 'json',\n\t                data: JSON.stringify({\n\t                    changed: changes.changedRecords,\n\t                    added: changes.addedRecords,\n\t                    deleted: changes.deletedRecords,\n\t                    action: 'batch',\n\t                    table: e[url],\n\t                    key: e[key]\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.beforeSend = function (dm, request) {\n\t        };\n\t        UrlAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            return {\n\t                url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                data: JSON.stringify({\n\t                    value: data,\n\t                    table: tableName,\n\t                    action: 'insert'\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                data: JSON.stringify({\n\t                    key: value,\n\t                    keyColumn: keyField,\n\t                    table: tableName,\n\t                    action: 'remove'\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                data: JSON.stringify({\n\t                    value: value,\n\t                    action: 'update',\n\t                    keyColumn: keyField,\n\t                    key: value[keyField],\n\t                    table: tableName\n\t                })\n\t            };\n\t        };\n\t        UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n\t            var key = query.fKey;\n\t            var value;\n\t            var prop = key;\n\t            var pKey = query.key;\n\t            var predicats = [];\n\t            if (typeof data[0] !== 'object') {\n\t                prop = null;\n\t            }\n\t            for (var i = 0; i < data.length; i++) {\n\t                if (typeof data[0] === 'object') {\n\t                    value = util_1.DataUtil.getObject(pKey || prop, data[i]);\n\t                }\n\t                else {\n\t                    value = data[i];\n\t                }\n\t                predicats.push(new query_1.Predicate(key, 'equal', value));\n\t            }\n\t            return query_1.Predicate.or(predicats);\n\t        };\n\t        UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs) {\n\t            var pData = data;\n\t            if (data && data.result) {\n\t                pData = data.result;\n\t            }\n\t            if (pvt && pvt.aggregates && pvt.aggregates.length) {\n\t                var agg = pvt.aggregates;\n\t                var fn = void 0;\n\t                var aggregateData = pData;\n\t                var res = {};\n\t                if (data.aggregate) {\n\t                    aggregateData = data.aggregate;\n\t                }\n\t                for (var i = 0; i < agg.length; i++) {\n\t                    fn = util_1.DataUtil.aggregates[agg[i].type];\n\t                    if (fn) {\n\t                        res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n\t                    }\n\t                }\n\t                args.aggregates = res;\n\t            }\n\t            if (pvt && pvt.groups && pvt.groups.length) {\n\t                var groups = pvt.groups;\n\t                for (var i = 0; i < groups.length; i++) {\n\t                    var level = null;\n\t                    if (!ej2_base_1.isNullOrUndefined(groupDs)) {\n\t                        groupDs = util_1.DataUtil.group(groupDs, groups[i]);\n\t                    }\n\t                    pData = util_1.DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs);\n\t                }\n\t                args.result = pData;\n\t            }\n\t            return args;\n\t        };\n\t        UrlAdaptor.prototype.getQueryRequest = function (query) {\n\t            var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n\t            req.sorts = query_1.Query.filterQueries(query.queries, 'onSortBy');\n\t            req.groups = query_1.Query.filterQueries(query.queries, 'onGroup');\n\t            req.filters = query_1.Query.filterQueries(query.queries, 'onWhere');\n\t            req.searches = query_1.Query.filterQueries(query.queries, 'onSearch');\n\t            req.aggregates = query_1.Query.filterQueries(query.queries, 'onAggregates');\n\t            return req;\n\t        };\n\t        UrlAdaptor.prototype.addParams = function (options) {\n\t            var req = options.reqParams;\n\t            if (options.params.length) {\n\t                req.params = {};\n\t            }\n\t            for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n\t                var tmp = _a[_i];\n\t                if (req[tmp.key]) {\n\t                    throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n\t                }\n\t                req[tmp.key] = tmp.value;\n\t                if (tmp.fn) {\n\t                    req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n\t                }\n\t                req.params[tmp.key] = req[tmp.key];\n\t            }\n\t        };\n\t        return UrlAdaptor;\n\t    }(Adaptor));\n\t    exports.UrlAdaptor = UrlAdaptor;\n\t    var ODataAdaptor = (function (_super) {\n\t        __extends(ODataAdaptor, _super);\n\t        function ODataAdaptor() {\n\t            var _this = _super.call(this) || this;\n\t            _this.options = ej2_base_1.extend({}, _this.options, {\n\t                requestType: 'get',\n\t                accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n\t                multipartAccept: 'multipart/mixed',\n\t                sortBy: '$orderby',\n\t                select: '$select',\n\t                skip: '$skip',\n\t                take: '$top',\n\t                count: '$inlinecount',\n\t                where: '$filter',\n\t                expand: '$expand',\n\t                batch: '$batch',\n\t                changeSet: '--changeset_',\n\t                batchPre: 'batch_',\n\t                contentId: 'Content-Id: ',\n\t                batchContent: 'Content-Type: multipart/mixed; boundary=',\n\t                changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n\t                batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 '\n\t            });\n\t            _this.getModuleName = ej2_base_1.getValue('getModulename', _this);\n\t            return _this;\n\t        }\n\t        ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n\t            var returnValue = '';\n\t            var operator;\n\t            var guid;\n\t            var val = predicate.value;\n\t            var type = typeof val;\n\t            var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n\t            if (val instanceof Date) {\n\t                val = 'datetime\\'' + util_1.DataUtil.parse.replacer(val) + '\\'';\n\t            }\n\t            if (type === 'string') {\n\t                val = '\\'' + val + '\\'';\n\t                if (requiresCast) {\n\t                    field = 'cast(' + field + ', \\'Edm.String\\')';\n\t                }\n\t                if (util_1.DataUtil.parse.isGuid(val)) {\n\t                    guid = 'guid';\n\t                }\n\t                if (predicate.ignoreCase) {\n\t                    if (!guid) {\n\t                        field = 'tolower(' + field + ')';\n\t                    }\n\t                    val = val.toLowerCase();\n\t                }\n\t            }\n\t            operator = util_1.DataUtil.odBiOperator[predicate.operator];\n\t            if (operator) {\n\t                returnValue += field;\n\t                returnValue += operator;\n\t                if (guid) {\n\t                    returnValue += guid;\n\t                }\n\t                return returnValue + val;\n\t            }\n\t            if (!ej2_base_1.isNullOrUndefined(this.getModuleName)) {\n\t                if (this.getModuleName() === 'ODataV4Adaptor') {\n\t                    operator = util_1.DataUtil.odv4UniOperator[predicate.operator];\n\t                }\n\t            }\n\t            else {\n\t                operator = util_1.DataUtil.odUniOperator[predicate.operator];\n\t            }\n\t            if (operator === 'substringof') {\n\t                var temp = val;\n\t                val = field;\n\t                field = temp;\n\t            }\n\t            returnValue += operator + '(';\n\t            returnValue += field + ',';\n\t            if (guid) {\n\t                returnValue += guid;\n\t            }\n\t            returnValue += val + ')';\n\t            return returnValue;\n\t        };\n\t        ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n\t            var res = [];\n\t            for (var i = 0; i < predicate.predicates.length; i++) {\n\t                res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n\t            }\n\t            return res.join(' ' + predicate.condition + ' ');\n\t        };\n\t        ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n\t            return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n\t        };\n\t        ODataAdaptor.prototype.onWhere = function (filters) {\n\t            if (this.pvt.search) {\n\t                filters.push(this.onEachWhere(this.pvt.search, null, true));\n\t            }\n\t            return filters.join(' and ');\n\t        };\n\t        ODataAdaptor.prototype.onEachSearch = function (e) {\n\t            if (e.fields && e.fields.length === 0) {\n\t                util_1.DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n\t            }\n\t            var filter = this.pvt.search || [];\n\t            for (var i = 0; i < e.fields.length; i++) {\n\t                filter.push(new query_1.Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n\t            }\n\t            this.pvt.search = filter;\n\t        };\n\t        ODataAdaptor.prototype.onSearch = function (e) {\n\t            this.pvt.search = query_1.Predicate.or(this.pvt.search);\n\t            return '';\n\t        };\n\t        ODataAdaptor.prototype.onEachSort = function (e) {\n\t            var res = [];\n\t            if (e.name instanceof Array) {\n\t                for (var i = 0; i < e.name.length; i++) {\n\t                    res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n\t                }\n\t            }\n\t            else {\n\t                res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n\t            }\n\t            return res.join(',');\n\t        };\n\t        ODataAdaptor.prototype.onSortBy = function (e) {\n\t            return e.reverse().join(',');\n\t        };\n\t        ODataAdaptor.prototype.onGroup = function (e) {\n\t            this.pvt.groups = e;\n\t            return [];\n\t        };\n\t        ODataAdaptor.prototype.onSelect = function (e) {\n\t            for (var i = 0; i < e.length; i++) {\n\t                e[i] = ODataAdaptor.getField(e[i]);\n\t            }\n\t            return e.join(',');\n\t        };\n\t        ODataAdaptor.prototype.onAggregates = function (e) {\n\t            this.pvt.aggregates = e;\n\t            return '';\n\t        };\n\t        ODataAdaptor.prototype.onCount = function (e) {\n\t            return e === true ? 'allpages' : '';\n\t        };\n\t        ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            if (util_1.DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n\t                request.setRequestHeader('Accept', this.options.multipartAccept);\n\t                request.setRequestHeader('DataServiceVersion', '2.0');\n\t                request.overrideMimeType('text/plain; charset=x-user-defined');\n\t            }\n\t            else {\n\t                request.setRequestHeader('Accept', this.options.accept);\n\t            }\n\t            request.setRequestHeader('DataServiceVersion', '2.0');\n\t            request.setRequestHeader('MaxDataServiceVersion', '2.0');\n\t        };\n\t        ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var pvtData = 'pvtData';\n\t            if (!ej2_base_1.isNullOrUndefined(data.d)) {\n\t                var dataCopy = (query && query.isCountRequired) ? data.d.results : data.d;\n\t                var metaData = '__metadata';\n\t                if (!ej2_base_1.isNullOrUndefined(dataCopy)) {\n\t                    for (var i = 0; i < dataCopy.length; i++) {\n\t                        if (!ej2_base_1.isNullOrUndefined(dataCopy[i][metaData])) {\n\t                            delete dataCopy[i][metaData];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            var pvt = request && request[pvtData];\n\t            var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n\t            if (emptyAndBatch) {\n\t                return emptyAndBatch;\n\t            }\n\t            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n\t            var count = null;\n\t            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n\t            if (query && query.isCountRequired) {\n\t                var oDataCount = '__count';\n\t                if (data[oDataCount] || data['odata.count']) {\n\t                    count = data[oDataCount] || data['odata.count'];\n\t                }\n\t                if (data.d) {\n\t                    data = data.d;\n\t                }\n\t                if (data[oDataCount] || data['odata.count']) {\n\t                    count = data[oDataCount] || data['odata.count'];\n\t                }\n\t            }\n\t            if (version === 3 && data.value) {\n\t                data = data.value;\n\t            }\n\t            if (data.d) {\n\t                data = data.d;\n\t            }\n\t            if (version < 3 && data.results) {\n\t                data = data.results;\n\t            }\n\t            var args = {};\n\t            args.count = count;\n\t            args.result = data;\n\t            this.getAggregateResult(pvt, data, args);\n\t            return util_1.DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n\t        };\n\t        ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n\t            var res = [];\n\t            var table = 'table';\n\t            var tableName = request[table] || '';\n\t            var format = '$format';\n\t            delete request[table];\n\t            if (dm.dataSource.requiresFormat) {\n\t                request[format] = 'json';\n\t            }\n\t            var keys = Object.keys(request);\n\t            for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n\t                var prop = keys_4[_i];\n\t                res.push(prop + '=' + request[prop]);\n\t            }\n\t            res = res.join('&');\n\t            if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n\t                return res;\n\t            }\n\t            return res.length ? tableName + '?' + res : tableName || '';\n\t        };\n\t        ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            return {\n\t                url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : ''),\n\t                data: JSON.stringify(data)\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'DELETE',\n\t                url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : '') + '(' + value + ')'\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'PUT',\n\t                url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : '') + '(' + value[keyField] + ')',\n\t                data: JSON.stringify(value),\n\t                accept: this.options.accept\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var initialGuid = e.guid = util_1.DataUtil.getGuid(this.options.batchPre);\n\t            var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n\t            var args = {\n\t                url: e.url,\n\t                key: e.key,\n\t                cid: 1,\n\t                cSet: util_1.DataUtil.getGuid(this.options.changeSet)\n\t            };\n\t            var req = '--' + initialGuid + '\\n';\n\t            req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n\t            this.pvt.changeSet = 0;\n\t            req += this.generateInsertRequest(changes.addedRecords, args);\n\t            req += this.generateUpdateRequest(changes.changedRecords, args);\n\t            req += this.generateDeleteRequest(changes.deletedRecords, args);\n\t            req += args.cSet + '--\\n';\n\t            req += '--' + initialGuid + '--';\n\t            return {\n\t                type: 'POST',\n\t                url: url,\n\t                dataType: 'json',\n\t                contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n\t                data: req\n\t            };\n\t        };\n\t        ODataAdaptor.prototype.generateDeleteRequest = function (arr, e) {\n\t            if (!arr) {\n\t                return '';\n\t            }\n\t            var req = '';\n\t            var stat = {\n\t                'method': 'DELETE ',\n\t                'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n\t                'data': function (data, i) { return ''; }\n\t            };\n\t            req = this.generateBodyContent(arr, e, stat);\n\t            return req + '\\n';\n\t        };\n\t        ODataAdaptor.prototype.generateInsertRequest = function (arr, e) {\n\t            if (!arr) {\n\t                return '';\n\t            }\n\t            var req = '';\n\t            var stat = {\n\t                'method': 'POST ',\n\t                'url': function (data, i, key) { return ''; },\n\t                'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n\t            };\n\t            req = this.generateBodyContent(arr, e, stat);\n\t            return req;\n\t        };\n\t        ODataAdaptor.prototype.generateUpdateRequest = function (arr, e) {\n\t            if (!arr) {\n\t                return '';\n\t            }\n\t            var req = '';\n\t            var stat = {\n\t                'method': 'PUT ',\n\t                'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n\t                'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n\t            };\n\t            req = this.generateBodyContent(arr, e, stat);\n\t            return req;\n\t        };\n\t        ODataAdaptor.getField = function (prop) {\n\t            return prop.replace(/\\./g, '/');\n\t        };\n\t        ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat) {\n\t            var req = '';\n\t            for (var i = 0; i < arr.length; i++) {\n\t                req += '\\n' + e.cSet + '\\n';\n\t                req += this.options.changeSetContent + '\\n\\n';\n\t                req += stat.method;\n\t                req += e.url + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n\t                req += 'Accept: ' + this.options.accept + '\\n';\n\t                req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n\t                req += this.options.batchChangeSetContentType + '\\n\\n';\n\t                req += stat.data(arr, i);\n\t            }\n\t            return req;\n\t        };\n\t        ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n\t            if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n\t                return (query.isCountRequired ? { result: [], count: 0 } : []);\n\t            }\n\t            if (request && this.options.batch && util_1.DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n\t                var guid = xhr.getResponseHeader('Content-Type');\n\t                var cIdx = void 0;\n\t                var jsonObj = void 0;\n\t                guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n\t                data = data.split(guid);\n\t                if (data.length < 2) {\n\t                    return {};\n\t                }\n\t                data = data[1];\n\t                var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(data);\n\t                if (exVal) {\n\t                    data.replace(exVal[0], '');\n\t                }\n\t                var changeGuid = exVal ? exVal[1] : '';\n\t                data = data.split(changeGuid);\n\t                for (var i = data.length; i > -1; i--) {\n\t                    if (!/\\bContent-ID:/i.test(data[i]) || !/\\bHTTP.+201/.test(data[i])) {\n\t                        continue;\n\t                    }\n\t                    cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(data[i])[1], 10);\n\t                    if (changes.addedRecords[cIdx]) {\n\t                        jsonObj = util_1.DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(data[i])[0]);\n\t                        ej2_base_1.extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n\t                    }\n\t                }\n\t                return changes;\n\t            }\n\t            return null;\n\t        };\n\t        return ODataAdaptor;\n\t    }(UrlAdaptor));\n\t    exports.ODataAdaptor = ODataAdaptor;\n\t    var ODataV4Adaptor = (function (_super) {\n\t        __extends(ODataV4Adaptor, _super);\n\t        function ODataV4Adaptor() {\n\t            var _this = _super !== null && _super.apply(this, arguments) || this;\n\t            _this.options = ej2_base_1.extend({}, _this.options, {\n\t                requestType: 'get',\n\t                accept: 'application/json, text/javascript, */*; q=0.01',\n\t                multipartAccept: 'multipart/mixed',\n\t                sortBy: '$orderby',\n\t                select: '$select',\n\t                skip: '$skip',\n\t                take: '$top',\n\t                count: '$count',\n\t                search: '$search',\n\t                where: '$filter',\n\t                expand: '$expand',\n\t                batch: '$batch',\n\t                changeSet: '--changeset_',\n\t                batchPre: 'batch_',\n\t                contentId: 'Content-Id: ',\n\t                batchContent: 'Content-Type: multipart/mixed; boundary=',\n\t                changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n\t                batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 '\n\t            });\n\t            return _this;\n\t        }\n\t        ODataV4Adaptor.prototype.getModulename = function () {\n\t            return 'ODataV4Adaptor';\n\t        };\n\t        ;\n\t        ODataV4Adaptor.prototype.onCount = function (e) {\n\t            return e === true ? 'true' : '';\n\t        };\n\t        ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n\t            var returnValue = '';\n\t            var val = predicate.value;\n\t            var isDate = val instanceof Date;\n\t            returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n\t            if (isDate) {\n\t                returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n\t            }\n\t            return returnValue;\n\t        };\n\t        ODataV4Adaptor.prototype.onEachSearch = function (e) {\n\t            var search = this.pvt.searches || [];\n\t            search.push(e.key);\n\t            this.pvt.searches = search;\n\t        };\n\t        ODataV4Adaptor.prototype.onSearch = function (e) {\n\t            return this.pvt.searches.join(' OR ');\n\t        };\n\t        ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            request.setRequestHeader('Accept', this.options.accept);\n\t        };\n\t        ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var pvtData = 'pvtData';\n\t            var pvt = request && request[pvtData];\n\t            var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n\t            if (emptyAndBatch) {\n\t                return emptyAndBatch;\n\t            }\n\t            var count = null;\n\t            var dataCount = '@odata.count';\n\t            if (query && query.isCountRequired) {\n\t                if (dataCount in data) {\n\t                    count = data[dataCount];\n\t                }\n\t            }\n\t            data = data.value;\n\t            var args = {};\n\t            args.count = count;\n\t            args.result = data;\n\t            this.getAggregateResult(pvt, data, args);\n\t            return util_1.DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n\t        };\n\t        return ODataV4Adaptor;\n\t    }(ODataAdaptor));\n\t    exports.ODataV4Adaptor = ODataV4Adaptor;\n\t    var WebApiAdaptor = (function (_super) {\n\t        __extends(WebApiAdaptor, _super);\n\t        function WebApiAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.url,\n\t                data: JSON.stringify(data)\n\t            };\n\t        };\n\t        WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'DELETE',\n\t                url: dm.dataSource.url + '/' + value,\n\t                data: JSON.stringify(value)\n\t            };\n\t        };\n\t        WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            return {\n\t                type: 'PUT',\n\t                url: dm.dataSource.url,\n\t                data: JSON.stringify(value)\n\t            };\n\t        };\n\t        WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n\t        };\n\t        WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            var pvtData = 'pvtData';\n\t            var pvt = request && request[pvtData];\n\t            var count = null;\n\t            var args = {};\n\t            if (request && request.type.toLowerCase() !== 'post') {\n\t                var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n\t                var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n\t                if (query && query.isCountRequired) {\n\t                    if (!util_1.DataUtil.isNull(data.Count)) {\n\t                        count = data.Count;\n\t                    }\n\t                }\n\t                if (version < 3 && data.Items) {\n\t                    data = data.Items;\n\t                }\n\t                args.count = count;\n\t                args.result = data;\n\t                this.getAggregateResult(pvt, data, args);\n\t            }\n\t            args.result = args.result || data;\n\t            return util_1.DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n\t        };\n\t        return WebApiAdaptor;\n\t    }(ODataAdaptor));\n\t    exports.WebApiAdaptor = WebApiAdaptor;\n\t    var WebMethodAdaptor = (function (_super) {\n\t        __extends(WebMethodAdaptor, _super);\n\t        function WebMethodAdaptor() {\n\t            return _super !== null && _super.apply(this, arguments) || this;\n\t        }\n\t        WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n\t            var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n\t            var getData = 'data';\n\t            var data = util_1.DataUtil.parse.parseJson(obj[getData]);\n\t            var result = {};\n\t            var value = 'value';\n\t            if (data.param) {\n\t                for (var i = 0; i < data.param.length; i++) {\n\t                    var param = data.param[i];\n\t                    var key = Object.keys(param)[0];\n\t                    result[key] = param[key];\n\t                }\n\t            }\n\t            result[value] = data;\n\t            var pvtData = 'pvtData';\n\t            var url = 'url';\n\t            return {\n\t                data: JSON.stringify(result),\n\t                url: obj[url],\n\t                pvtData: obj[pvtData],\n\t                type: 'POST',\n\t                contentType: 'application/json; charset=utf-8'\n\t            };\n\t        };\n\t        return WebMethodAdaptor;\n\t    }(UrlAdaptor));\n\t    exports.WebMethodAdaptor = WebMethodAdaptor;\n\t    var RemoteSaveAdaptor = (function (_super) {\n\t        __extends(RemoteSaveAdaptor, _super);\n\t        function RemoteSaveAdaptor() {\n\t            var _this = _super.call(this) || this;\n\t            ej2_base_1.setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n\t            ej2_base_1.setValue('insert', UrlAdaptor.prototype.insert, _this);\n\t            ej2_base_1.setValue('update', UrlAdaptor.prototype.update, _this);\n\t            ej2_base_1.setValue('remove', UrlAdaptor.prototype.remove, _this);\n\t            return _this;\n\t        }\n\t        RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            var i;\n\t            for (i = 0; i < changes.addedRecords.length; i++) {\n\t                JsonAdaptor.prototype.insert(dm, changes.addedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.changedRecords.length; i++) {\n\t                JsonAdaptor.prototype.update(dm, e.key, changes.changedRecords[i]);\n\t            }\n\t            for (i = 0; i < changes.deletedRecords.length; i++) {\n\t                JsonAdaptor.prototype.remove(dm, e.key, changes.deletedRecords[i]);\n\t            }\n\t            return {\n\t                type: 'POST',\n\t                url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n\t                contentType: 'application/json; charset=utf-8',\n\t                dataType: 'json',\n\t                data: JSON.stringify({\n\t                    changed: changes.changedRecords,\n\t                    added: changes.addedRecords,\n\t                    deleted: changes.deletedRecords,\n\t                    action: 'batch',\n\t                    table: e.url,\n\t                    key: e.key\n\t                })\n\t            };\n\t        };\n\t        return RemoteSaveAdaptor;\n\t    }(JsonAdaptor));\n\t    exports.RemoteSaveAdaptor = RemoteSaveAdaptor;\n\t    var CacheAdaptor = (function (_super) {\n\t        __extends(CacheAdaptor, _super);\n\t        function CacheAdaptor(adaptor, timeStamp, pageSize) {\n\t            var _this = _super.call(this) || this;\n\t            _this.isCrudAction = false;\n\t            _this.isInsertAction = false;\n\t            if (!ej2_base_1.isNullOrUndefined(adaptor)) {\n\t                _this.cacheAdaptor = adaptor;\n\t            }\n\t            _this.pageSize = pageSize;\n\t            _this.guidId = util_1.DataUtil.getGuid('cacheAdaptor');\n\t            var obj = { keys: [], results: [] };\n\t            window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n\t            var guid = _this.guidId;\n\t            if (!ej2_base_1.isNullOrUndefined(timeStamp)) {\n\t                setInterval(function () {\n\t                    var data;\n\t                    data = util_1.DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n\t                    var forDel = [];\n\t                    for (var i = 0; i < data.results.length; i++) {\n\t                        var currentTime = +new Date();\n\t                        var requestTime = +new Date(data.results[i].timeStamp);\n\t                        data.results[i].timeStamp = currentTime - requestTime;\n\t                        if (currentTime - requestTime > timeStamp) {\n\t                            forDel.push(i);\n\t                        }\n\t                    }\n\t                    for (var i = 0; i < forDel.length; i++) {\n\t                        data.results.splice(forDel[i], 1);\n\t                        data.keys.splice(forDel[i], 1);\n\t                    }\n\t                    window.localStorage.removeItem(guid);\n\t                    window.localStorage.setItem(guid, JSON.stringify(data));\n\t                }, timeStamp);\n\t            }\n\t            return _this;\n\t        }\n\t        CacheAdaptor.prototype.generateKey = function (url, query) {\n\t            var queries = this.getQueryRequest(query);\n\t            var singles = query_1.Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n\t            var key = url;\n\t            var page = 'onPage';\n\t            if (page in singles) {\n\t                key += singles[page].pageIndex;\n\t            }\n\t            queries.sorts.forEach(function (obj) {\n\t                key += obj.e.direction + obj.e.fieldName;\n\t            });\n\t            queries.groups.forEach(function (obj) {\n\t                key += obj.e.fieldName;\n\t            });\n\t            queries.searches.forEach(function (obj) {\n\t                key += obj.e.searchKey;\n\t            });\n\t            for (var filter = 0; filter < queries.filters.length; filter++) {\n\t                var currentFilter = queries.filters[filter];\n\t                if (currentFilter.e.isComplex) {\n\t                    var newQuery = query.clone();\n\t                    newQuery.queries = [];\n\t                    for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n\t                        newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n\t                    }\n\t                    key += currentFilter.e.condition + this.generateKey(url, newQuery);\n\t                }\n\t                else {\n\t                    key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n\t                }\n\t            }\n\t            return key;\n\t        };\n\t        CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n\t            var key = this.generateKey(dm.dataSource.url, query);\n\t            var cachedItems;\n\t            cachedItems = util_1.DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n\t            var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n\t            if (data != null && !this.isCrudAction && !this.isInsertAction) {\n\t                return data;\n\t            }\n\t            this.isCrudAction = null;\n\t            this.isInsertAction = null;\n\t            return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n\t        };\n\t        CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n\t            if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n\t                util_1.DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n\t                return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n\t            }\n\t            data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n\t            var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n\t            var obj = {};\n\t            obj = util_1.DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n\t            var index = obj.keys.indexOf(key);\n\t            if (index !== -1) {\n\t                obj.results.splice(index, 1);\n\t                obj.keys.splice(index, 1);\n\t            }\n\t            obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n\t            while (obj.results.length > this.pageSize) {\n\t                obj.results.splice(0, 1);\n\t                obj.keys.splice(0, 1);\n\t            }\n\t            window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n\t            return data;\n\t        };\n\t        CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n\t            if (util_1.DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n\t                request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n\t            }\n\t            if (!dm.dataSource.crossDomain) {\n\t                request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n\t            }\n\t        };\n\t        CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n\t            this.isCrudAction = true;\n\t            return this.cacheAdaptor.update(dm, keyField, value, tableName);\n\t        };\n\t        CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n\t            this.isInsertAction = true;\n\t            return this.cacheAdaptor.insert(dm, data, tableName);\n\t        };\n\t        CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n\t            this.isCrudAction = true;\n\t            return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n\t        };\n\t        CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n\t            return this.cacheAdaptor.batchRequest(dm, changes, e);\n\t        };\n\t        return CacheAdaptor;\n\t    }(UrlAdaptor));\n\t    exports.CacheAdaptor = CacheAdaptor;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ })\n/******/ ])\n});\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCBkZDM5OGE1M2Q5MDVlNzE0MGUxYSIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiQHN5bmNmdXNpb24vZWoyLWJhc2VcIiIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcXVlcnkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FkYXB0b3JzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxPO0FDVkE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7OztpRUN0Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFrRCxjQUFjO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBQzs7Ozs7OztpRUNWRDtBQUNBO0FBQ0EsbURBQWtELGNBQWM7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQStCLGVBQWU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiO0FBQ0E7QUFDQSxjQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2I7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBO0FBQ0EsY0FBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBO0FBQ0EsY0FBYTtB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ZmlsZSI6ImVqMi1kYXRhLnVtZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZShcIkBzeW5jZnVzaW9uL2VqMi1iYXNlXCIpKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtcIkBzeW5jZnVzaW9uL2VqMi1iYXNlXCJdLCBmYWN0b3J5KTtcblx0ZWxzZSB7XG5cdFx0dmFyIGEgPSB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgPyBmYWN0b3J5KHJlcXVpcmUoXCJAc3luY2Z1c2lvbi9lajItYmFzZVwiKSkgOiBmYWN0b3J5KHJvb3RbXCJAc3luY2Z1c2lvbi9lajItYmFzZVwiXSk7XG5cdFx0Zm9yKHZhciBpIGluIGEpICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgPyBleHBvcnRzIDogcm9vdClbaV0gPSBhW2ldO1xuXHR9XG59KSh0aGlzLCBmdW5jdGlvbihfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzJfXykge1xucmV0dXJuIFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0ZXhwb3J0czoge30sXG4gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuIFx0XHRcdGxvYWRlZDogZmFsc2VcbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCBkZDM5OGE1M2Q5MDVlNzE0MGUxYSIsImRlZmluZShbXCJyZXF1aXJlXCIsIFwiZXhwb3J0c1wiLCBcIi4vbWFuYWdlclwiLCBcIi4vcXVlcnlcIiwgXCIuL2FkYXB0b3JzXCIsIFwiLi91dGlsXCJdLCBmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgbWFuYWdlcl8xLCBxdWVyeV8xLCBhZGFwdG9yc18xLCB1dGlsXzEpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBmdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuICAgIF9fZXhwb3J0KG1hbmFnZXJfMSk7XG4gICAgX19leHBvcnQocXVlcnlfMSk7XG4gICAgX19leHBvcnQoYWRhcHRvcnNfMSk7XG4gICAgX19leHBvcnQodXRpbF8xKTtcbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiZGVmaW5lKFtcInJlcXVpcmVcIiwgXCJleHBvcnRzXCIsIFwiQHN5bmNmdXNpb24vZWoyLWJhc2VcIiwgXCJAc3luY2Z1c2lvbi9lajItYmFzZVwiLCBcIi4vdXRpbFwiLCBcIi4vcXVlcnlcIiwgXCIuL2FkYXB0b3JzXCJdLCBmdW5jdGlvbiAocmVxdWlyZSwgZXhwb3J0cywgZWoyX2Jhc2VfMSwgZWoyX2Jhc2VfMiwgdXRpbF8xLCBxdWVyeV8xLCBhZGFwdG9yc18xKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuICAgIHZhciBEYXRhTWFuYWdlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIERhdGFNYW5hZ2VyKGRhdGFTb3VyY2UsIHF1ZXJ5LCBhZGFwdG9yKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgdGhpcy5kYXRlUGFyc2UgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cyA9IFtdO1xuICAgICAgICAgICAgaWYgKCFkYXRhU291cmNlICYmICF0aGlzLmRhdGFTb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBkYXRhU291cmNlID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhZGFwdG9yID0gYWRhcHRvciB8fCBkYXRhU291cmNlLmFkYXB0b3I7XG4gICAgICAgICAgICB2YXIgZGF0YTtcbiAgICAgICAgICAgIGlmIChkYXRhU291cmNlIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICBqc29uOiBkYXRhU291cmNlLFxuICAgICAgICAgICAgICAgICAgICBvZmZsaW5lOiB0cnVlXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBkYXRhU291cmNlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIGlmICghZGF0YVNvdXJjZS5qc29uKSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFTb3VyY2UuanNvbiA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICB1cmw6IGRhdGFTb3VyY2UudXJsLFxuICAgICAgICAgICAgICAgICAgICBpbnNlcnRVcmw6IGRhdGFTb3VyY2UuaW5zZXJ0VXJsLFxuICAgICAgICAgICAgICAgICAgICByZW1vdmVVcmw6IGRhdGFTb3VyY2UucmVtb3ZlVXJsLFxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVVcmw6IGRhdGFTb3VyY2UudXBkYXRlVXJsLFxuICAgICAgICAgICAgICAgICAgICBjcnVkVXJsOiBkYXRhU291cmNlLmNydWRVcmwsXG4gICAgICAgICAgICAgICAgICAgIGJhdGNoVXJsOiBkYXRhU291cmNlLmJhdGNoVXJsLFxuICAgICAgICAgICAgICAgICAgICBqc29uOiBkYXRhU291cmNlLmpzb24sXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGRhdGFTb3VyY2UuaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgYWNjZXB0OiBkYXRhU291cmNlLmFjY2VwdCxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YVNvdXJjZS5kYXRhLFxuICAgICAgICAgICAgICAgICAgICB0aW1lVGlsbEV4cGlyYXRpb246IGRhdGFTb3VyY2UudGltZVRpbGxFeHBpcmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBjYWNoaW5nUGFnZVNpemU6IGRhdGFTb3VyY2UuY2FjaGluZ1BhZ2VTaXplLFxuICAgICAgICAgICAgICAgICAgICBlbmFibGVDYWNoaW5nOiBkYXRhU291cmNlLmVuYWJsZUNhY2hpbmcsXG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3RUeXBlOiBkYXRhU291cmNlLnJlcXVlc3RUeXBlLFxuICAgICAgICAgICAgICAgICAgICBrZXk6IGRhdGFTb3VyY2Uua2V5LFxuICAgICAgICAgICAgICAgICAgICBjcm9zc0RvbWFpbjogZGF0YVNvdXJjZS5jcm9zc0RvbWFpbixcbiAgICAgICAgICAgICAgICAgICAganNvbnA6IGRhdGFTb3VyY2UuanNvbnAsXG4gICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBkYXRhU291cmNlLmRhdGFUeXBlLFxuICAgICAgICAgICAgICAgICAgICBvZmZsaW5lOiBkYXRhU291cmNlLm9mZmxpbmUgIT09IHVuZGVmaW5lZCA/IGRhdGFTb3VyY2Uub2ZmbGluZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBkYXRhU291cmNlLmFkYXB0b3IgaW5zdGFuY2VvZiBhZGFwdG9yc18xLlJlbW90ZVNhdmVBZGFwdG9yID8gZmFsc2UgOiBkYXRhU291cmNlLnVybCA/IGZhbHNlIDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZXNGb3JtYXQ6IGRhdGFTb3VyY2UucmVxdWlyZXNGb3JtYXRcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXRpbF8xLkRhdGFVdGlsLnRocm93RXJyb3IoJ0RhdGFNYW5hZ2VyOiBJbnZhbGlkIGFyZ3VtZW50cycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRhdGEucmVxdWlyZXNGb3JtYXQgPT09IHVuZGVmaW5lZCAmJiAhdXRpbF8xLkRhdGFVdGlsLmlzQ29ycygpKSB7XG4gICAgICAgICAgICAgICAgZGF0YS5yZXF1aXJlc0Zvcm1hdCA9IGVqMl9iYXNlXzIuaXNOdWxsT3JVbmRlZmluZWQoZGF0YS5jcm9zc0RvbWFpbikgPyB0cnVlIDogZGF0YS5jcm9zc0RvbWFpbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkYXRhLmRhdGFUeXBlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBkYXRhLmRhdGFUeXBlID0gJ2pzb24nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5kYXRhU291cmNlID0gZGF0YTtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdFF1ZXJ5ID0gcXVlcnk7XG4gICAgICAgICAgICBpZiAoZGF0YS51cmwgJiYgZGF0YS5vZmZsaW5lICYmICFkYXRhLmpzb24ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc0RhdGFBdmFpbGFibGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLmFkYXB0b3IgPSBhZGFwdG9yIHx8IG5ldyBhZGFwdG9yc18xLk9EYXRhQWRhcHRvcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuZGF0YVNvdXJjZS5vZmZsaW5lID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWFkeSA9IHRoaXMuZXhlY3V0ZVF1ZXJ5KHF1ZXJ5IHx8IG5ldyBxdWVyeV8xLlF1ZXJ5KCkpO1xuICAgICAgICAgICAgICAgIHRoaXMucmVhZHkudGhlbihmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5kYXRhU291cmNlLm9mZmxpbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5pc0RhdGFBdmFpbGFibGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBkYXRhLmpzb24gPSBlLnJlc3VsdDtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuYWRhcHRvciA9IG5ldyBhZGFwdG9yc18xLkpzb25BZGFwdG9yKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkYXB0b3IgPSBkYXRhLm9mZmxpbmUgPyBuZXcgYWRhcHRvcnNfMS5Kc29uQWRhcHRvcigpIDogbmV3IGFkYXB0b3JzXzEuT0RhdGFBZGFwdG9yKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWRhdGEuanNvbnAgJiYgdGhpcy5hZGFwdG9yIGluc3RhbmNlb2YgYWRhcHRvcnNfMS5PRGF0YUFkYXB0b3IpIHtcbiAgICAgICAgICAgICAgICBkYXRhLmpzb25wID0gJ2NhbGxiYWNrJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYWRhcHRvciA9IGFkYXB0b3IgfHwgdGhpcy5hZGFwdG9yO1xuICAgICAgICAgICAgaWYgKGRhdGEuZW5hYmxlQ2FjaGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRhcHRvciA9IG5ldyBhZGFwdG9yc18xLkNhY2hlQWRhcHRvcih0aGlzLmFkYXB0b3IsIGRhdGEudGltZVRpbGxFeHBpcmF0aW9uLCBkYXRhLmNhY2hpbmdQYWdlU2l6ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICBEYXRhTWFuYWdlci5wcm90b3R5cGUuc2V0RGVmYXVsdFF1ZXJ5ID0gZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRRdWVyeSA9IHF1ZXJ5O1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFNYW5hZ2VyLnByb3RvdHlwZS5leGVjdXRlTG9jYWwgPSBmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5kZWZhdWx0UXVlcnkgJiYgIShxdWVyeSBpbnN0YW5jZW9mIHF1ZXJ5XzEuUXVlcnkpKSB7XG4gICAgICAgICAgICAgICAgdXRpbF8xLkRhdGFVdGlsLnRocm93RXJyb3IoJ0RhdGFNYW5hZ2VyIC0gZXhlY3V0ZUxvY2FsKCkgOiBBIHF1ZXJ5IGlzIHJlcXVpcmVkIHRvIGV4ZWN1dGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy5kYXRhU291cmNlLmpzb24pIHtcbiAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwudGhyb3dFcnJvcignRGF0YU1hbmFnZXIgLSBleGVjdXRlTG9jYWwoKSA6IEpzb24gZGF0YSBpcyByZXF1aXJlZCB0byBleGVjdXRlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxdWVyeSA9IHF1ZXJ5IHx8IHRoaXMuZGVmYXVsdFF1ZXJ5O1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuYWRhcHRvci5wcm9jZXNzUXVlcnkodGhpcywgcXVlcnkpO1xuICAgICAgICAgICAgaWYgKHF1ZXJ5LnN1YlF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGZyb20gPSBxdWVyeS5zdWJRdWVyeS5mcm9tVGFibGU7XG4gICAgICAgICAgICAgICAgdmFyIGxvb2t1cCA9IHF1ZXJ5LnN1YlF1ZXJ5Lmxvb2t1cHM7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCA/IHJlc3VsdC5yZXN1bHQgOlxuICAgICAgICAgICAgICAgICAgICByZXN1bHQ7XG4gICAgICAgICAgICAgICAgaWYgKGxvb2t1cCAmJiBsb29rdXAgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwuYnVpbGRIaWVyYXJjaHkocXVlcnkuc3ViUXVlcnkuZktleSwgZnJvbSwgcmVzLCBsb29rdXAsIHF1ZXJ5LnN1YlF1ZXJ5LmtleSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcmVzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNbal1bZnJvbV0gaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzW2pdID0gZWoyX2Jhc2VfMi5leHRlbmQoe30sIHt9LCByZXNbal0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzW2pdW2Zyb21dID0gdGhpcy5hZGFwdG9yLnByb2Nlc3NSZXNwb25zZShxdWVyeS5zdWJRdWVyeS51c2luZyhuZXcgRGF0YU1hbmFnZXIocmVzW2pdW2Zyb21dLnNsaWNlKDApKSkuZXhlY3V0ZUxvY2FsKCksIHRoaXMsIHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFkYXB0b3IucHJvY2Vzc1Jlc3BvbnNlKHJlc3VsdCwgdGhpcywgcXVlcnkpO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhTWFuYWdlci5wcm90b3R5cGUuZXhlY3V0ZVF1ZXJ5ID0gZnVuY3Rpb24gKHF1ZXJ5LCBkb25lLCBmYWlsLCBhbHdheXMpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHF1ZXJ5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgYWx3YXlzID0gZmFpbDtcbiAgICAgICAgICAgICAgICBmYWlsID0gZG9uZTtcbiAgICAgICAgICAgICAgICBkb25lID0gcXVlcnk7XG4gICAgICAgICAgICAgICAgcXVlcnkgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFxdWVyeSkge1xuICAgICAgICAgICAgICAgIHF1ZXJ5ID0gdGhpcy5kZWZhdWx0UXVlcnk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIShxdWVyeSBpbnN0YW5jZW9mIHF1ZXJ5XzEuUXVlcnkpKSB7XG4gICAgICAgICAgICAgICAgdXRpbF8xLkRhdGFVdGlsLnRocm93RXJyb3IoJ0RhdGFNYW5hZ2VyIC0gZXhlY3V0ZVF1ZXJ5KCkgOiBBIHF1ZXJ5IGlzIHJlcXVpcmVkIHRvIGV4ZWN1dGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBkZWZmZXJlZCA9IG5ldyBEZWZlcnJlZCgpO1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSB7IHF1ZXJ5OiBxdWVyeSB9O1xuICAgICAgICAgICAgaWYgKCF0aGlzLmRhdGFTb3VyY2Uub2ZmbGluZSAmJiB0aGlzLmRhdGFTb3VyY2UudXJsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5hZGFwdG9yLnByb2Nlc3NRdWVyeSh0aGlzLCBxdWVyeSk7XG4gICAgICAgICAgICAgICAgdGhpcy5tYWtlUmVxdWVzdChyZXN1bHQsIGRlZmZlcmVkLCBhcmdzLCBxdWVyeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBEYXRhTWFuYWdlci5uZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXMgPSBfdGhpcy5leGVjdXRlTG9jYWwocXVlcnkpO1xuICAgICAgICAgICAgICAgICAgICBhcmdzID0gRGF0YU1hbmFnZXIuZ2V0RGVmZXJlZEFyZ3MocXVlcnksIHJlcywgYXJncyk7XG4gICAgICAgICAgICAgICAgICAgIGRlZmZlcmVkLnJlc29sdmUoYXJncyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVmZmVyZWQucHJvbWlzZTtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YU1hbmFnZXIuZ2V0RGVmZXJlZEFyZ3MgPSBmdW5jdGlvbiAocXVlcnksIHJlc3VsdCwgYXJncykge1xuICAgICAgICAgICAgaWYgKHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgIGFyZ3MucmVzdWx0ID0gcmVzdWx0LnJlc3VsdDtcbiAgICAgICAgICAgICAgICBhcmdzLmNvdW50ID0gcmVzdWx0LmNvdW50O1xuICAgICAgICAgICAgICAgIGFyZ3MuYWdncmVnYXRlcyA9IHJlc3VsdC5hZ2dyZWdhdGVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYXJncy5yZXN1bHQgPSByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYXJncztcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YU1hbmFnZXIubmV4dFRpY2sgPSBmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgICAgICh3aW5kb3cuc2V0SW1tZWRpYXRlIHx8IHdpbmRvdy5zZXRUaW1lb3V0KShmbiwgMCk7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFNYW5hZ2VyLnByb3RvdHlwZS5leHRlbmRSZXF1ZXN0ID0gZnVuY3Rpb24gKHVybCwgZm5TdWNjZXNzLCBmbkZhaWwpIHtcbiAgICAgICAgICAgIHJldHVybiBlajJfYmFzZV8yLmV4dGVuZCh7fSwge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdHRVQnLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiB0aGlzLmRhdGFTb3VyY2UuZGF0YVR5cGUsXG4gICAgICAgICAgICAgICAgY3Jvc3NEb21haW46IHRoaXMuZGF0YVNvdXJjZS5jcm9zc0RvbWFpbixcbiAgICAgICAgICAgICAgICBqc29ucDogdGhpcy5kYXRhU291cmNlLmpzb25wLFxuICAgICAgICAgICAgICAgIGNhY2hlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHByb2Nlc3NEYXRhOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBvblN1Y2Nlc3M6IGZuU3VjY2VzcyxcbiAgICAgICAgICAgICAgICBvbkZhaWx1cmU6IGZuRmFpbFxuICAgICAgICAgICAgfSwgdXJsKTtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YU1hbmFnZXIucHJvdG90eXBlLm1ha2VSZXF1ZXN0ID0gZnVuY3Rpb24gKHVybCwgZGVmZmVyZWQsIGFyZ3MsIHF1ZXJ5KSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIGlzU2VsZWN0b3IgPSAhIXF1ZXJ5LnN1YlF1ZXJ5U2VsZWN0b3I7XG4gICAgICAgICAgICB2YXIgZm5GYWlsID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBhcmdzLmVycm9yID0gZTtcbiAgICAgICAgICAgICAgICBkZWZmZXJlZC5yZWplY3QoYXJncyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmFyIHByb2Nlc3MgPSBmdW5jdGlvbiAoZGF0YSwgY291bnQsIHhociwgcmVxdWVzdCwgYWN0dWFsLCBhZ2dyZWdhdGVzLCB2aXJ0dWFsU2VsZWN0UmVjb3Jkcykge1xuICAgICAgICAgICAgICAgIGFyZ3MueGhyID0geGhyO1xuICAgICAgICAgICAgICAgIGFyZ3MuY291bnQgPSBjb3VudCA/IHBhcnNlSW50KGNvdW50LnRvU3RyaW5nKCksIDEwKSA6IDA7XG4gICAgICAgICAgICAgICAgYXJncy5yZXN1bHQgPSBkYXRhO1xuICAgICAgICAgICAgICAgIGFyZ3MucmVxdWVzdCA9IHJlcXVlc3Q7XG4gICAgICAgICAgICAgICAgYXJncy5hZ2dyZWdhdGVzID0gYWdncmVnYXRlcztcbiAgICAgICAgICAgICAgICBhcmdzLmFjdHVhbCA9IGFjdHVhbDtcbiAgICAgICAgICAgICAgICBhcmdzLnZpcnR1YWxTZWxlY3RSZWNvcmRzID0gdmlydHVhbFNlbGVjdFJlY29yZHM7XG4gICAgICAgICAgICAgICAgZGVmZmVyZWQucmVzb2x2ZShhcmdzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgZm5RdWVyeUNoaWxkID0gZnVuY3Rpb24gKGRhdGEsIHNlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN1YkRlZmZlciA9IG5ldyBEZWZlcnJlZCgpO1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZEFyZ3MgPSB7IHBhcmVudDogYXJncyB9O1xuICAgICAgICAgICAgICAgIHF1ZXJ5LnN1YlF1ZXJ5LmlzQ2hpbGQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHZhciBzdWJVcmwgPSBfdGhpcy5hZGFwdG9yLnByb2Nlc3NRdWVyeShfdGhpcywgcXVlcnkuc3ViUXVlcnksIGRhdGEgPyBfdGhpcy5hZGFwdG9yLnByb2Nlc3NSZXNwb25zZShkYXRhKSA6IHNlbGVjdG9yKTtcbiAgICAgICAgICAgICAgICB2YXIgY2hpbGRSZXEgPSBfdGhpcy5tYWtlUmVxdWVzdChzdWJVcmwsIHN1YkRlZmZlciwgY2hpbGRBcmdzLCBxdWVyeS5zdWJRdWVyeSk7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1NlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YkRlZmZlci50aGVuKGZ1bmN0aW9uIChzdWJEYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV0aWxfMS5EYXRhVXRpbC5idWlsZEhpZXJhcmNoeShxdWVyeS5zdWJRdWVyeS5mS2V5LCBxdWVyeS5zdWJRdWVyeS5mcm9tVGFibGUsIGRhdGEsIHN1YkRhdGEsIHF1ZXJ5LnN1YlF1ZXJ5LmtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2VzcyhkYXRhLCBzdWJEYXRhLmNvdW50LCBzdWJEYXRhLnhocik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sIGZuRmFpbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjaGlsZFJlcTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgZm5TdWNjZXNzID0gZnVuY3Rpb24gKGRhdGEsIHJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVxdWVzdC5odHRwUmVxdWVzdC5nZXRSZXNwb25zZUhlYWRlcignQ29udGVudC1UeXBlJykuaW5kZXhPZigneG1sJykgPT09IC0xICYmIF90aGlzLmRhdGVQYXJzZSkge1xuICAgICAgICAgICAgICAgICAgICBkYXRhID0gdXRpbF8xLkRhdGFVdGlsLnBhcnNlLnBhcnNlSnNvbihkYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IF90aGlzLmFkYXB0b3IucHJvY2Vzc1Jlc3BvbnNlKGRhdGEsIF90aGlzLCBxdWVyeSwgcmVxdWVzdC5odHRwUmVxdWVzdCwgcmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgdmFyIGNvdW50ID0gMDtcbiAgICAgICAgICAgICAgICB2YXIgYWdncmVnYXRlcyA9IG51bGw7XG4gICAgICAgICAgICAgICAgdmFyIHZpcnR1YWxTZWxlY3RSZWNvcmRzID0gJ3ZpcnR1YWxTZWxlY3RSZWNvcmRzJztcbiAgICAgICAgICAgICAgICB2YXIgdmlydHVhbFJlY29yZHMgPSBkYXRhW3ZpcnR1YWxTZWxlY3RSZWNvcmRzXTtcbiAgICAgICAgICAgICAgICBpZiAocXVlcnkuaXNDb3VudFJlcXVpcmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50ID0gcmVzdWx0LmNvdW50O1xuICAgICAgICAgICAgICAgICAgICBhZ2dyZWdhdGVzID0gcmVzdWx0LmFnZ3JlZ2F0ZXM7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghcXVlcnkuc3ViUXVlcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvY2VzcyhyZXN1bHQsIGNvdW50LCByZXF1ZXN0Lmh0dHBSZXF1ZXN0LCByZXF1ZXN0LnR5cGUsIGRhdGEsIGFnZ3JlZ2F0ZXMsIHZpcnR1YWxSZWNvcmRzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWlzU2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgZm5RdWVyeUNoaWxkKHJlc3VsdCwgcmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHZhciByZXEgPSB0aGlzLmV4dGVuZFJlcXVlc3QodXJsLCBmblN1Y2Nlc3MsIGZuRmFpbCk7XG4gICAgICAgICAgICB2YXIgYWpheCA9IG5ldyBlajJfYmFzZV8xLkFqYXgocmVxKTtcbiAgICAgICAgICAgIGFqYXguYmVmb3JlU2VuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5iZWZvcmVTZW5kKGFqYXguaHR0cFJlcXVlc3QsIGFqYXgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlcSA9IGFqYXguc2VuZCgpO1xuICAgICAgICAgICAgcmVxLmNhdGNoKGZ1bmN0aW9uIChlKSB7IHJldHVybiB0cnVlOyB9KTtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdHMucHVzaChhamF4KTtcbiAgICAgICAgICAgIGlmIChpc1NlbGVjdG9yKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb21pc2UgPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IHF1ZXJ5LnN1YlF1ZXJ5U2VsZWN0b3IuY2FsbCh0aGlzLCB7IHF1ZXJ5OiBxdWVyeS5zdWJRdWVyeSwgcGFyZW50OiBxdWVyeSB9KTtcbiAgICAgICAgICAgICAgICBpZiAocmVzICYmIHJlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvbWlzZSA9IFByb21pc2UuYWxsKFtyZXEsIGZuUXVlcnlDaGlsZChudWxsLCByZXMpXSk7XG4gICAgICAgICAgICAgICAgICAgIHByb21pc2UudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gYXJnc1swXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwUmVzdWx0ID0gX3RoaXMuYWRhcHRvci5wcm9jZXNzUmVzcG9uc2UocmVzdWx0WzBdLCBfdGhpcywgcXVlcnksIF90aGlzLnJlcXVlc3RzWzBdLmh0dHBSZXF1ZXN0LCBfdGhpcy5yZXF1ZXN0c1swXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY291bnQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ID0gcFJlc3VsdC5jb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwUmVzdWx0ID0gcFJlc3VsdC5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY1Jlc3VsdCA9IF90aGlzLmFkYXB0b3IucHJvY2Vzc1Jlc3BvbnNlKHJlc3VsdFsxXSwgX3RoaXMsIHF1ZXJ5LnN1YlF1ZXJ5LCBfdGhpcy5yZXF1ZXN0c1sxXS5odHRwUmVxdWVzdCwgX3RoaXMucmVxdWVzdHNbMV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY291bnQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHF1ZXJ5LnN1YlF1ZXJ5LmlzQ291bnRSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ID0gY1Jlc3VsdC5jb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjUmVzdWx0ID0gY1Jlc3VsdC5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwuYnVpbGRIaWVyYXJjaHkocXVlcnkuc3ViUXVlcnkuZktleSwgcXVlcnkuc3ViUXVlcnkuZnJvbVRhYmxlLCBwUmVzdWx0LCBjUmVzdWx0LCBxdWVyeS5zdWJRdWVyeS5rZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNTZWxlY3RvciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2VzcyhwUmVzdWx0LCBjb3VudCwgX3RoaXMucmVxdWVzdHNbMF0uaHR0cFJlcXVlc3QpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlzU2VsZWN0b3IgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVxO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhTWFuYWdlci5wcm90b3R5cGUuYmVmb3JlU2VuZCA9IGZ1bmN0aW9uIChyZXF1ZXN0LCBzZXR0aW5ncykge1xuICAgICAgICAgICAgdGhpcy5hZGFwdG9yLmJlZm9yZVNlbmQodGhpcywgcmVxdWVzdCwgc2V0dGluZ3MpO1xuICAgICAgICAgICAgdmFyIGhlYWRlcnMgPSB0aGlzLmRhdGFTb3VyY2UuaGVhZGVycztcbiAgICAgICAgICAgIHZhciBwcm9wcztcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBoZWFkZXJzICYmIGkgPCBoZWFkZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcHJvcHMgPSBbXTtcbiAgICAgICAgICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGhlYWRlcnNbaV0pO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwga2V5c18xID0ga2V5czsgX2kgPCBrZXlzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wID0ga2V5c18xW19pXTtcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMucHVzaChwcm9wKTtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKHByb3AsIGhlYWRlcnNbaV1bcHJvcF0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgRGF0YU1hbmFnZXIucHJvdG90eXBlLnNhdmVDaGFuZ2VzID0gZnVuY3Rpb24gKGNoYW5nZXMsIGtleSwgdGFibGVOYW1lLCBxdWVyeSkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIGlmICh0YWJsZU5hbWUgaW5zdGFuY2VvZiBxdWVyeV8xLlF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgPSB0YWJsZU5hbWU7XG4gICAgICAgICAgICAgICAgdGFibGVOYW1lID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBhcmdzID0ge1xuICAgICAgICAgICAgICAgIHVybDogdGFibGVOYW1lLFxuICAgICAgICAgICAgICAgIGtleToga2V5IHx8IHRoaXMuZGF0YVNvdXJjZS5rZXlcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgcmVxID0gdGhpcy5hZGFwdG9yLmJhdGNoUmVxdWVzdCh0aGlzLCBjaGFuZ2VzLCBhcmdzLCBxdWVyeSk7XG4gICAgICAgICAgICBpZiAodGhpcy5kYXRhU291cmNlLm9mZmxpbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGRlZmYgPSBuZXcgRGVmZXJyZWQoKTtcbiAgICAgICAgICAgIHZhciBhamF4ID0gbmV3IGVqMl9iYXNlXzEuQWpheChyZXEpO1xuICAgICAgICAgICAgYWpheC5iZWZvcmVTZW5kID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmJlZm9yZVNlbmQoYWpheC5odHRwUmVxdWVzdCwgYWpheCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgYWpheC5vblN1Y2Nlc3MgPSBmdW5jdGlvbiAoZGF0YSwgcmVxdWVzdCkge1xuICAgICAgICAgICAgICAgIGRlZmYucmVzb2x2ZShfdGhpcywgW190aGlzLmFkYXB0b3IucHJvY2Vzc1Jlc3BvbnNlKGRhdGEsIF90aGlzLCBudWxsLCByZXF1ZXN0Lmh0dHBSZXF1ZXN0LCByZXF1ZXN0LCBjaGFuZ2VzKV0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGFqYXgub25GYWlsdXJlID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBkZWZmLnJlamVjdChbeyBlcnJvcjogZSB9XSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgYWpheC5zZW5kKCkuY2F0Y2goZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHRydWU7IH0pO1xuICAgICAgICAgICAgcmV0dXJuIGRlZmYucHJvbWlzZTtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YU1hbmFnZXIucHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uIChkYXRhLCB0YWJsZU5hbWUsIHF1ZXJ5LCBwb3NpdGlvbikge1xuICAgICAgICAgICAgZGF0YSA9IHV0aWxfMS5EYXRhVXRpbC5wYXJzZS5yZXBsYWNlcihkYXRhKTtcbiAgICAgICAgICAgIGlmICh0YWJsZU5hbWUgaW5zdGFuY2VvZiBxdWVyeV8xLlF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgPSB0YWJsZU5hbWU7XG4gICAgICAgICAgICAgICAgdGFibGVOYW1lID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByZXEgPSB0aGlzLmFkYXB0b3IuaW5zZXJ0KHRoaXMsIGRhdGEsIHRhYmxlTmFtZSwgcXVlcnksIHBvc2l0aW9uKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmRhdGFTb3VyY2Uub2ZmbGluZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kb0FqYXhSZXF1ZXN0KHJlcSk7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFNYW5hZ2VyLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoa2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUsIHF1ZXJ5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWVba2V5RmllbGRdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRhYmxlTmFtZSBpbnN0YW5jZW9mIHF1ZXJ5XzEuUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBxdWVyeSA9IHRhYmxlTmFtZTtcbiAgICAgICAgICAgICAgICB0YWJsZU5hbWUgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHJlcyA9IHRoaXMuYWRhcHRvci5yZW1vdmUodGhpcywga2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUsIHF1ZXJ5KTtcbiAgICAgICAgICAgIGlmICh0aGlzLmRhdGFTb3VyY2Uub2ZmbGluZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kb0FqYXhSZXF1ZXN0KHJlcyk7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFNYW5hZ2VyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoa2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUsIHF1ZXJ5KSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHV0aWxfMS5EYXRhVXRpbC5wYXJzZS5yZXBsYWNlcih2YWx1ZSwgIXRoaXMuZGF0YVNvdXJjZS5vZmZsaW5lKTtcbiAgICAgICAgICAgIGlmICh0YWJsZU5hbWUgaW5zdGFuY2VvZiBxdWVyeV8xLlF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgPSB0YWJsZU5hbWU7XG4gICAgICAgICAgICAgICAgdGFibGVOYW1lID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByZXMgPSB0aGlzLmFkYXB0b3IudXBkYXRlKHRoaXMsIGtleUZpZWxkLCB2YWx1ZSwgdGFibGVOYW1lLCBxdWVyeSk7XG4gICAgICAgICAgICBpZiAodGhpcy5kYXRhU291cmNlLm9mZmxpbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZG9BamF4UmVxdWVzdChyZXMpO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhTWFuYWdlci5wcm90b3R5cGUuZG9BamF4UmVxdWVzdCA9IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICB2YXIgZGVmZXIgPSBuZXcgRGVmZXJyZWQoKTtcbiAgICAgICAgICAgIHJlcyA9IGVqMl9iYXNlXzIuZXh0ZW5kKHt9LCB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcsXG4gICAgICAgICAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlXG4gICAgICAgICAgICB9LCByZXMpO1xuICAgICAgICAgICAgdmFyIGFqYXggPSBuZXcgZWoyX2Jhc2VfMS5BamF4KHJlcyk7XG4gICAgICAgICAgICBhamF4LmJlZm9yZVNlbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuYmVmb3JlU2VuZChhamF4Lmh0dHBSZXF1ZXN0LCBhamF4KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBhamF4Lm9uU3VjY2VzcyA9IGZ1bmN0aW9uIChyZWNvcmQsIHJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwucGFyc2UucGFyc2VKc29uKHJlY29yZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlY29yZCA9IFtdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZWNvcmQgPSBfdGhpcy5hZGFwdG9yLnByb2Nlc3NSZXNwb25zZSh1dGlsXzEuRGF0YVV0aWwucGFyc2UucGFyc2VKc29uKHJlY29yZCksIF90aGlzLCBudWxsLCByZXF1ZXN0Lmh0dHBSZXF1ZXN0LCByZXF1ZXN0KTtcbiAgICAgICAgICAgICAgICBkZWZlci5yZXNvbHZlKF90aGlzLCBbeyByZWNvcmQ6IHJlY29yZCwgZGF0YU1hbmFnZXI6IF90aGlzIH1dKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBhamF4Lm9uRmFpbHVyZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZGVmZXIucmVqZWN0KFt7IGVycm9yOiBlIH1dKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBhamF4LnNlbmQoKS5jYXRjaChmdW5jdGlvbiAoZSkgeyByZXR1cm4gdHJ1ZTsgfSk7XG4gICAgICAgICAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIERhdGFNYW5hZ2VyO1xuICAgIH0oKSk7XG4gICAgZXhwb3J0cy5EYXRhTWFuYWdlciA9IERhdGFNYW5hZ2VyO1xuICAgIHZhciBEZWZlcnJlZCA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIERlZmVycmVkKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgICAgICAgICBfdGhpcy5yZWplY3QgPSByZWplY3Q7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMudGhlbiA9IHRoaXMucHJvbWlzZS50aGVuLmJpbmQodGhpcy5wcm9taXNlKTtcbiAgICAgICAgICAgIHRoaXMuY2F0Y2ggPSB0aGlzLnByb21pc2UuY2F0Y2guYmluZCh0aGlzLnByb21pc2UpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBEZWZlcnJlZDtcbiAgICB9KCkpO1xuICAgIGV4cG9ydHMuRGVmZXJyZWQgPSBEZWZlcnJlZDtcbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbWFuYWdlci5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMl9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiQHN5bmNmdXNpb24vZWoyLWJhc2VcIlxuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJkZWZpbmUoW1wicmVxdWlyZVwiLCBcImV4cG9ydHNcIiwgXCJAc3luY2Z1c2lvbi9lajItYmFzZVwiLCBcIi4vbWFuYWdlclwiLCBcIi4vcXVlcnlcIl0sIGZ1bmN0aW9uIChyZXF1aXJlLCBleHBvcnRzLCBlajJfYmFzZV8xLCBtYW5hZ2VyXzEsIHF1ZXJ5XzEpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4gICAgdmFyIGNvbnN0cyA9IHsgR3JvdXBHdWlkOiAnezI3MWJiYmEwLTFlZTd9JyB9O1xuICAgIHZhciBEYXRhVXRpbCA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIERhdGFVdGlsKCkge1xuICAgICAgICB9XG4gICAgICAgIERhdGFVdGlsLmdldFZhbHVlID0gZnVuY3Rpb24gKHZhbHVlLCBpbnN0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmNhbGwoaW5zdCB8fCB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLmVuZHNXaXRoID0gZnVuY3Rpb24gKGlucHV0LCBzdWJzdHIpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dC5zbGljZSgtc3Vic3RyLmxlbmd0aCkgPT09IHN1YnN0cjtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuc3RhcnRzV2l0aCA9IGZ1bmN0aW9uIChpbnB1dCwgc3RhcnQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dC5zbGljZSgwLCBzdGFydC5sZW5ndGgpID09PSBzdGFydDtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuZm5Tb3J0ID0gZnVuY3Rpb24gKG9yZGVyKSB7XG4gICAgICAgICAgICBvcmRlciA9IG9yZGVyID8gb3JkZXIudG9Mb3dlckNhc2UoKSA6ICdhc2NlbmRpbmcnO1xuICAgICAgICAgICAgaWYgKG9yZGVyID09PSAnYXNjZW5kaW5nJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZuQXNjZW5kaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm5EZXNjZW5kaW5nO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5mbkFzY2VuZGluZyA9IGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgICBpZiAoeSA9PT0gbnVsbCB8fCB5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHgubG9jYWxlQ29tcGFyZSh5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh4ID09PSBudWxsIHx8IHggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHggLSB5O1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5mbkRlc2NlbmRpbmcgPSBmdW5jdGlvbiAoeCwgeSkge1xuICAgICAgICAgICAgaWYgKHkgPT09IG51bGwgfHwgeSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZW9mIHggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHgubG9jYWxlQ29tcGFyZSh5KSAqIC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHggPT09IG51bGwgfHwgeCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHkgLSB4O1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5leHRyYWN0RmllbGRzID0gZnVuY3Rpb24gKG9iaiwgZmllbGRzKSB7XG4gICAgICAgICAgICB2YXIgbmV3T2JqID0ge307XG4gICAgICAgICAgICBpZiAoZmllbGRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldE9iamVjdChmaWVsZHNbMF0sIG9iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIG5ld09ialtmaWVsZHNbaV0ucmVwbGFjZSgnLicsICdfJyldID0gdGhpcy5nZXRPYmplY3QoZmllbGRzW2ldLCBvYmopO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ld09iajtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuc2VsZWN0ID0gZnVuY3Rpb24gKGpzb25BcnJheSwgZmllbGRzKSB7XG4gICAgICAgICAgICB2YXIgbmV3RGF0YSA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc29uQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBuZXdEYXRhLnB1c2godGhpcy5leHRyYWN0RmllbGRzKGpzb25BcnJheVtpXSwgZmllbGRzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3RGF0YTtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuZ3JvdXAgPSBmdW5jdGlvbiAoanNvbkFycmF5LCBmaWVsZCwgYWdncmVnYXRlcywgbGV2ZWwsIGdyb3VwRHMsIGZvcm1hdCkge1xuICAgICAgICAgICAgbGV2ZWwgPSBsZXZlbCB8fCAxO1xuICAgICAgICAgICAgdmFyIGpzb25EYXRhID0ganNvbkFycmF5O1xuICAgICAgICAgICAgdmFyIGd1aWQgPSAnR3JvdXBHdWlkJztcbiAgICAgICAgICAgIGlmIChqc29uRGF0YS5Hcm91cEd1aWQgPT09IGNvbnN0c1tndWlkXSkge1xuICAgICAgICAgICAgICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKGopIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGdyb3VwRHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5keCA9IC0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXAgPSBncm91cERzLmZpbHRlcihmdW5jdGlvbiAoZSkgeyByZXR1cm4gZS5rZXkgPT09IGpzb25EYXRhW2pdLmtleTsgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmR4ID0gZ3JvdXBEcy5pbmRleE9mKHRlbXBbMF0pO1xuICAgICAgICAgICAgICAgICAgICAgICAganNvbkRhdGFbal0uaXRlbXMgPSB0aGlzXzEuZ3JvdXAoanNvbkRhdGFbal0uaXRlbXMsIGZpZWxkLCBhZ2dyZWdhdGVzLCBqc29uRGF0YS5sZXZlbCArIDEsIGdyb3VwRHNbaW5keF0uaXRlbXMsIGZvcm1hdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBqc29uRGF0YVtqXS5jb3VudCA9IGdyb3VwRHNbaW5keF0uY291bnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBqc29uRGF0YVtqXS5pdGVtcyA9IHRoaXNfMS5ncm91cChqc29uRGF0YVtqXS5pdGVtcywgZmllbGQsIGFnZ3JlZ2F0ZXMsIGpzb25EYXRhLmxldmVsICsgMSwgbnVsbCwgZm9ybWF0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGpzb25EYXRhW2pdLmNvdW50ID0ganNvbkRhdGFbal0uaXRlbXMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB2YXIgdGhpc18xID0gdGhpcztcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGpzb25EYXRhLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIF9sb29wXzEoaik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGpzb25EYXRhLmNoaWxkTGV2ZWxzICs9IDE7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGpzb25EYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGdyb3VwZWQgPSB7fTtcbiAgICAgICAgICAgIHZhciBncm91cGVkQXJyYXkgPSBbXTtcbiAgICAgICAgICAgIGdyb3VwZWRBcnJheS5Hcm91cEd1aWQgPSBjb25zdHNbZ3VpZF07XG4gICAgICAgICAgICBncm91cGVkQXJyYXkubGV2ZWwgPSBsZXZlbDtcbiAgICAgICAgICAgIGdyb3VwZWRBcnJheS5jaGlsZExldmVscyA9IDA7XG4gICAgICAgICAgICBncm91cGVkQXJyYXkucmVjb3JkcyA9IGpzb25EYXRhO1xuICAgICAgICAgICAgdmFyIF9sb29wXzIgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgICAgIHZhciB2YWwgPSB0aGlzXzIuZ2V0VmFsKGpzb25EYXRhLCBpLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgaWYgKCFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGZvcm1hdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsID0gZm9ybWF0KHZhbCwgZmllbGQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWdyb3VwZWRbdmFsXSkge1xuICAgICAgICAgICAgICAgICAgICBncm91cGVkW3ZhbF0gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6IHZhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWdncmVnYXRlczoge30sXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogZmllbGRcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgZ3JvdXBlZEFycmF5LnB1c2goZ3JvdXBlZFt2YWxdKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGdyb3VwRHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcE9iaiA9IGdyb3VwRHMuZmlsdGVyKGZ1bmN0aW9uIChlKSB7IHJldHVybiBlLmtleSA9PT0gZ3JvdXBlZFt2YWxdLmtleTsgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cGVkW3ZhbF0uY291bnQgPSB0ZW1wT2JqWzBdLmNvdW50O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGdyb3VwZWRbdmFsXS5jb3VudCA9ICFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGdyb3VwRHMpID8gZ3JvdXBlZFt2YWxdLmNvdW50IDogZ3JvdXBlZFt2YWxdLmNvdW50ICs9IDE7XG4gICAgICAgICAgICAgICAgZ3JvdXBlZFt2YWxdLml0ZW1zLnB1c2goanNvbkRhdGFbaV0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHZhciB0aGlzXzIgPSB0aGlzO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc29uRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIF9sb29wXzIoaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWdncmVnYXRlcyAmJiBhZ2dyZWdhdGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBfbG9vcF8zID0gZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlcyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICB2YXIgZm4gPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhZ2dzID0gYWdncmVnYXRlcztcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBhZ2dyZWdhdGVzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbiA9IERhdGFVdGlsLmFnZ3JlZ2F0ZXNbYWdncmVnYXRlc1tqXS50eXBlXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZWoyX2Jhc2VfMS5pc051bGxPclVuZGVmaW5lZChncm91cERzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ZW1wID0gZ3JvdXBEcy5maWx0ZXIoZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGUua2V5ID09PSBncm91cGVkQXJyYXlbaV0ua2V5OyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzW2FnZ3Nbal0uZmllbGQgKyAnIC0gJyArIGFnZ3Nbal0udHlwZV0gPSBmbih0ZW1wWzBdLml0ZW1zLCBhZ2dzW2pdLmZpZWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzW2FnZ3Nbal0uZmllbGQgKyAnIC0gJyArIGFnZ3Nbal0udHlwZV0gPSBmbihncm91cGVkQXJyYXlbaV0uaXRlbXMsIGFnZ3Nbal0uZmllbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBncm91cGVkQXJyYXlbaV0uYWdncmVnYXRlcyA9IHJlcztcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBlZEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIF9sb29wXzMoaSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGdyb3VwZWRBcnJheTtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuYnVpbGRIaWVyYXJjaHkgPSBmdW5jdGlvbiAoZktleSwgZnJvbSwgc291cmNlLCBsb29rdXAsIHBLZXkpIHtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgdmFyIGdycCA9IHt9O1xuICAgICAgICAgICAgdmFyIHRlbXA7XG4gICAgICAgICAgICBpZiAobG9va3VwLnJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGxvb2t1cCA9IGxvb2t1cC5yZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobG9va3VwLkdyb3VwR3VpZCkge1xuICAgICAgICAgICAgICAgIHRoaXMudGhyb3dFcnJvcignRGF0YU1hbmFnZXI6IERvIG5vdCBoYXZlIHN1cHBvcnQgR3JvdXBpbmcgaW4gaGllcmFyY2h5Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbG9va3VwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZLZXlEYXRhID0gdGhpcy5nZXRPYmplY3QoZktleSwgbG9va3VwW2ldKTtcbiAgICAgICAgICAgICAgICB0ZW1wID0gZ3JwW2ZLZXlEYXRhXSB8fCAoZ3JwW2ZLZXlEYXRhXSA9IFtdKTtcbiAgICAgICAgICAgICAgICB0ZW1wLnB1c2gobG9va3VwW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgZktleURhdGEgPSB0aGlzLmdldE9iamVjdChwS2V5IHx8IGZLZXksIHNvdXJjZVtpXSk7XG4gICAgICAgICAgICAgICAgc291cmNlW2ldW2Zyb21dID0gZ3JwW2ZLZXlEYXRhXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuZ2V0RmllbGRMaXN0ID0gZnVuY3Rpb24gKG9iaiwgZmllbGRzLCBwcmVmaXgpIHtcbiAgICAgICAgICAgIGlmIChwcmVmaXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHByZWZpeCA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZpZWxkcyA9PT0gdW5kZWZpbmVkIHx8IGZpZWxkcyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEZpZWxkTGlzdChvYmosIFtdLCBwcmVmaXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGNvcHlPYmogPSBvYmo7XG4gICAgICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGtleXNfMSA9IGtleXM7IF9pIDwga2V5c18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIHZhciBwcm9wID0ga2V5c18xW19pXTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvcHlPYmpbcHJvcF0gPT09ICdvYmplY3QnICYmICEoY29weU9ialtwcm9wXSBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEZpZWxkTGlzdChjb3B5T2JqW3Byb3BdLCBmaWVsZHMsIHByZWZpeCArIHByb3AgKyAnLicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzLnB1c2gocHJlZml4ICsgcHJvcCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZpZWxkcztcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuZ2V0T2JqZWN0ID0gZnVuY3Rpb24gKG5hbWVTcGFjZSwgZnJvbSkge1xuICAgICAgICAgICAgaWYgKCFuYW1lU3BhY2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnJvbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChuYW1lU3BhY2UuaW5kZXhPZignLicpID09PSAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmcm9tW25hbWVTcGFjZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBmcm9tO1xuICAgICAgICAgICAgdmFyIHNwbGl0cyA9IG5hbWVTcGFjZS5zcGxpdCgnLicpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzcGxpdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZVtzcGxpdHNbaV1dO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5zb3J0ID0gZnVuY3Rpb24gKGRzLCBmaWVsZCwgY29tcGFyZXIpIHtcbiAgICAgICAgICAgIGlmIChkcy5sZW5ndGggPD0gMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBtaWRkbGUgPSBwYXJzZUludCgoZHMubGVuZ3RoIC8gMikudG9TdHJpbmcoKSwgMTApO1xuICAgICAgICAgICAgdmFyIGxlZnQgPSBkcy5zbGljZSgwLCBtaWRkbGUpO1xuICAgICAgICAgICAgdmFyIHJpZ2h0ID0gZHMuc2xpY2UobWlkZGxlKTtcbiAgICAgICAgICAgIGxlZnQgPSB0aGlzLnNvcnQobGVmdCwgZmllbGQsIGNvbXBhcmVyKTtcbiAgICAgICAgICAgIHJpZ2h0ID0gdGhpcy5zb3J0KHJpZ2h0LCBmaWVsZCwgY29tcGFyZXIpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWVyZ2UobGVmdCwgcmlnaHQsIGZpZWxkLCBjb21wYXJlcik7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLm1lcmdlID0gZnVuY3Rpb24gKGxlZnQsIHJpZ2h0LCBmaWVsZE5hbWUsIGNvbXBhcmVyKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICAgICAgICB2YXIgY3VycmVudDtcbiAgICAgICAgICAgIHdoaWxlIChsZWZ0Lmxlbmd0aCA+IDAgfHwgcmlnaHQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGlmIChsZWZ0Lmxlbmd0aCA+IDAgJiYgcmlnaHQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGFyZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBjb21wYXJlcih0aGlzLmdldFZhbChsZWZ0LCAwLCBmaWVsZE5hbWUpLCB0aGlzLmdldFZhbChyaWdodCwgMCwgZmllbGROYW1lKSkgPD0gMCA/IGxlZnQgOiByaWdodDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBsZWZ0WzBdW2ZpZWxkTmFtZV0gPCBsZWZ0WzBdW2ZpZWxkTmFtZV0gPyBsZWZ0IDogcmlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBsZWZ0Lmxlbmd0aCA+IDAgPyBsZWZ0IDogcmlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGN1cnJlbnQuc2hpZnQoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5nZXRWYWwgPSBmdW5jdGlvbiAoYXJyYXksIGluZGV4LCBmaWVsZCkge1xuICAgICAgICAgICAgcmV0dXJuIGZpZWxkID8gdGhpcy5nZXRPYmplY3QoZmllbGQsIGFycmF5W2luZGV4XSkgOiBhcnJheVtpbmRleF07XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLnRvTG93ZXJDYXNlID0gZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbCA/IHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnID8gdmFsLnRvTG93ZXJDYXNlKCkgOiB2YWwudG9TdHJpbmcoKSA6ICh2YWwgPT09IDAgfHwgdmFsID09PSBmYWxzZSkgPyB2YWwudG9TdHJpbmcoKSA6ICcnO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uID0gZnVuY3Rpb24gKGFkYXB0b3IsIGZuTmFtZSwgcGFyYW0xLCBwYXJhbTIpIHtcbiAgICAgICAgICAgIGlmIChmbk5hbWUgaW4gYWRhcHRvcikge1xuICAgICAgICAgICAgICAgIHZhciByZXMgPSBhZGFwdG9yW2ZuTmFtZV0ocGFyYW0xLCBwYXJhbTIpO1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5mbk9wZXJhdG9ycy5pc251bGwocmVzKSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbTEgPSByZXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHBhcmFtMTtcbiAgICAgICAgfTtcbiAgICAgICAgRGF0YVV0aWwuaXNQbGFpbk9iamVjdCA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgIHJldHVybiAoISFvYmopICYmIChvYmouY29uc3RydWN0b3IgPT09IE9iamVjdCk7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLmlzQ29ycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB4aHIgPSBudWxsO1xuICAgICAgICAgICAgdmFyIHJlcXVlc3QgPSAnWE1MSHR0cFJlcXVlc3QnO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB4aHIgPSBuZXcgd2luZG93W3JlcXVlc3RdKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICEheGhyICYmICgnd2l0aENyZWRlbnRpYWxzJyBpbiB4aHIpO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5nZXRHdWlkID0gZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgICAgICAgdmFyIGhleHMgPSAnMDEyMzQ1Njc4OWFiY2RlZic7XG4gICAgICAgICAgICB2YXIgcmFuZDtcbiAgICAgICAgICAgIHJldHVybiAocHJlZml4IHx8ICcnKSArICcwMDAwMDAwMC0wMDAwLTQwMDAtMDAwMC0wMDAwMDAwMDAwMDAnLnJlcGxhY2UoLzAvZywgZnVuY3Rpb24gKHZhbCwgaSkge1xuICAgICAgICAgICAgICAgIGlmICgnY3J5cHRvJyBpbiB3aW5kb3cgJiYgJ2dldFJhbmRvbVZhbHVlcycgaW4gY3J5cHRvKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhcnIgPSBuZXcgVWludDhBcnJheSgxKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyKTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZCA9IGFyclswXSAlIDE2IHwgMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJhbmQgPSBNYXRoLnJhbmRvbSgpICogMTYgfCAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gaGV4c1tpID09PSAxOSA/IHJhbmQgJiAweDMgfCAweDggOiByYW5kXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5pc051bGwgPSBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsID09PSB1bmRlZmluZWQgfHwgdmFsID09PSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5nZXRJdGVtRnJvbUNvbXBhcmVyID0gZnVuY3Rpb24gKGFycmF5LCBmaWVsZCwgY29tcGFyZXIpIHtcbiAgICAgICAgICAgIHZhciBrZXlWYWw7XG4gICAgICAgICAgICB2YXIgY3VycmVudDtcbiAgICAgICAgICAgIHZhciBrZXk7XG4gICAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgICB2YXIgY2FzdFJlcXVpcmVkID0gdHlwZW9mIERhdGFVdGlsLmdldFZhbChhcnJheSwgMCwgZmllbGQpID09PSAnc3RyaW5nJztcbiAgICAgICAgICAgIGlmIChhcnJheS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAoZWoyX2Jhc2VfMS5pc051bGxPclVuZGVmaW5lZChrZXlWYWwpICYmIGkgPCBhcnJheS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAga2V5VmFsID0gRGF0YVV0aWwuZ2V0VmFsKGFycmF5LCBpLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgICAgIGtleSA9IGFycmF5W2krK107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICg7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSBEYXRhVXRpbC5nZXRWYWwoYXJyYXksIGksIGZpZWxkKTtcbiAgICAgICAgICAgICAgICBpZiAoZWoyX2Jhc2VfMS5pc051bGxPclVuZGVmaW5lZChjdXJyZW50KSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNhc3RSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgICAgICBrZXlWYWwgPSAra2V5VmFsO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gK2N1cnJlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjb21wYXJlcihrZXlWYWwsIGN1cnJlbnQpID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBrZXlWYWwgPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICBrZXkgPSBhcnJheVtpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ga2V5O1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5kaXN0aW5jdCA9IGZ1bmN0aW9uIChqc29uLCBmaWVsZE5hbWUsIHJlcXVpcmVzQ29tcGxldGVSZWNvcmQpIHtcbiAgICAgICAgICAgIHJlcXVpcmVzQ29tcGxldGVSZWNvcmQgPSBlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKHJlcXVpcmVzQ29tcGxldGVSZWNvcmQpID8gZmFsc2UgOiByZXF1aXJlc0NvbXBsZXRlUmVjb3JkO1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgdmFyIHZhbDtcbiAgICAgICAgICAgIHZhciB0bXAgPSB7fTtcbiAgICAgICAgICAgIGpzb24uZm9yRWFjaChmdW5jdGlvbiAoZGF0YSwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICB2YWwgPSBEYXRhVXRpbC5nZXRWYWwoanNvbiwgaW5kZXgsIGZpZWxkTmFtZSk7XG4gICAgICAgICAgICAgICAgaWYgKCEodmFsIGluIHRtcCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goIXJlcXVpcmVzQ29tcGxldGVSZWNvcmQgPyB2YWwgOiBqc29uW2luZGV4XSk7XG4gICAgICAgICAgICAgICAgICAgIHRtcFt2YWxdID0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLnNlcnZlclRpbWV6b25lT2Zmc2V0ID0gMDtcbiAgICAgICAgRGF0YVV0aWwudGhyb3dFcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlLm1lc3NhZ2UgKyAnXFxuJyArIGUuc3RhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLmFnZ3JlZ2F0ZXMgPSB7XG4gICAgICAgICAgICBzdW06IGZ1bmN0aW9uIChkcywgZmllbGQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0gMDtcbiAgICAgICAgICAgICAgICB2YXIgdmFsO1xuICAgICAgICAgICAgICAgIHZhciBjYXN0UmVxdWlyZWQgPSB0eXBlb2YgRGF0YVV0aWwuZ2V0VmFsKGRzLCAwLCBmaWVsZCkgIT09ICdudW1iZXInO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsID0gRGF0YVV0aWwuZ2V0VmFsKGRzLCBpLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNOYU4odmFsKSAmJiB2YWwgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYXN0UmVxdWlyZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWwgPSArdmFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IHZhbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGF2ZXJhZ2U6IGZ1bmN0aW9uIChkcywgZmllbGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwuYWdncmVnYXRlcy5zdW0oZHMsIGZpZWxkKSAvIGRzLmxlbmd0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtaW46IGZ1bmN0aW9uIChkcywgZmllbGQpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29tcGFyZXI7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBmaWVsZCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBjb21wYXJlciA9IGZpZWxkO1xuICAgICAgICAgICAgICAgICAgICBmaWVsZCA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBEYXRhVXRpbC5nZXRPYmplY3QoZmllbGQsIERhdGFVdGlsLmdldEl0ZW1Gcm9tQ29tcGFyZXIoZHMsIGZpZWxkLCBjb21wYXJlciB8fCBEYXRhVXRpbC5mbkFzY2VuZGluZykpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1heDogZnVuY3Rpb24gKGRzLCBmaWVsZCkge1xuICAgICAgICAgICAgICAgIHZhciBjb21wYXJlcjtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGZpZWxkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhcmVyID0gZmllbGQ7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIERhdGFVdGlsLmdldE9iamVjdChmaWVsZCwgRGF0YVV0aWwuZ2V0SXRlbUZyb21Db21wYXJlcihkcywgZmllbGQsIGNvbXBhcmVyIHx8IERhdGFVdGlsLmZuRGVzY2VuZGluZykpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRydWVjb3VudDogZnVuY3Rpb24gKGRzLCBmaWVsZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgbWFuYWdlcl8xLkRhdGFNYW5hZ2VyKGRzKS5leGVjdXRlTG9jYWwobmV3IHF1ZXJ5XzEuUXVlcnkoKS53aGVyZShmaWVsZCwgJ2VxdWFsJywgdHJ1ZSwgdHJ1ZSkpLmxlbmd0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWxzZWNvdW50OiBmdW5jdGlvbiAoZHMsIGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBtYW5hZ2VyXzEuRGF0YU1hbmFnZXIoZHMpLmV4ZWN1dGVMb2NhbChuZXcgcXVlcnlfMS5RdWVyeSgpLndoZXJlKGZpZWxkLCAnZXF1YWwnLCBmYWxzZSwgdHJ1ZSkpLmxlbmd0aDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb3VudDogZnVuY3Rpb24gKGRzLCBmaWVsZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkcy5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLm9wZXJhdG9yU3ltYm9scyA9IHtcbiAgICAgICAgICAgICc8JzogJ2xlc3N0aGFuJyxcbiAgICAgICAgICAgICc+JzogJ2dyZWF0ZXJ0aGFuJyxcbiAgICAgICAgICAgICc8PSc6ICdsZXNzdGhhbm9yZXF1YWwnLFxuICAgICAgICAgICAgJz49JzogJ2dyZWF0ZXJ0aGFub3JlcXVhbCcsXG4gICAgICAgICAgICAnPT0nOiAnZXF1YWwnLFxuICAgICAgICAgICAgJyE9JzogJ25vdGVxdWFsJyxcbiAgICAgICAgICAgICcqPSc6ICdjb250YWlucycsXG4gICAgICAgICAgICAnJD0nOiAnZW5kc3dpdGgnLFxuICAgICAgICAgICAgJ149JzogJ3N0YXJ0c3dpdGgnXG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLm9kQmlPcGVyYXRvciA9IHtcbiAgICAgICAgICAgICc8JzogJyBsdCAnLFxuICAgICAgICAgICAgJz4nOiAnIGd0ICcsXG4gICAgICAgICAgICAnPD0nOiAnIGxlICcsXG4gICAgICAgICAgICAnPj0nOiAnIGdlICcsXG4gICAgICAgICAgICAnPT0nOiAnIGVxICcsXG4gICAgICAgICAgICAnIT0nOiAnIG5lICcsXG4gICAgICAgICAgICAnbGVzc3RoYW4nOiAnIGx0ICcsXG4gICAgICAgICAgICAnbGVzc3RoYW5vcmVxdWFsJzogJyBsZSAnLFxuICAgICAgICAgICAgJ2dyZWF0ZXJ0aGFuJzogJyBndCAnLFxuICAgICAgICAgICAgJ2dyZWF0ZXJ0aGFub3JlcXVhbCc6ICcgZ2UgJyxcbiAgICAgICAgICAgICdlcXVhbCc6ICcgZXEgJyxcbiAgICAgICAgICAgICdub3RlcXVhbCc6ICcgbmUgJ1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5vZFVuaU9wZXJhdG9yID0ge1xuICAgICAgICAgICAgJyQ9JzogJ2VuZHN3aXRoJyxcbiAgICAgICAgICAgICdePSc6ICdzdGFydHN3aXRoJyxcbiAgICAgICAgICAgICcqPSc6ICdzdWJzdHJpbmdvZicsXG4gICAgICAgICAgICAnZW5kc3dpdGgnOiAnZW5kc3dpdGgnLFxuICAgICAgICAgICAgJ3N0YXJ0c3dpdGgnOiAnc3RhcnRzd2l0aCcsXG4gICAgICAgICAgICAnY29udGFpbnMnOiAnc3Vic3RyaW5nb2YnXG4gICAgICAgIH07XG4gICAgICAgIERhdGFVdGlsLm9kdjRVbmlPcGVyYXRvciA9IHtcbiAgICAgICAgICAgICckPSc6ICdlbmRzd2l0aCcsXG4gICAgICAgICAgICAnXj0nOiAnc3RhcnRzd2l0aCcsXG4gICAgICAgICAgICAnKj0nOiAnY29udGFpbnMnLFxuICAgICAgICAgICAgJ2VuZHN3aXRoJzogJ2VuZHN3aXRoJyxcbiAgICAgICAgICAgICdzdGFydHN3aXRoJzogJ3N0YXJ0c3dpdGgnLFxuICAgICAgICAgICAgJ2NvbnRhaW5zJzogJ2NvbnRhaW5zJ1xuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5mbk9wZXJhdG9ycyA9IHtcbiAgICAgICAgICAgIGVxdWFsOiBmdW5jdGlvbiAoYWN0dWFsLCBleHBlY3RlZCwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgIGlmIChpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhVXRpbC50b0xvd2VyQ2FzZShhY3R1YWwpID09PSBEYXRhVXRpbC50b0xvd2VyQ2FzZShleHBlY3RlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhY3R1YWwgPT09IGV4cGVjdGVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5vdGVxdWFsOiBmdW5jdGlvbiAoYWN0dWFsLCBleHBlY3RlZCwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAhRGF0YVV0aWwuZm5PcGVyYXRvcnMuZXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgaWdub3JlQ2FzZSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGVzc3RoYW46IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlnbm9yZUNhc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERhdGFVdGlsLnRvTG93ZXJDYXNlKGFjdHVhbCkgPCBEYXRhVXRpbC50b0xvd2VyQ2FzZShleHBlY3RlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhY3R1YWwgPCBleHBlY3RlZDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBncmVhdGVydGhhbjogZnVuY3Rpb24gKGFjdHVhbCwgZXhwZWN0ZWQsIGlnbm9yZUNhc2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwudG9Mb3dlckNhc2UoYWN0dWFsKSA+IERhdGFVdGlsLnRvTG93ZXJDYXNlKGV4cGVjdGVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjdHVhbCA+IGV4cGVjdGVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxlc3N0aGFub3JlcXVhbDogZnVuY3Rpb24gKGFjdHVhbCwgZXhwZWN0ZWQsIGlnbm9yZUNhc2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwudG9Mb3dlckNhc2UoYWN0dWFsKSA8PSBEYXRhVXRpbC50b0xvd2VyQ2FzZShleHBlY3RlZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhY3R1YWwgPD0gZXhwZWN0ZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ3JlYXRlcnRoYW5vcmVxdWFsOiBmdW5jdGlvbiAoYWN0dWFsLCBleHBlY3RlZCwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgIGlmIChpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhVXRpbC50b0xvd2VyQ2FzZShhY3R1YWwpID49IERhdGFVdGlsLnRvTG93ZXJDYXNlKGV4cGVjdGVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjdHVhbCA+PSBleHBlY3RlZDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb250YWluczogZnVuY3Rpb24gKGFjdHVhbCwgZXhwZWN0ZWQsIGlnbm9yZUNhc2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIWVqMl9iYXNlXzEuaXNOdWxsT3JVbmRlZmluZWQoYWN0dWFsKSAmJiAhZWoyX2Jhc2VfMS5pc051bGxPclVuZGVmaW5lZChleHBlY3RlZCkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFVdGlsLnRvTG93ZXJDYXNlKGFjdHVhbCkuaW5kZXhPZihEYXRhVXRpbC50b0xvd2VyQ2FzZShleHBlY3RlZCkpICE9PSAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuICFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGFjdHVhbCkgJiYgIWVqMl9iYXNlXzEuaXNOdWxsT3JVbmRlZmluZWQoZXhwZWN0ZWQpICYmXG4gICAgICAgICAgICAgICAgICAgIGFjdHVhbC50b1N0cmluZygpLmluZGV4T2YoZXhwZWN0ZWQpICE9PSAtMTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBub3RudWxsOiBmdW5jdGlvbiAoYWN0dWFsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjdHVhbCAhPT0gbnVsbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc251bGw6IGZ1bmN0aW9uIChhY3R1YWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYWN0dWFsID09PSBudWxsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YXJ0c3dpdGg6IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlnbm9yZUNhc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjdHVhbCAmJiBleHBlY3RlZCAmJiBEYXRhVXRpbC5zdGFydHNXaXRoKGFjdHVhbC50b0xvd2VyQ2FzZSgpLCBleHBlY3RlZC50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjdHVhbCAmJiBleHBlY3RlZCAmJiBEYXRhVXRpbC5zdGFydHNXaXRoKGFjdHVhbCwgZXhwZWN0ZWQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVuZHN3aXRoOiBmdW5jdGlvbiAoYWN0dWFsLCBleHBlY3RlZCwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgICAgIGlmIChpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhY3R1YWwgJiYgZXhwZWN0ZWQgJiYgRGF0YVV0aWwuZW5kc1dpdGgoYWN0dWFsLnRvTG93ZXJDYXNlKCksIGV4cGVjdGVkLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gYWN0dWFsICYmIGV4cGVjdGVkICYmIERhdGFVdGlsLmVuZHNXaXRoKGFjdHVhbCwgZXhwZWN0ZWQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByb2Nlc3NTeW1ib2xzOiBmdW5jdGlvbiAob3BlcmF0b3IpIHtcbiAgICAgICAgICAgICAgICB2YXIgZm5OYW1lID0gRGF0YVV0aWwub3BlcmF0b3JTeW1ib2xzW29wZXJhdG9yXTtcbiAgICAgICAgICAgICAgICBpZiAoZm5OYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmbiA9IERhdGFVdGlsLmZuT3BlcmF0b3JzW2ZuTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIERhdGFVdGlsLnRocm93RXJyb3IoJ1F1ZXJ5IC0gUHJvY2VzcyBPcGVyYXRvciA6IEludmFsaWQgb3BlcmF0b3InKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcm9jZXNzT3BlcmF0b3I6IGZ1bmN0aW9uIChvcGVyYXRvcikge1xuICAgICAgICAgICAgICAgIHZhciBmbiA9IERhdGFVdGlsLmZuT3BlcmF0b3JzW29wZXJhdG9yXTtcbiAgICAgICAgICAgICAgICBpZiAoZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwuZm5PcGVyYXRvcnMucHJvY2Vzc1N5bWJvbHMob3BlcmF0b3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBEYXRhVXRpbC5wYXJzZSA9IHtcbiAgICAgICAgICAgIHBhcnNlSnNvbjogZnVuY3Rpb24gKGpzb25UZXh0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBqc29uVGV4dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAganNvblRleHQgPSBKU09OLnBhcnNlKGpzb25UZXh0LCBEYXRhVXRpbC5wYXJzZS5qc29uUmV2aXZlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGpzb25UZXh0IGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgRGF0YVV0aWwucGFyc2UuaXRlcmF0ZUFuZFJldml2ZUFycmF5KGpzb25UZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGpzb25UZXh0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICBEYXRhVXRpbC5wYXJzZS5pdGVyYXRlQW5kUmV2aXZlSnNvbihqc29uVGV4dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBqc29uVGV4dDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpdGVyYXRlQW5kUmV2aXZlQXJyYXk6IGZ1bmN0aW9uIChhcnJheSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcnJheVtpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFVdGlsLnBhcnNlLml0ZXJhdGVBbmRSZXZpdmVKc29uKGFycmF5W2ldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgYXJyYXlbaV0gPT09ICdzdHJpbmcnICYmICEvXltcXHNdKlxcW3xeW1xcc10qXFx7fFxcXCIvZy50ZXN0KGFycmF5W2ldKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXlbaV0gPSBEYXRhVXRpbC5wYXJzZS5qc29uUmV2aXZlcignJywgYXJyYXlbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJyYXlbaV0gPSBEYXRhVXRpbC5wYXJzZS5wYXJzZUpzb24oYXJyYXlbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGl0ZXJhdGVBbmRSZXZpdmVKc29uOiBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZTtcbiAgICAgICAgICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGpzb24pO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwga2V5c18yID0ga2V5czsgX2kgPCBrZXlzXzIubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wID0ga2V5c18yW19pXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKERhdGFVdGlsLnN0YXJ0c1dpdGgocHJvcCwgJ19fJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0ganNvbltwcm9wXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0YVV0aWwucGFyc2UuaXRlcmF0ZUFuZFJldml2ZUFycmF5KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0YVV0aWwucGFyc2UuaXRlcmF0ZUFuZFJldml2ZUpzb24odmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAganNvbltwcm9wXSA9IERhdGFVdGlsLnBhcnNlLmpzb25SZXZpdmVyKGpzb25bcHJvcF0sIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBqc29uUmV2aXZlcjogZnVuY3Rpb24gKGZpZWxkLCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBkdXBWYWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtcyA9IC9eXFwvRGF0ZVxcKChbKy1dP1swLTldKykoWystXVswLTldezR9KT9cXClcXC8kLy5leGVjKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwucGFyc2UuanNvblJlcGxhY2VyKHsgdmFsdWU6IG5ldyBEYXRlKHBhcnNlSW50KG1zWzFdLCAxMCkpIH0sIGZhbHNlKS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICgvXihcXGR7NH1cXC1cXGRcXGRcXC1cXGRcXGQoW3RUXVtcXGQ6XFwuXSopezF9KShbelpdfChbK1xcLV0pKFxcZFxcZCk6PyhcXGRcXGQpKT8kLy50ZXN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFyciA9IGR1cFZhbHVlLnNwbGl0KC9bXjAtOV0vKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gRGF0YVV0aWwucGFyc2UuanNvblJlcGxhY2VyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV3IERhdGUocGFyc2VJbnQoYXJyWzBdLCAxMCksIHBhcnNlSW50KGFyclsxXSwgMTApIC0gMSwgcGFyc2VJbnQoYXJyWzJdLCAxMCksIHBhcnNlSW50KGFyclszXSwgMTApLCBwYXJzZUludChhcnJbNF0sIDEwKSwgcGFyc2VJbnQoYXJyWzVdLCAxMCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmYWxzZSkudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGlzSnNvbjogZnVuY3Rpb24gKGpzb25EYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBqc29uRGF0YVswXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGpzb25EYXRhO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwucGFyc2UucGFyc2VKc29uKGpzb25EYXRhKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc0d1aWQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciByZWdleCA9IC9bQS1GYS1mMC05XXs4fSg/Oi1bQS1GYS1mMC05XXs0fSl7M30tW0EtRmEtZjAtOV17MTJ9L2k7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gcmVnZXguZXhlYyh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoICE9IG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVwbGFjZXI6IGZ1bmN0aW9uICh2YWx1ZSwgc3RyaW5naWZ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKERhdGFVdGlsLmlzUGxhaW5PYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhVXRpbC5wYXJzZS5qc29uUmVwbGFjZXIodmFsdWUsIHN0cmluZ2lmeSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBEYXRhVXRpbC5wYXJzZS5hcnJheVJlcGxhY2VyKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gRGF0YVV0aWwucGFyc2UuanNvblJlcGxhY2VyKHsgdmFsOiB2YWx1ZSB9LCBzdHJpbmdpZnkpLnZhbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGpzb25SZXBsYWNlcjogZnVuY3Rpb24gKHZhbCwgc3RyaW5naWZ5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHN0cmluZ2lmeSA9PT0gdm9pZCAwKSB7IHN0cmluZ2lmeSA9IHRydWU7IH1cbiAgICAgICAgICAgICAgICB2YXIgdmFsdWU7XG4gICAgICAgICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWwpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwga2V5c18zID0ga2V5czsgX2kgPCBrZXlzXzMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wID0ga2V5c18zW19pXTtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB2YWxbcHJvcF07XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBkID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIHZhciB1bml4c3RhbXAgPSArZCAtIChkLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMCk7XG4gICAgICAgICAgICAgICAgICAgIHZhbFtwcm9wXSA9IG5ldyBEYXRlKHVuaXhzdGFtcCAtIChEYXRhVXRpbC5zZXJ2ZXJUaW1lem9uZU9mZnNldCAqIDM2MDAwMDApKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmluZ2lmeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsW3Byb3BdID0gdmFsW3Byb3BdLnRvSlNPTigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXJyYXlSZXBsYWNlcjogZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChEYXRhVXRpbC5pc1BsYWluT2JqZWN0KHZhbFtpXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbFtpXSA9IERhdGFVdGlsLnBhcnNlLmpzb25SZXBsYWNlcih2YWxbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbFtpXSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbFtpXSA9IERhdGFVdGlsLnBhcnNlLmpzb25SZXBsYWNlcih7IGRhdGU6IHZhbFtpXSB9KS5kYXRlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBEYXRhVXRpbDtcbiAgICB9KCkpO1xuICAgIGV4cG9ydHMuRGF0YVV0aWwgPSBEYXRhVXRpbDtcbn0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvdXRpbC5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJkZWZpbmUoW1wicmVxdWlyZVwiLCBcImV4cG9ydHNcIiwgXCIuL3V0aWxcIl0sIGZ1bmN0aW9uIChyZXF1aXJlLCBleHBvcnRzLCB1dGlsXzEpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4gICAgdmFyIFF1ZXJ5ID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gUXVlcnkoZnJvbSkge1xuICAgICAgICAgICAgdGhpcy5zdWJRdWVyeSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmlzQ2hpbGQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucXVlcmllcyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5rZXkgPSAnJztcbiAgICAgICAgICAgIHRoaXMuZktleSA9ICcnO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBmcm9tID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRoaXMuZnJvbVRhYmxlID0gZnJvbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGZyb20gJiYgZnJvbSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb29rdXBzID0gZnJvbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZXhwYW5kcyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5zb3J0ZWRDb2x1bW5zID0gW107XG4gICAgICAgICAgICB0aGlzLmdyb3VwZWRDb2x1bW5zID0gW107XG4gICAgICAgICAgICB0aGlzLnN1YlF1ZXJ5ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuaXNDaGlsZCA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBbXTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5zZXRLZXkgPSBmdW5jdGlvbiAoZmllbGQpIHtcbiAgICAgICAgICAgIHRoaXMua2V5ID0gZmllbGQ7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLnVzaW5nID0gZnVuY3Rpb24gKGRhdGFNYW5hZ2VyKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGFNYW5hZ2VyID0gZGF0YU1hbmFnZXI7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLmV4ZWN1dGUgPSBmdW5jdGlvbiAoZGF0YU1hbmFnZXIsIGRvbmUsIGZhaWwsIGFsd2F5cykge1xuICAgICAgICAgICAgZGF0YU1hbmFnZXIgPSBkYXRhTWFuYWdlciB8fCB0aGlzLmRhdGFNYW5hZ2VyO1xuICAgICAgICAgICAgaWYgKGRhdGFNYW5hZ2VyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFNYW5hZ2VyLmV4ZWN1dGVRdWVyeSh0aGlzLCBkb25lLCBmYWlsLCBhbHdheXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC50aHJvd0Vycm9yKCdRdWVyeSAtIGV4ZWN1dGUoKSA6IGRhdGFNYW5hZ2VyIG5lZWRzIHRvIGJlIGlzIHNldCB1c2luZyBcInVzaW5nXCIgZnVuY3Rpb24gb3Igc2hvdWxkIGJlIHBhc3NlZCBhcyBhcmd1bWVudCcpO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5wcm90b3R5cGUuZXhlY3V0ZUxvY2FsID0gZnVuY3Rpb24gKGRhdGFNYW5hZ2VyKSB7XG4gICAgICAgICAgICBkYXRhTWFuYWdlciA9IGRhdGFNYW5hZ2VyIHx8IHRoaXMuZGF0YU1hbmFnZXI7XG4gICAgICAgICAgICBpZiAoZGF0YU1hbmFnZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YU1hbmFnZXIuZXhlY3V0ZUxvY2FsKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC50aHJvd0Vycm9yKCdRdWVyeSAtIGV4ZWN1dGVMb2NhbCgpIDogZGF0YU1hbmFnZXIgbmVlZHMgdG8gYmUgaXMgc2V0IHVzaW5nIFwidXNpbmdcIiBmdW5jdGlvbiBvciBzaG91bGQgYmUgcGFzc2VkIGFzIGFyZ3VtZW50Jyk7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBjbG9uZWQgPSBuZXcgUXVlcnkoKTtcbiAgICAgICAgICAgIGNsb25lZC5xdWVyaWVzID0gdGhpcy5xdWVyaWVzLnNsaWNlKDApO1xuICAgICAgICAgICAgY2xvbmVkLmtleSA9IHRoaXMua2V5O1xuICAgICAgICAgICAgY2xvbmVkLmlzQ2hpbGQgPSB0aGlzLmlzQ2hpbGQ7XG4gICAgICAgICAgICBjbG9uZWQuZGF0YU1hbmFnZXIgPSB0aGlzLmRhdGFNYW5hZ2VyO1xuICAgICAgICAgICAgY2xvbmVkLmZyb21UYWJsZSA9IHRoaXMuZnJvbVRhYmxlO1xuICAgICAgICAgICAgY2xvbmVkLnBhcmFtcyA9IHRoaXMucGFyYW1zLnNsaWNlKDApO1xuICAgICAgICAgICAgY2xvbmVkLmV4cGFuZHMgPSB0aGlzLmV4cGFuZHMuc2xpY2UoMCk7XG4gICAgICAgICAgICBjbG9uZWQuc29ydGVkQ29sdW1ucyA9IHRoaXMuc29ydGVkQ29sdW1ucy5zbGljZSgwKTtcbiAgICAgICAgICAgIGNsb25lZC5ncm91cGVkQ29sdW1ucyA9IHRoaXMuZ3JvdXBlZENvbHVtbnMuc2xpY2UoMCk7XG4gICAgICAgICAgICBjbG9uZWQuc3ViUXVlcnlTZWxlY3RvciA9IHRoaXMuc3ViUXVlcnlTZWxlY3RvcjtcbiAgICAgICAgICAgIGNsb25lZC5zdWJRdWVyeSA9IHRoaXMuc3ViUXVlcnk7XG4gICAgICAgICAgICBjbG9uZWQuZktleSA9IHRoaXMuZktleTtcbiAgICAgICAgICAgIGNsb25lZC5pc0NvdW50UmVxdWlyZWQgPSB0aGlzLmlzQ291bnRSZXF1aXJlZDtcbiAgICAgICAgICAgIHJldHVybiBjbG9uZWQ7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5mcm9tID0gZnVuY3Rpb24gKHRhYmxlTmFtZSkge1xuICAgICAgICAgICAgdGhpcy5mcm9tVGFibGUgPSB0YWJsZU5hbWU7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLmFkZFBhcmFtcyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMucHVzaCh7IGtleToga2V5LCBmbjogdmFsdWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcy5wdXNoKHsga2V5OiBrZXksIHZhbHVlOiB2YWx1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5wcm90b3R5cGUuZXhwYW5kID0gZnVuY3Rpb24gKHRhYmxlcykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0YWJsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leHBhbmRzID0gW10uc2xpY2UuY2FsbChbdGFibGVzXSwgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV4cGFuZHMgPSB0YWJsZXMuc2xpY2UoMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLndoZXJlID0gZnVuY3Rpb24gKGZpZWxkTmFtZSwgb3BlcmF0b3IsIHZhbHVlLCBpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICBvcGVyYXRvciA9IG9wZXJhdG9yID8gKG9wZXJhdG9yKS50b0xvd2VyQ2FzZSgpIDogbnVsbDtcbiAgICAgICAgICAgIHZhciBwcmVkaWNhdGUgPSBudWxsO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBmaWVsZE5hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcHJlZGljYXRlID0gbmV3IFByZWRpY2F0ZShmaWVsZE5hbWUsIG9wZXJhdG9yLCB2YWx1ZSwgaWdub3JlQ2FzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChmaWVsZE5hbWUgaW5zdGFuY2VvZiBQcmVkaWNhdGUpIHtcbiAgICAgICAgICAgICAgICBwcmVkaWNhdGUgPSBmaWVsZE5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnF1ZXJpZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgZm46ICdvbldoZXJlJyxcbiAgICAgICAgICAgICAgICBlOiBwcmVkaWNhdGVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5zZWFyY2ggPSBmdW5jdGlvbiAoc2VhcmNoS2V5LCBmaWVsZE5hbWVzLCBvcGVyYXRvciwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBmaWVsZE5hbWVzID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGZpZWxkTmFtZXMgPSBbZmllbGROYW1lc107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcGVyYXRvciA9IG9wZXJhdG9yIHx8ICdjb250YWlucyc7XG4gICAgICAgICAgICB2YXIgY29tcGFyZXIgPSB1dGlsXzEuRGF0YVV0aWwuZm5PcGVyYXRvcnNbb3BlcmF0b3JdO1xuICAgICAgICAgICAgdGhpcy5xdWVyaWVzLnB1c2goe1xuICAgICAgICAgICAgICAgIGZuOiAnb25TZWFyY2gnLFxuICAgICAgICAgICAgICAgIGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGROYW1lczogZmllbGROYW1lcyxcbiAgICAgICAgICAgICAgICAgICAgb3BlcmF0b3I6IG9wZXJhdG9yLFxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hLZXk6IHNlYXJjaEtleSxcbiAgICAgICAgICAgICAgICAgICAgaWdub3JlQ2FzZTogaWdub3JlQ2FzZSxcbiAgICAgICAgICAgICAgICAgICAgY29tcGFyZXI6IGNvbXBhcmVyXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLnNvcnRCeSA9IGZ1bmN0aW9uIChmaWVsZE5hbWUsIGNvbXBhcmVyLCBpc0Zyb21Hcm91cCkge1xuICAgICAgICAgICAgdmFyIG9yZGVyID0gJ2FzY2VuZGluZyc7XG4gICAgICAgICAgICB2YXIgc29ydHM7XG4gICAgICAgICAgICB2YXIgdGVtcDtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZmllbGROYW1lID09PSAnc3RyaW5nJyAmJiB1dGlsXzEuRGF0YVV0aWwuZW5kc1dpdGgoZmllbGROYW1lLnRvTG93ZXJDYXNlKCksICcgZGVzYycpKSB7XG4gICAgICAgICAgICAgICAgZmllbGROYW1lID0gZmllbGROYW1lLnJlcGxhY2UoLyBkZXNjJC9pLCAnJyk7XG4gICAgICAgICAgICAgICAgY29tcGFyZXIgPSAnZGVzY2VuZGluZyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWNvbXBhcmVyIHx8IHR5cGVvZiBjb21wYXJlciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBvcmRlciA9IGNvbXBhcmVyID8gY29tcGFyZXIudG9Mb3dlckNhc2UoKSA6ICdhc2NlbmRpbmcnO1xuICAgICAgICAgICAgICAgIGNvbXBhcmVyID0gdXRpbF8xLkRhdGFVdGlsLmZuU29ydChjb21wYXJlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNGcm9tR3JvdXApIHtcbiAgICAgICAgICAgICAgICBzb3J0cyA9IFF1ZXJ5LmZpbHRlclF1ZXJpZXModGhpcy5xdWVyaWVzLCAnb25Tb3J0QnknKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNvcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlbXAgPSBzb3J0c1tpXS5lLmZpZWxkTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0ZW1wID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlbXAgPT09IGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRlbXAgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0ZW1wLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRlbXBbal0gPT09IGZpZWxkTmFtZSB8fCBmaWVsZE5hbWUudG9Mb3dlckNhc2UoKSA9PT0gdGVtcFtqXSArICcgZGVzYycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5xdWVyaWVzLnB1c2goe1xuICAgICAgICAgICAgICAgIGZuOiAnb25Tb3J0QnknLFxuICAgICAgICAgICAgICAgIGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGROYW1lOiBmaWVsZE5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhcmVyOiBjb21wYXJlcixcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiBvcmRlclxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5zb3J0QnlEZXNjID0gZnVuY3Rpb24gKGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc29ydEJ5KGZpZWxkTmFtZSwgJ2Rlc2NlbmRpbmcnKTtcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLmdyb3VwID0gZnVuY3Rpb24gKGZpZWxkTmFtZSwgZm4sIGZvcm1hdCkge1xuICAgICAgICAgICAgdGhpcy5zb3J0QnkoZmllbGROYW1lLCBudWxsLCB0cnVlKTtcbiAgICAgICAgICAgIHRoaXMucXVlcmllcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBmbjogJ29uR3JvdXAnLFxuICAgICAgICAgICAgICAgIGU6IHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGROYW1lOiBmaWVsZE5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhcmVyOiBmbiA/IGZuIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBmb3JtYXQgPyBmb3JtYXQgOiBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLnBhZ2UgPSBmdW5jdGlvbiAocGFnZUluZGV4LCBwYWdlU2l6ZSkge1xuICAgICAgICAgICAgdGhpcy5xdWVyaWVzLnB1c2goe1xuICAgICAgICAgICAgICAgIGZuOiAnb25QYWdlJyxcbiAgICAgICAgICAgICAgICBlOiB7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2VJbmRleDogcGFnZUluZGV4LFxuICAgICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogcGFnZVNpemVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5wcm90b3R5cGUucmFuZ2UgPSBmdW5jdGlvbiAoc3RhcnQsIGVuZCkge1xuICAgICAgICAgICAgdGhpcy5xdWVyaWVzLnB1c2goe1xuICAgICAgICAgICAgICAgIGZuOiAnb25SYW5nZScsXG4gICAgICAgICAgICAgICAgZToge1xuICAgICAgICAgICAgICAgICAgICBzdGFydDogc3RhcnQsXG4gICAgICAgICAgICAgICAgICAgIGVuZDogZW5kXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkucHJvdG90eXBlLnRha2UgPSBmdW5jdGlvbiAobm9zKSB7XG4gICAgICAgICAgICB0aGlzLnF1ZXJpZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgZm46ICdvblRha2UnLFxuICAgICAgICAgICAgICAgIGU6IHtcbiAgICAgICAgICAgICAgICAgICAgbm9zOiBub3NcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5wcm90b3R5cGUuc2tpcCA9IGZ1bmN0aW9uIChub3MpIHtcbiAgICAgICAgICAgIHRoaXMucXVlcmllcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBmbjogJ29uU2tpcCcsXG4gICAgICAgICAgICAgICAgZTogeyBub3M6IG5vcyB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5wcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24gKGZpZWxkTmFtZXMpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZmllbGROYW1lcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBmaWVsZE5hbWVzID0gW10uc2xpY2UuY2FsbChbZmllbGROYW1lc10sIDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5xdWVyaWVzLnB1c2goe1xuICAgICAgICAgICAgICAgIGZuOiAnb25TZWxlY3QnLFxuICAgICAgICAgICAgICAgIGU6IHsgZmllbGROYW1lczogZmllbGROYW1lcyB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5wcm90b3R5cGUuaGllcmFyY2h5ID0gZnVuY3Rpb24gKHF1ZXJ5LCBzZWxlY3RvckZuKSB7XG4gICAgICAgICAgICB0aGlzLnN1YlF1ZXJ5U2VsZWN0b3IgPSBzZWxlY3RvckZuO1xuICAgICAgICAgICAgdGhpcy5zdWJRdWVyeSA9IHF1ZXJ5O1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5mb3JlaWduS2V5ID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgdGhpcy5mS2V5ID0ga2V5O1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5yZXF1aXJlc0NvdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5pc0NvdW50UmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIFF1ZXJ5LnByb3RvdHlwZS5hZ2dyZWdhdGUgPSBmdW5jdGlvbiAodHlwZSwgZmllbGQpIHtcbiAgICAgICAgICAgIHRoaXMucXVlcmllcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBmbjogJ29uQWdncmVnYXRlcycsXG4gICAgICAgICAgICAgICAgZTogeyBmaWVsZDogZmllbGQsIHR5cGU6IHR5cGUgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICAgICAgUXVlcnkuZmlsdGVyUXVlcmllcyA9IGZ1bmN0aW9uIChxdWVyaWVzLCBuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gcXVlcmllcy5maWx0ZXIoZnVuY3Rpb24gKHEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcS5mbiA9PT0gbmFtZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBRdWVyeS5maWx0ZXJRdWVyeUxpc3RzID0gZnVuY3Rpb24gKHF1ZXJpZXMsIHNpbmdsZXMpIHtcbiAgICAgICAgICAgIHZhciBmaWx0ZXJlZCA9IHF1ZXJpZXMuZmlsdGVyKGZ1bmN0aW9uIChxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNpbmdsZXMuaW5kZXhPZihxLmZuKSAhPT0gLTE7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHZhciByZXMgPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZmlsdGVyZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc1tmaWx0ZXJlZFtpXS5mbl0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzW2ZpbHRlcmVkW2ldLmZuXSA9IGZpbHRlcmVkW2ldLmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFF1ZXJ5O1xuICAgIH0oKSk7XG4gICAgZXhwb3J0cy5RdWVyeSA9IFF1ZXJ5O1xuICAgIHZhciBQcmVkaWNhdGUgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBQcmVkaWNhdGUoZmllbGQsIG9wZXJhdG9yLCB2YWx1ZSwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgaWYgKGlnbm9yZUNhc2UgPT09IHZvaWQgMCkgeyBpZ25vcmVDYXNlID0gZmFsc2U7IH1cbiAgICAgICAgICAgIHRoaXMuaXNDb21wbGV4ID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZpZWxkID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRoaXMuZmllbGQgPSBmaWVsZDtcbiAgICAgICAgICAgICAgICB0aGlzLm9wZXJhdG9yID0gb3BlcmF0b3IudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgdGhpcy5pZ25vcmVDYXNlID0gaWdub3JlQ2FzZTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzQ29tcGxleCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuY29tcGFyZXIgPSB1dGlsXzEuRGF0YVV0aWwuZm5PcGVyYXRvcnMucHJvY2Vzc09wZXJhdG9yKHRoaXMub3BlcmF0b3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZmllbGQgaW5zdGFuY2VvZiBQcmVkaWNhdGUgJiYgdmFsdWUgaW5zdGFuY2VvZiBQcmVkaWNhdGUgfHwgdmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNDb21wbGV4ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmRpdGlvbiA9IG9wZXJhdG9yLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wcmVkaWNhdGVzID0gW2ZpZWxkXTtcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgICAgICBbXS5wdXNoLmFwcGx5KHRoaXMucHJlZGljYXRlcywgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmVkaWNhdGVzLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIFByZWRpY2F0ZS5hbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJlZGljYXRlLmNvbWJpbmVQcmVkaWNhdGVzKFtdLnNsaWNlLmNhbGwoYXJncywgMCksICdhbmQnKTtcbiAgICAgICAgfTtcbiAgICAgICAgUHJlZGljYXRlLnByb3RvdHlwZS5hbmQgPSBmdW5jdGlvbiAoZmllbGQsIG9wZXJhdG9yLCB2YWx1ZSwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgcmV0dXJuIFByZWRpY2F0ZS5jb21iaW5lKHRoaXMsIGZpZWxkLCBvcGVyYXRvciwgdmFsdWUsICdhbmQnLCBpZ25vcmVDYXNlKTtcbiAgICAgICAgfTtcbiAgICAgICAgUHJlZGljYXRlLm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFByZWRpY2F0ZS5jb21iaW5lUHJlZGljYXRlcyhbXS5zbGljZS5jYWxsKGFyZ3MsIDApLCAnb3InKTtcbiAgICAgICAgfTtcbiAgICAgICAgUHJlZGljYXRlLnByb3RvdHlwZS5vciA9IGZ1bmN0aW9uIChmaWVsZCwgb3BlcmF0b3IsIHZhbHVlLCBpZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJlZGljYXRlLmNvbWJpbmUodGhpcywgZmllbGQsIG9wZXJhdG9yLCB2YWx1ZSwgJ29yJywgaWdub3JlQ2FzZSk7XG4gICAgICAgIH07XG4gICAgICAgIFByZWRpY2F0ZS5mcm9tSnNvbiA9IGZ1bmN0aW9uIChqc29uKSB7XG4gICAgICAgICAgICBpZiAoanNvbiBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBqc29uLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5wdXNoKHRoaXMuZnJvbUpTT05EYXRhKGpzb25baV0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBwcmVkID0ganNvbjtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZyb21KU09ORGF0YShwcmVkKTtcbiAgICAgICAgfTtcbiAgICAgICAgUHJlZGljYXRlLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uIChyZWNvcmQpIHtcbiAgICAgICAgICAgIHZhciBwcmVkaWNhdGUgPSB0aGlzLnByZWRpY2F0ZXMgPyB0aGlzLnByZWRpY2F0ZXMgOiBbXTtcbiAgICAgICAgICAgIHZhciBpc0FuZDtcbiAgICAgICAgICAgIHZhciByZXQ7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNDb21wbGV4ICYmIHRoaXMuY29tcGFyZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlci5jYWxsKHRoaXMsIHV0aWxfMS5EYXRhVXRpbC5nZXRPYmplY3QodGhpcy5maWVsZCwgcmVjb3JkKSwgdGhpcy52YWx1ZSwgdGhpcy5pZ25vcmVDYXNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlzQW5kID0gdGhpcy5jb25kaXRpb24gPT09ICdhbmQnO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcmVkaWNhdGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICByZXQgPSBwcmVkaWNhdGVbaV0udmFsaWRhdGUocmVjb3JkKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNBbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXNBbmQ7XG4gICAgICAgIH07XG4gICAgICAgIFByZWRpY2F0ZS5wcm90b3R5cGUudG9Kc29uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHByZWRpY2F0ZXM7XG4gICAgICAgICAgICB2YXIgcDtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzQ29tcGxleCkge1xuICAgICAgICAgICAgICAgIHByZWRpY2F0ZXMgPSBbXTtcbiAgICAgICAgICAgICAgICBwID0gdGhpcy5wcmVkaWNhdGVzO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBwcmVkaWNhdGVzLnB1c2gocFtpXS50b0pzb24oKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpc0NvbXBsZXg6IHRoaXMuaXNDb21wbGV4LFxuICAgICAgICAgICAgICAgIGZpZWxkOiB0aGlzLmZpZWxkLFxuICAgICAgICAgICAgICAgIG9wZXJhdG9yOiB0aGlzLm9wZXJhdG9yLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgICAgICAgICAgIGlnbm9yZUNhc2U6IHRoaXMuaWdub3JlQ2FzZSxcbiAgICAgICAgICAgICAgICBjb25kaXRpb246IHRoaXMuY29uZGl0aW9uLFxuICAgICAgICAgICAgICAgIHByZWRpY2F0ZXM6IHByZWRpY2F0ZXNcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIFByZWRpY2F0ZS5jb21iaW5lUHJlZGljYXRlcyA9IGZ1bmN0aW9uIChwcmVkaWNhdGVzLCBvcGVyYXRvcikge1xuICAgICAgICAgICAgaWYgKHByZWRpY2F0ZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEocHJlZGljYXRlc1swXSBpbnN0YW5jZW9mIEFycmF5KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJlZGljYXRlc1swXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcHJlZGljYXRlcyA9IHByZWRpY2F0ZXNbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByZWRpY2F0ZShwcmVkaWNhdGVzWzBdLCBvcGVyYXRvciwgcHJlZGljYXRlcy5zbGljZSgxKSk7XG4gICAgICAgIH07XG4gICAgICAgIFByZWRpY2F0ZS5jb21iaW5lID0gZnVuY3Rpb24gKHByZWQsIGZpZWxkLCBvcGVyYXRvciwgdmFsdWUsIGNvbmRpdGlvbiwgaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgaWYgKGZpZWxkIGluc3RhbmNlb2YgUHJlZGljYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByZWRpY2F0ZVtjb25kaXRpb25dKHByZWQsIGZpZWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgZmllbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByZWRpY2F0ZVtjb25kaXRpb25dKHByZWQsIG5ldyBQcmVkaWNhdGUoZmllbGQsIG9wZXJhdG9yLCB2YWx1ZSwgaWdub3JlQ2FzZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC50aHJvd0Vycm9yKCdQcmVkaWNhdGUgLSAnICsgY29uZGl0aW9uICsgJyA6IGludmFsaWQgYXJndW1lbnRzJyk7XG4gICAgICAgIH07XG4gICAgICAgIFByZWRpY2F0ZS5mcm9tSlNPTkRhdGEgPSBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICAgICAgdmFyIHByZWRzID0ganNvbi5wcmVkaWNhdGVzIHx8IFtdO1xuICAgICAgICAgICAgdmFyIGxlbiA9IHByZWRzLmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBwcmVkaWNhdGVzID0gW107XG4gICAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHByZWRpY2F0ZXMucHVzaCh0aGlzLmZyb21KU09ORGF0YShwcmVkc1tpXSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFqc29uLmlzQ29tcGxleCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG5ldyBQcmVkaWNhdGUoanNvbi5maWVsZCwganNvbi5vcGVyYXRvciwganNvbi52YWx1ZSwganNvbi5pZ25vcmVDYXNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG5ldyBQcmVkaWNhdGUocHJlZGljYXRlc1swXSwganNvbi5jb25kaXRpb24sIHByZWRpY2F0ZXMuc2xpY2UoMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFByZWRpY2F0ZTtcbiAgICB9KCkpO1xuICAgIGV4cG9ydHMuUHJlZGljYXRlID0gUHJlZGljYXRlO1xufSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9xdWVyeS5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmRlZmluZShbXCJyZXF1aXJlXCIsIFwiZXhwb3J0c1wiLCBcIkBzeW5jZnVzaW9uL2VqMi1iYXNlXCIsIFwiLi91dGlsXCIsIFwiLi9xdWVyeVwiXSwgZnVuY3Rpb24gKHJlcXVpcmUsIGV4cG9ydHMsIGVqMl9iYXNlXzEsIHV0aWxfMSwgcXVlcnlfMSkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgICB2YXIgQWRhcHRvciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIEFkYXB0b3IoZHMpIHtcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICBmcm9tOiAndGFibGUnLFxuICAgICAgICAgICAgICAgIHJlcXVlc3RUeXBlOiAnanNvbicsXG4gICAgICAgICAgICAgICAgc29ydEJ5OiAnc29ydGVkJyxcbiAgICAgICAgICAgICAgICBzZWxlY3Q6ICdzZWxlY3QnLFxuICAgICAgICAgICAgICAgIHNraXA6ICdza2lwJyxcbiAgICAgICAgICAgICAgICBncm91cDogJ2dyb3VwJyxcbiAgICAgICAgICAgICAgICB0YWtlOiAndGFrZScsXG4gICAgICAgICAgICAgICAgc2VhcmNoOiAnc2VhcmNoJyxcbiAgICAgICAgICAgICAgICBjb3VudDogJ3JlcXVpcmVzQ291bnRzJyxcbiAgICAgICAgICAgICAgICB3aGVyZTogJ3doZXJlJyxcbiAgICAgICAgICAgICAgICBhZ2dyZWdhdGVzOiAnYWdncmVnYXRlcydcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLnR5cGUgPSBBZGFwdG9yO1xuICAgICAgICAgICAgdGhpcy5kYXRhU291cmNlID0gZHM7XG4gICAgICAgICAgICB0aGlzLnB2dCA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIEFkYXB0b3IucHJvdG90eXBlLnByb2Nlc3NSZXNwb25zZSA9IGZ1bmN0aW9uIChkYXRhLCBkcywgcXVlcnksIHhocikge1xuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBBZGFwdG9yO1xuICAgIH0oKSk7XG4gICAgZXhwb3J0cy5BZGFwdG9yID0gQWRhcHRvcjtcbiAgICB2YXIgSnNvbkFkYXB0b3IgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgICAgICBfX2V4dGVuZHMoSnNvbkFkYXB0b3IsIF9zdXBlcik7XG4gICAgICAgIGZ1bmN0aW9uIEpzb25BZGFwdG9yKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIEpzb25BZGFwdG9yLnByb3RvdHlwZS5wcm9jZXNzUXVlcnkgPSBmdW5jdGlvbiAoZGF0YU1hbmFnZXIsIHF1ZXJ5KSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gZGF0YU1hbmFnZXIuZGF0YVNvdXJjZS5qc29uLnNsaWNlKDApO1xuICAgICAgICAgICAgdmFyIGNvdW50ID0gcmVzdWx0Lmxlbmd0aDtcbiAgICAgICAgICAgIHZhciBjb3VudEZsZyA9IHRydWU7XG4gICAgICAgICAgICB2YXIgcmV0O1xuICAgICAgICAgICAgdmFyIGtleTtcbiAgICAgICAgICAgIHZhciBhZ2cgPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcXVlcnkucXVlcmllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGtleSA9IHF1ZXJ5LnF1ZXJpZXNbaV07XG4gICAgICAgICAgICAgICAgcmV0ID0gdGhpc1trZXkuZm5dLmNhbGwodGhpcywgcmVzdWx0LCBrZXkuZSwgcXVlcnkpO1xuICAgICAgICAgICAgICAgIGlmIChrZXkuZm4gPT09ICdvbkFnZ3JlZ2F0ZXMnKSB7XG4gICAgICAgICAgICAgICAgICAgIGFnZ1trZXkuZS5maWVsZCArICcgLSAnICsga2V5LmUudHlwZV0gPSByZXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSByZXQgIT09IHVuZGVmaW5lZCA/IHJldCA6IHJlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGtleS5mbiA9PT0gJ29uUGFnZScgfHwga2V5LmZuID09PSAnb25Ta2lwJyB8fCBrZXkuZm4gPT09ICdvblRha2UnIHx8IGtleS5mbiA9PT0gJ29uUmFuZ2UnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50RmxnID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjb3VudEZsZykge1xuICAgICAgICAgICAgICAgICAgICBjb3VudCA9IHJlc3VsdC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiByZXN1bHQsXG4gICAgICAgICAgICAgICAgICAgIGNvdW50OiBjb3VudCxcbiAgICAgICAgICAgICAgICAgICAgYWdncmVnYXRlczogYWdnXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH07XG4gICAgICAgIEpzb25BZGFwdG9yLnByb3RvdHlwZS5iYXRjaFJlcXVlc3QgPSBmdW5jdGlvbiAoZG0sIGNoYW5nZXMsIGUpIHtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNoYW5nZXMuYWRkZWRSZWNvcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnNlcnQoZG0sIGNoYW5nZXMuYWRkZWRSZWNvcmRzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjaGFuZ2VzLmNoYW5nZWRSZWNvcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGUoZG0sIGUua2V5LCBjaGFuZ2VzLmNoYW5nZWRSZWNvcmRzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjaGFuZ2VzLmRlbGV0ZWRSZWNvcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmUoZG0sIGUua2V5LCBjaGFuZ2VzLmRlbGV0ZWRSZWNvcmRzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjaGFuZ2VzO1xuICAgICAgICB9O1xuICAgICAgICBKc29uQWRhcHRvci5wcm90b3R5cGUub25XaGVyZSA9IGZ1bmN0aW9uIChkcywgZSkge1xuICAgICAgICAgICAgaWYgKCFkcyB8fCAhZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRzLmZpbHRlcihmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGUudmFsaWRhdGUob2JqKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLm9uQWdncmVnYXRlcyA9IGZ1bmN0aW9uIChkcywgZSkge1xuICAgICAgICAgICAgdmFyIGZuID0gdXRpbF8xLkRhdGFVdGlsLmFnZ3JlZ2F0ZXNbZS50eXBlXTtcbiAgICAgICAgICAgIGlmICghZHMgfHwgIWZuIHx8IGRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZuKGRzLCBlLmZpZWxkKTtcbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLm9uU2VhcmNoID0gZnVuY3Rpb24gKGRzLCBlKSB7XG4gICAgICAgICAgICBpZiAoIWRzIHx8ICFkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZS5maWVsZE5hbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHV0aWxfMS5EYXRhVXRpbC5nZXRGaWVsZExpc3QoZHNbMF0sIGUuZmllbGROYW1lcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZHMuZmlsdGVyKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGUuZmllbGROYW1lcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS5jb21wYXJlci5jYWxsKG9iaiwgdXRpbF8xLkRhdGFVdGlsLmdldE9iamVjdChlLmZpZWxkTmFtZXNbal0sIG9iaiksIGUuc2VhcmNoS2V5LCBlLmlnbm9yZUNhc2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLm9uU29ydEJ5ID0gZnVuY3Rpb24gKGRzLCBlLCBxdWVyeSkge1xuICAgICAgICAgICAgaWYgKCFkcyB8fCAhZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGZuQ29tcGFyZTtcbiAgICAgICAgICAgIHZhciBmaWVsZCA9IHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZShlLmZpZWxkTmFtZSwgcXVlcnkpO1xuICAgICAgICAgICAgaWYgKCFmaWVsZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkcy5zb3J0KGUuY29tcGFyZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZpZWxkIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgICBmaWVsZCA9IGZpZWxkLnNsaWNlKDApO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBmaWVsZC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWZpZWxkW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmbkNvbXBhcmUgPSBlLmNvbXBhcmVyO1xuICAgICAgICAgICAgICAgICAgICBpZiAodXRpbF8xLkRhdGFVdGlsLmVuZHNXaXRoKGZpZWxkW2ldLCAnIGRlc2MnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm5Db21wYXJlID0gdXRpbF8xLkRhdGFVdGlsLmZuU29ydCgnZGVzY2VuZGluZycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRbaV0gPSBmaWVsZFtpXS5yZXBsYWNlKCcgZGVzYycsICcnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBkcyA9IHV0aWxfMS5EYXRhVXRpbC5zb3J0KGRzLCBmaWVsZFtpXSwgZm5Db21wYXJlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC5zb3J0KGRzLCBmaWVsZCwgZS5jb21wYXJlcik7XG4gICAgICAgIH07XG4gICAgICAgIEpzb25BZGFwdG9yLnByb3RvdHlwZS5vbkdyb3VwID0gZnVuY3Rpb24gKGRzLCBlLCBxdWVyeSkge1xuICAgICAgICAgICAgaWYgKCFkcyB8fCAhZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGFnZ1F1ZXJ5ID0gcXVlcnlfMS5RdWVyeS5maWx0ZXJRdWVyaWVzKHF1ZXJ5LnF1ZXJpZXMsICdvbkFnZ3JlZ2F0ZXMnKTtcbiAgICAgICAgICAgIHZhciBhZ2cgPSBbXTtcbiAgICAgICAgICAgIGlmIChhZ2dRdWVyeS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgdG1wID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWdnUXVlcnkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdG1wID0gYWdnUXVlcnlbaV0uZTtcbiAgICAgICAgICAgICAgICAgICAgYWdnLnB1c2goeyB0eXBlOiB0bXAudHlwZSwgZmllbGQ6IHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZSh0bXAuZmllbGQsIHF1ZXJ5KSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdXRpbF8xLkRhdGFVdGlsLmdyb3VwKGRzLCB1dGlsXzEuRGF0YVV0aWwuZ2V0VmFsdWUoZS5maWVsZE5hbWUsIHF1ZXJ5KSwgYWdnLCBudWxsLCBudWxsLCBlLmNvbXBhcmVyKTtcbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLm9uUGFnZSA9IGZ1bmN0aW9uIChkcywgZSwgcXVlcnkpIHtcbiAgICAgICAgICAgIHZhciBzaXplID0gdXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKGUucGFnZVNpemUsIHF1ZXJ5KTtcbiAgICAgICAgICAgIHZhciBzdGFydCA9ICh1dGlsXzEuRGF0YVV0aWwuZ2V0VmFsdWUoZS5wYWdlSW5kZXgsIHF1ZXJ5KSAtIDEpICogc2l6ZTtcbiAgICAgICAgICAgIHZhciBlbmQgPSBzdGFydCArIHNpemU7XG4gICAgICAgICAgICBpZiAoIWRzIHx8ICFkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZHMuc2xpY2Uoc3RhcnQsIGVuZCk7XG4gICAgICAgIH07XG4gICAgICAgIEpzb25BZGFwdG9yLnByb3RvdHlwZS5vblJhbmdlID0gZnVuY3Rpb24gKGRzLCBlKSB7XG4gICAgICAgICAgICBpZiAoIWRzIHx8ICFkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZHMuc2xpY2UodXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKGUuc3RhcnQpLCB1dGlsXzEuRGF0YVV0aWwuZ2V0VmFsdWUoZS5lbmQpKTtcbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLm9uVGFrZSA9IGZ1bmN0aW9uIChkcywgZSkge1xuICAgICAgICAgICAgaWYgKCFkcyB8fCAhZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRzLnNsaWNlKDAsIHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZShlLm5vcykpO1xuICAgICAgICB9O1xuICAgICAgICBKc29uQWRhcHRvci5wcm90b3R5cGUub25Ta2lwID0gZnVuY3Rpb24gKGRzLCBlKSB7XG4gICAgICAgICAgICBpZiAoIWRzIHx8ICFkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZHMuc2xpY2UodXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKGUubm9zKSk7XG4gICAgICAgIH07XG4gICAgICAgIEpzb25BZGFwdG9yLnByb3RvdHlwZS5vblNlbGVjdCA9IGZ1bmN0aW9uIChkcywgZSkge1xuICAgICAgICAgICAgaWYgKCFkcyB8fCAhZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC5zZWxlY3QoZHMsIHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZShlLmZpZWxkTmFtZXMpKTtcbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uIChkbSwgZGF0YSwgdGFibGVOYW1lLCBxdWVyeSwgcG9zaXRpb24pIHtcbiAgICAgICAgICAgIGlmIChlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKHBvc2l0aW9uKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkbS5kYXRhU291cmNlLmpzb24ucHVzaChkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBkbS5kYXRhU291cmNlLmpzb24uc3BsaWNlKHBvc2l0aW9uLCAwLCBkYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIChkbSwga2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUpIHtcbiAgICAgICAgICAgIHZhciBkcyA9IGRtLmRhdGFTb3VyY2UuanNvbjtcbiAgICAgICAgICAgIHZhciBpO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlW2tleUZpZWxkXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChkc1tpXVtrZXlGaWVsZF0gPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpICE9PSBkcy5sZW5ndGggPyBkcy5zcGxpY2UoaSwgMSkgOiBudWxsO1xuICAgICAgICB9O1xuICAgICAgICBKc29uQWRhcHRvci5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGRtLCBrZXlGaWVsZCwgdmFsdWUsIHRhYmxlTmFtZSkge1xuICAgICAgICAgICAgdmFyIGRzID0gZG0uZGF0YVNvdXJjZS5qc29uO1xuICAgICAgICAgICAgdmFyIGk7XG4gICAgICAgICAgICB2YXIga2V5ID0gdmFsdWVba2V5RmllbGRdO1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRzW2ldW2tleUZpZWxkXSA9PT0ga2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpIDwgZHMubGVuZ3RoID8gZWoyX2Jhc2VfMS5tZXJnZShkc1tpXSwgdmFsdWUpIDogbnVsbDtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIEpzb25BZGFwdG9yO1xuICAgIH0oQWRhcHRvcikpO1xuICAgIGV4cG9ydHMuSnNvbkFkYXB0b3IgPSBKc29uQWRhcHRvcjtcbiAgICB2YXIgVXJsQWRhcHRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhVcmxBZGFwdG9yLCBfc3VwZXIpO1xuICAgICAgICBmdW5jdGlvbiBVcmxBZGFwdG9yKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLnByb2Nlc3NRdWVyeSA9IGZ1bmN0aW9uIChkbSwgcXVlcnksIGhpZXJhcmNoeUZpbHRlcnMpIHtcbiAgICAgICAgICAgIHZhciBxdWVyaWVzID0gdGhpcy5nZXRRdWVyeVJlcXVlc3QocXVlcnkpO1xuICAgICAgICAgICAgdmFyIHNpbmdsZXMgPSBxdWVyeV8xLlF1ZXJ5LmZpbHRlclF1ZXJ5TGlzdHMocXVlcnkucXVlcmllcywgWydvblNlbGVjdCcsICdvblBhZ2UnLCAnb25Ta2lwJywgJ29uVGFrZScsICdvblJhbmdlJ10pO1xuICAgICAgICAgICAgdmFyIHBhcmFtcyA9IHF1ZXJ5LnBhcmFtcztcbiAgICAgICAgICAgIHZhciB1cmwgPSBkbS5kYXRhU291cmNlLnVybDtcbiAgICAgICAgICAgIHZhciB0ZW1wO1xuICAgICAgICAgICAgdmFyIHNraXA7XG4gICAgICAgICAgICB2YXIgdGFrZSA9IG51bGw7XG4gICAgICAgICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgICAgICAgIHZhciByZXF1ZXN0ID0geyBzb3J0czogW10sIGdyb3VwczogW10sIGZpbHRlcnM6IFtdLCBzZWFyY2hlczogW10sIGFnZ3JlZ2F0ZXM6IFtdIH07XG4gICAgICAgICAgICBpZiAoJ29uUGFnZScgaW4gc2luZ2xlcykge1xuICAgICAgICAgICAgICAgIHRlbXAgPSBzaW5nbGVzLm9uUGFnZTtcbiAgICAgICAgICAgICAgICBza2lwID0gdXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKHRlbXAucGFnZUluZGV4LCBxdWVyeSk7XG4gICAgICAgICAgICAgICAgdGFrZSA9IHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZSh0ZW1wLnBhZ2VTaXplLCBxdWVyeSk7XG4gICAgICAgICAgICAgICAgc2tpcCA9IChza2lwIC0gMSkgKiB0YWtlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoJ29uUmFuZ2UnIGluIHNpbmdsZXMpIHtcbiAgICAgICAgICAgICAgICB0ZW1wID0gc2luZ2xlcy5vblJhbmdlO1xuICAgICAgICAgICAgICAgIHNraXAgPSB0ZW1wLnN0YXJ0O1xuICAgICAgICAgICAgICAgIHRha2UgPSB0ZW1wLmVuZCAtIHRlbXAuc3RhcnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXJpZXMuc29ydHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0ZW1wID0gdXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKHF1ZXJpZXMuc29ydHNbaV0uZS5maWVsZE5hbWUsIHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LnNvcnRzLnB1c2godXRpbF8xLkRhdGFVdGlsLmNhbGxBZGFwdG9yRnVuY3Rpb24odGhpcywgJ29uRWFjaFNvcnQnLCB7IG5hbWU6IHRlbXAsIGRpcmVjdGlvbjogcXVlcmllcy5zb3J0c1tpXS5lLmRpcmVjdGlvbiB9LCBxdWVyeSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGhpZXJhcmNoeUZpbHRlcnMpIHtcbiAgICAgICAgICAgICAgICB0ZW1wID0gdGhpcy5nZXRGaWx0ZXJzRnJvbShoaWVyYXJjaHlGaWx0ZXJzLCBxdWVyeSk7XG4gICAgICAgICAgICAgICAgaWYgKHRlbXApIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdC5maWx0ZXJzLnB1c2godXRpbF8xLkRhdGFVdGlsLmNhbGxBZGFwdG9yRnVuY3Rpb24odGhpcywgJ29uRWFjaFdoZXJlJywgdGVtcC50b0pzb24oKSwgcXVlcnkpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXJpZXMuZmlsdGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QuZmlsdGVycy5wdXNoKHV0aWxfMS5EYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uKHRoaXMsICdvbkVhY2hXaGVyZScsIHF1ZXJpZXMuZmlsdGVyc1tpXS5lLnRvSnNvbigpLCBxdWVyeSkpO1xuICAgICAgICAgICAgICAgIHZhciBrZXlzXzEgPSB0eXBlb2YgcmVxdWVzdC5maWx0ZXJzW2ldID09PSAnb2JqZWN0JyA/IE9iamVjdC5rZXlzKHJlcXVlc3QuZmlsdGVyc1tpXSkgOiBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGtleXNfMiA9IGtleXNfMTsgX2kgPCBrZXlzXzIubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wID0ga2V5c18yW19pXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHV0aWxfMS5EYXRhVXRpbC5pc051bGwoKHJlcXVlc3QpW3Byb3BdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHJlcXVlc3RbcHJvcF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXJpZXMuc2VhcmNoZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0ZW1wID0gcXVlcmllcy5zZWFyY2hlc1tpXS5lO1xuICAgICAgICAgICAgICAgIHJlcXVlc3Quc2VhcmNoZXMucHVzaCh1dGlsXzEuRGF0YVV0aWwuY2FsbEFkYXB0b3JGdW5jdGlvbih0aGlzLCAnb25FYWNoU2VhcmNoJywge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IHRlbXAuZmllbGROYW1lcyxcbiAgICAgICAgICAgICAgICAgICAgb3BlcmF0b3I6IHRlbXAub3BlcmF0b3IsXG4gICAgICAgICAgICAgICAgICAgIGtleTogdGVtcC5zZWFyY2hLZXksXG4gICAgICAgICAgICAgICAgICAgIGlnbm9yZUNhc2U6IHRlbXAuaWdub3JlQ2FzZVxuICAgICAgICAgICAgICAgIH0sIHF1ZXJ5KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXJpZXMuZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5ncm91cHMucHVzaCh1dGlsXzEuRGF0YVV0aWwuZ2V0VmFsdWUocXVlcmllcy5ncm91cHNbaV0uZS5maWVsZE5hbWUsIHF1ZXJ5KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXJpZXMuYWdncmVnYXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRlbXAgPSBxdWVyaWVzLmFnZ3JlZ2F0ZXNbaV0uZTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmFnZ3JlZ2F0ZXMucHVzaCh7IHR5cGU6IHRlbXAudHlwZSwgZmllbGQ6IHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZSh0ZW1wLmZpZWxkLCBxdWVyeSkgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcmVxID0ge307XG4gICAgICAgICAgICB0aGlzLmdldFJlcXVlc3RRdWVyeShvcHRpb25zLCBxdWVyeSwgc2luZ2xlcywgcmVxdWVzdCwgcmVxKTtcbiAgICAgICAgICAgIHV0aWxfMS5EYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uKHRoaXMsICdhZGRQYXJhbXMnLCB7IGRtOiBkbSwgcXVlcnk6IHF1ZXJ5LCBwYXJhbXM6IHBhcmFtcywgcmVxUGFyYW1zOiByZXEgfSk7XG4gICAgICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHJlcSk7XG4gICAgICAgICAgICBmb3IgKHZhciBfYSA9IDAsIGtleXNfMyA9IGtleXM7IF9hIDwga2V5c18zLmxlbmd0aDsgX2ErKykge1xuICAgICAgICAgICAgICAgIHZhciBwcm9wID0ga2V5c18zW19hXTtcbiAgICAgICAgICAgICAgICBpZiAodXRpbF8xLkRhdGFVdGlsLmlzTnVsbChyZXFbcHJvcF0pIHx8IHJlcVtwcm9wXSA9PT0gJycgfHwgcmVxW3Byb3BdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgcmVxW3Byb3BdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghKG9wdGlvbnMuc2tpcCBpbiByZXEgJiYgb3B0aW9ucy50YWtlIGluIHJlcSkgJiYgdGFrZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJlcVtvcHRpb25zLnNraXBdID0gdXRpbF8xLkRhdGFVdGlsLmNhbGxBZGFwdG9yRnVuY3Rpb24odGhpcywgJ29uU2tpcCcsIHNraXAsIHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICByZXFbb3B0aW9ucy50YWtlXSA9IHV0aWxfMS5EYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uKHRoaXMsICdvblRha2UnLCB0YWtlLCBxdWVyeSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcCA9IHRoaXMucHZ0O1xuICAgICAgICAgICAgdGhpcy5wdnQgPSB7fTtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMucmVxdWVzdFR5cGUgPT09ICdqc29uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHJlcSksXG4gICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICAgICAgICBwdnREYXRhOiBwLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCdcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGVtcCA9IHRoaXMuY29udmVydFRvUXVlcnlTdHJpbmcocmVxLCBxdWVyeSwgZG0pO1xuICAgICAgICAgICAgdGVtcCA9IChkbS5kYXRhU291cmNlLnVybC5pbmRleE9mKCc/JykgIT09IC0xID8gJyYnIDogJy8nKSArIHRlbXA7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdHRVQnLCB1cmw6IHRlbXAubGVuZ3RoID8gdXJsLnJlcGxhY2UoL1xcLyokLywgdGVtcCkgOiB1cmwsIHB2dERhdGE6IHBcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLmdldFJlcXVlc3RRdWVyeSA9IGZ1bmN0aW9uIChvcHRpb25zLCBxdWVyeSwgc2luZ2xlcywgcmVxdWVzdCwgcmVxdWVzdDEpIHtcbiAgICAgICAgICAgIHZhciBwYXJhbSA9ICdwYXJhbSc7XG4gICAgICAgICAgICB2YXIgcmVxID0gcmVxdWVzdDE7XG4gICAgICAgICAgICByZXFbb3B0aW9ucy5mcm9tXSA9IHF1ZXJ5LmZyb21UYWJsZTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLmV4cGFuZCkge1xuICAgICAgICAgICAgICAgIHJlcVtvcHRpb25zLmV4cGFuZF0gPSBxdWVyeS5leHBhbmRzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxW29wdGlvbnMuc2VsZWN0XSA9ICdvblNlbGVjdCcgaW4gc2luZ2xlcyA/XG4gICAgICAgICAgICAgICAgdXRpbF8xLkRhdGFVdGlsLmNhbGxBZGFwdG9yRnVuY3Rpb24odGhpcywgJ29uU2VsZWN0JywgdXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKHNpbmdsZXMub25TZWxlY3QuZmllbGROYW1lcywgcXVlcnkpLCBxdWVyeSkgOiAnJztcbiAgICAgICAgICAgIHJlcVtvcHRpb25zLmNvdW50XSA9IHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCA/IHV0aWxfMS5EYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uKHRoaXMsICdvbkNvdW50JywgcXVlcnkuaXNDb3VudFJlcXVpcmVkLCBxdWVyeSkgOiAnJztcbiAgICAgICAgICAgIHJlcVtvcHRpb25zLnNlYXJjaF0gPSByZXF1ZXN0LnNlYXJjaGVzLmxlbmd0aCA/IHV0aWxfMS5EYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uKHRoaXMsICdvblNlYXJjaCcsIHJlcXVlc3Quc2VhcmNoZXMsIHF1ZXJ5KSA6ICcnO1xuICAgICAgICAgICAgcmVxW29wdGlvbnMuc2tpcF0gPSAnb25Ta2lwJyBpbiBzaW5nbGVzID9cbiAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwuY2FsbEFkYXB0b3JGdW5jdGlvbih0aGlzLCAnb25Ta2lwJywgdXRpbF8xLkRhdGFVdGlsLmdldFZhbHVlKHNpbmdsZXMub25Ta2lwLm5vcywgcXVlcnkpLCBxdWVyeSkgOiAnJztcbiAgICAgICAgICAgIHJlcVtvcHRpb25zLnRha2VdID0gJ29uVGFrZScgaW4gc2luZ2xlcyA/XG4gICAgICAgICAgICAgICAgdXRpbF8xLkRhdGFVdGlsLmNhbGxBZGFwdG9yRnVuY3Rpb24odGhpcywgJ29uVGFrZScsIHV0aWxfMS5EYXRhVXRpbC5nZXRWYWx1ZShzaW5nbGVzLm9uVGFrZS5ub3MsIHF1ZXJ5KSwgcXVlcnkpIDogJyc7XG4gICAgICAgICAgICByZXFbb3B0aW9ucy53aGVyZV0gPSByZXF1ZXN0LmZpbHRlcnMubGVuZ3RoIHx8IHJlcXVlc3Quc2VhcmNoZXMubGVuZ3RoID9cbiAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwuY2FsbEFkYXB0b3JGdW5jdGlvbih0aGlzLCAnb25XaGVyZScsIHJlcXVlc3QuZmlsdGVycywgcXVlcnkpIDogJyc7XG4gICAgICAgICAgICByZXFbb3B0aW9ucy5zb3J0QnldID0gcmVxdWVzdC5zb3J0cy5sZW5ndGggPyB1dGlsXzEuRGF0YVV0aWwuY2FsbEFkYXB0b3JGdW5jdGlvbih0aGlzLCAnb25Tb3J0QnknLCByZXF1ZXN0LnNvcnRzLCBxdWVyeSkgOiAnJztcbiAgICAgICAgICAgIHJlcVtvcHRpb25zLmdyb3VwXSA9IHJlcXVlc3QuZ3JvdXBzLmxlbmd0aCA/IHV0aWxfMS5EYXRhVXRpbC5jYWxsQWRhcHRvckZ1bmN0aW9uKHRoaXMsICdvbkdyb3VwJywgcmVxdWVzdC5ncm91cHMsIHF1ZXJ5KSA6ICcnO1xuICAgICAgICAgICAgcmVxW29wdGlvbnMuYWdncmVnYXRlc10gPSByZXF1ZXN0LmFnZ3JlZ2F0ZXMubGVuZ3RoID9cbiAgICAgICAgICAgICAgICB1dGlsXzEuRGF0YVV0aWwuY2FsbEFkYXB0b3JGdW5jdGlvbih0aGlzLCAnb25BZ2dyZWdhdGVzJywgcmVxdWVzdC5hZ2dyZWdhdGVzLCBxdWVyeSkgOiAnJztcbiAgICAgICAgICAgIHJlcVtwYXJhbV0gPSBbXTtcbiAgICAgICAgfTtcbiAgICAgICAgVXJsQWRhcHRvci5wcm90b3R5cGUuY29udmVydFRvUXVlcnlTdHJpbmcgPSBmdW5jdGlvbiAocmVxdWVzdCwgcXVlcnksIGRtKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH07XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLnByb2Nlc3NSZXNwb25zZSA9IGZ1bmN0aW9uIChkYXRhLCBkcywgcXVlcnksIHhociwgcmVxdWVzdCwgY2hhbmdlcykge1xuICAgICAgICAgICAgdmFyIHJlcXVlc3RzID0gcmVxdWVzdDtcbiAgICAgICAgICAgIHZhciBwdnQgPSByZXF1ZXN0cy5wdnREYXRhIHx8IHt9O1xuICAgICAgICAgICAgdmFyIGdyb3VwRHMgPSBkYXRhLmdyb3VwRHM7XG4gICAgICAgICAgICBpZiAoeGhyICYmIHhoci5nZXRSZXNwb25zZUhlYWRlcignQ29udGVudC1UeXBlJykgJiZcbiAgICAgICAgICAgICAgICB4aHIuZ2V0UmVzcG9uc2VIZWFkZXIoJ0NvbnRlbnQtVHlwZScpLmluZGV4T2YoJ3htbCcpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAocXVlcnkuaXNDb3VudFJlcXVpcmVkID8geyByZXN1bHQ6IFtdLCBjb3VudDogMCB9IDogW10pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGQgPSBKU09OLnBhcnNlKHJlcXVlc3RzLmRhdGEpO1xuICAgICAgICAgICAgaWYgKGQgJiYgZC5hY3Rpb24gPT09ICdiYXRjaCcgJiYgZGF0YS5hZGRlZFJlY29yZHMpIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2VzLmFkZGVkUmVjb3JkcyA9IGRhdGEuYWRkZWRSZWNvcmRzO1xuICAgICAgICAgICAgICAgIHJldHVybiBjaGFuZ2VzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRhdGEuZCkge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgYXJncyA9IHt9O1xuICAgICAgICAgICAgaWYgKCdjb3VudCcgaW4gZGF0YSkge1xuICAgICAgICAgICAgICAgIGFyZ3MuY291bnQgPSBkYXRhLmNvdW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXJncy5yZXN1bHQgPSBkYXRhLnJlc3VsdCA/IGRhdGEucmVzdWx0IDogZGF0YTtcbiAgICAgICAgICAgIHRoaXMuZ2V0QWdncmVnYXRlUmVzdWx0KHB2dCwgZGF0YSwgYXJncywgZ3JvdXBEcyk7XG4gICAgICAgICAgICByZXR1cm4gdXRpbF8xLkRhdGFVdGlsLmlzTnVsbChhcmdzLmNvdW50KSA/IGFyZ3MucmVzdWx0IDogeyByZXN1bHQ6IGFyZ3MucmVzdWx0LCBjb3VudDogYXJncy5jb3VudCwgYWdncmVnYXRlczogYXJncy5hZ2dyZWdhdGVzIH07XG4gICAgICAgIH07XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLm9uR3JvdXAgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhpcy5wdnQuZ3JvdXBzID0gZTtcbiAgICAgICAgICAgIHJldHVybiBlO1xuICAgICAgICB9O1xuICAgICAgICBVcmxBZGFwdG9yLnByb3RvdHlwZS5vbkFnZ3JlZ2F0ZXMgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhpcy5wdnQuYWdncmVnYXRlcyA9IGU7XG4gICAgICAgIH07XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLmJhdGNoUmVxdWVzdCA9IGZ1bmN0aW9uIChkbSwgY2hhbmdlcywgZSkge1xuICAgICAgICAgICAgdmFyIHVybDtcbiAgICAgICAgICAgIHZhciBrZXk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IGRtLmRhdGFTb3VyY2UuYmF0Y2hVcmwgfHwgZG0uZGF0YVNvdXJjZS5jcnVkVXJsIHx8IGRtLmRhdGFTb3VyY2UucmVtb3ZlVXJsIHx8IGRtLmRhdGFTb3VyY2UudXJsLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcsXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZWQ6IGNoYW5nZXMuY2hhbmdlZFJlY29yZHMsXG4gICAgICAgICAgICAgICAgICAgIGFkZGVkOiBjaGFuZ2VzLmFkZGVkUmVjb3JkcyxcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlZDogY2hhbmdlcy5kZWxldGVkUmVjb3JkcyxcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnYmF0Y2gnLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZTogZVt1cmxdLFxuICAgICAgICAgICAgICAgICAgICBrZXk6IGVba2V5XVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICBVcmxBZGFwdG9yLnByb3RvdHlwZS5iZWZvcmVTZW5kID0gZnVuY3Rpb24gKGRtLCByZXF1ZXN0KSB7XG4gICAgICAgIH07XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uIChkbSwgZGF0YSwgdGFibGVOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHVybDogZG0uZGF0YVNvdXJjZS5pbnNlcnRVcmwgfHwgZG0uZGF0YVNvdXJjZS5jcnVkVXJsIHx8IGRtLmRhdGFTb3VyY2UudXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlOiB0YWJsZU5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ2luc2VydCdcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgVXJsQWRhcHRvci5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGRtLCBrZXlGaWVsZCwgdmFsdWUsIHRhYmxlTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBkbS5kYXRhU291cmNlLnJlbW92ZVVybCB8fCBkbS5kYXRhU291cmNlLmNydWRVcmwgfHwgZG0uZGF0YVNvdXJjZS51cmwsXG4gICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICBrZXk6IHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBrZXlDb2x1bW46IGtleUZpZWxkLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZTogdGFibGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb246ICdyZW1vdmUnXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIFVybEFkYXB0b3IucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChkbSwga2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIHVybDogZG0uZGF0YVNvdXJjZS51cGRhdGVVcmwgfHwgZG0uZGF0YVNvdXJjZS5jcnVkVXJsIHx8IGRtLmRhdGFTb3VyY2UudXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICBhY3Rpb246ICd1cGRhdGUnLFxuICAgICAgICAgICAgICAgICAgICBrZXlDb2x1bW46IGtleUZpZWxkLFxuICAgICAgICAgICAgICAgICAgICBrZXk6IHZhbHVlW2tleUZpZWxkXSxcbiAgICAgICAgICAgICAgICAgICAgdGFibGU6IHRhYmxlTmFtZVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICBVcmxBZGFwdG9yLnByb3RvdHlwZS5nZXRGaWx0ZXJzRnJvbSA9IGZ1bmN0aW9uIChkYXRhLCBxdWVyeSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IHF1ZXJ5LmZLZXk7XG4gICAgICAgICAgICB2YXIgdmFsdWU7XG4gICAgICAgICAgICB2YXIgcHJvcCA9IGtleTtcbiAgICAgICAgICAgIHZhciBwS2V5ID0gcXVlcnkua2V5O1xuICAgICAgICAgICAgdmFyIHByZWRpY2F0cyA9IFtdO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhWzBdICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIHByb3AgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhWzBdID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHV0aWxfMS5EYXRhVXRpbC5nZXRPYmplY3QocEtleSB8fCBwcm9wLCBkYXRhW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gZGF0YVtpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcHJlZGljYXRzLnB1c2gobmV3IHF1ZXJ5XzEuUHJlZGljYXRlKGtleSwgJ2VxdWFsJywgdmFsdWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBxdWVyeV8xLlByZWRpY2F0ZS5vcihwcmVkaWNhdHMpO1xuICAgICAgICB9O1xuICAgICAgICBVcmxBZGFwdG9yLnByb3RvdHlwZS5nZXRBZ2dyZWdhdGVSZXN1bHQgPSBmdW5jdGlvbiAocHZ0LCBkYXRhLCBhcmdzLCBncm91cERzKSB7XG4gICAgICAgICAgICB2YXIgcERhdGEgPSBkYXRhO1xuICAgICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5yZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBwRGF0YSA9IGRhdGEucmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHB2dCAmJiBwdnQuYWdncmVnYXRlcyAmJiBwdnQuYWdncmVnYXRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYWdnID0gcHZ0LmFnZ3JlZ2F0ZXM7XG4gICAgICAgICAgICAgICAgdmFyIGZuID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgIHZhciBhZ2dyZWdhdGVEYXRhID0gcERhdGE7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IHt9O1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLmFnZ3JlZ2F0ZSkge1xuICAgICAgICAgICAgICAgICAgICBhZ2dyZWdhdGVEYXRhID0gZGF0YS5hZ2dyZWdhdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWdnLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGZuID0gdXRpbF8xLkRhdGFVdGlsLmFnZ3JlZ2F0ZXNbYWdnW2ldLnR5cGVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc1thZ2dbaV0uZmllbGQgKyAnIC0gJyArIGFnZ1tpXS50eXBlXSA9IGZuKGFnZ3JlZ2F0ZURhdGEsIGFnZ1tpXS5maWVsZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXJncy5hZ2dyZWdhdGVzID0gcmVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHB2dCAmJiBwdnQuZ3JvdXBzICYmIHB2dC5ncm91cHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGdyb3VwcyA9IHB2dC5ncm91cHM7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxldmVsID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGdyb3VwRHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cERzID0gdXRpbF8xLkRhdGFVdGlsLmdyb3VwKGdyb3VwRHMsIGdyb3Vwc1tpXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcERhdGEgPSB1dGlsXzEuRGF0YVV0aWwuZ3JvdXAocERhdGEsIGdyb3Vwc1tpXSwgcHZ0LmFnZ3JlZ2F0ZXMsIGxldmVsLCBncm91cERzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXJncy5yZXN1bHQgPSBwRGF0YTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhcmdzO1xuICAgICAgICB9O1xuICAgICAgICBVcmxBZGFwdG9yLnByb3RvdHlwZS5nZXRRdWVyeVJlcXVlc3QgPSBmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgICAgICAgIHZhciByZXEgPSB7IHNvcnRzOiBbXSwgZ3JvdXBzOiBbXSwgZmlsdGVyczogW10sIHNlYXJjaGVzOiBbXSwgYWdncmVnYXRlczogW10gfTtcbiAgICAgICAgICAgIHJlcS5zb3J0cyA9IHF1ZXJ5XzEuUXVlcnkuZmlsdGVyUXVlcmllcyhxdWVyeS5xdWVyaWVzLCAnb25Tb3J0QnknKTtcbiAgICAgICAgICAgIHJlcS5ncm91cHMgPSBxdWVyeV8xLlF1ZXJ5LmZpbHRlclF1ZXJpZXMocXVlcnkucXVlcmllcywgJ29uR3JvdXAnKTtcbiAgICAgICAgICAgIHJlcS5maWx0ZXJzID0gcXVlcnlfMS5RdWVyeS5maWx0ZXJRdWVyaWVzKHF1ZXJ5LnF1ZXJpZXMsICdvbldoZXJlJyk7XG4gICAgICAgICAgICByZXEuc2VhcmNoZXMgPSBxdWVyeV8xLlF1ZXJ5LmZpbHRlclF1ZXJpZXMocXVlcnkucXVlcmllcywgJ29uU2VhcmNoJyk7XG4gICAgICAgICAgICByZXEuYWdncmVnYXRlcyA9IHF1ZXJ5XzEuUXVlcnkuZmlsdGVyUXVlcmllcyhxdWVyeS5xdWVyaWVzLCAnb25BZ2dyZWdhdGVzJyk7XG4gICAgICAgICAgICByZXR1cm4gcmVxO1xuICAgICAgICB9O1xuICAgICAgICBVcmxBZGFwdG9yLnByb3RvdHlwZS5hZGRQYXJhbXMgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICAgICAgdmFyIHJlcSA9IG9wdGlvbnMucmVxUGFyYW1zO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMucGFyYW1zLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJlcS5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBvcHRpb25zLnBhcmFtczsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgdG1wID0gX2FbX2ldO1xuICAgICAgICAgICAgICAgIGlmIChyZXFbdG1wLmtleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdRdWVyeSgpIC0gYWRkUGFyYW1zOiBDdXN0b20gUGFyYW0gaXMgY29uZmxpY3Rpbmcgb3RoZXIgcmVxdWVzdCBhcmd1bWVudHMnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVxW3RtcC5rZXldID0gdG1wLnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmICh0bXAuZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxW3RtcC5rZXldID0gdG1wLmZuLmNhbGwob3B0aW9ucy5xdWVyeSwgdG1wLmtleSwgb3B0aW9ucy5xdWVyeSwgb3B0aW9ucy5kbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlcS5wYXJhbXNbdG1wLmtleV0gPSByZXFbdG1wLmtleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBVcmxBZGFwdG9yO1xuICAgIH0oQWRhcHRvcikpO1xuICAgIGV4cG9ydHMuVXJsQWRhcHRvciA9IFVybEFkYXB0b3I7XG4gICAgdmFyIE9EYXRhQWRhcHRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhPRGF0YUFkYXB0b3IsIF9zdXBlcik7XG4gICAgICAgIGZ1bmN0aW9uIE9EYXRhQWRhcHRvcigpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgICAgICBfdGhpcy5vcHRpb25zID0gZWoyX2Jhc2VfMS5leHRlbmQoe30sIF90aGlzLm9wdGlvbnMsIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0VHlwZTogJ2dldCcsXG4gICAgICAgICAgICAgICAgYWNjZXB0OiAnYXBwbGljYXRpb24vanNvbjtvZGF0YT1saWdodDtxPTEsYXBwbGljYXRpb24vanNvbjtvZGF0YT12ZXJib3NlO3E9MC41JyxcbiAgICAgICAgICAgICAgICBtdWx0aXBhcnRBY2NlcHQ6ICdtdWx0aXBhcnQvbWl4ZWQnLFxuICAgICAgICAgICAgICAgIHNvcnRCeTogJyRvcmRlcmJ5JyxcbiAgICAgICAgICAgICAgICBzZWxlY3Q6ICckc2VsZWN0JyxcbiAgICAgICAgICAgICAgICBza2lwOiAnJHNraXAnLFxuICAgICAgICAgICAgICAgIHRha2U6ICckdG9wJyxcbiAgICAgICAgICAgICAgICBjb3VudDogJyRpbmxpbmVjb3VudCcsXG4gICAgICAgICAgICAgICAgd2hlcmU6ICckZmlsdGVyJyxcbiAgICAgICAgICAgICAgICBleHBhbmQ6ICckZXhwYW5kJyxcbiAgICAgICAgICAgICAgICBiYXRjaDogJyRiYXRjaCcsXG4gICAgICAgICAgICAgICAgY2hhbmdlU2V0OiAnLS1jaGFuZ2VzZXRfJyxcbiAgICAgICAgICAgICAgICBiYXRjaFByZTogJ2JhdGNoXycsXG4gICAgICAgICAgICAgICAgY29udGVudElkOiAnQ29udGVudC1JZDogJyxcbiAgICAgICAgICAgICAgICBiYXRjaENvbnRlbnQ6ICdDb250ZW50LVR5cGU6IG11bHRpcGFydC9taXhlZDsgYm91bmRhcnk9JyxcbiAgICAgICAgICAgICAgICBjaGFuZ2VTZXRDb250ZW50OiAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9odHRwXFxuQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogYmluYXJ5ICcsXG4gICAgICAgICAgICAgICAgYmF0Y2hDaGFuZ2VTZXRDb250ZW50VHlwZTogJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCAnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF90aGlzLmdldE1vZHVsZU5hbWUgPSBlajJfYmFzZV8xLmdldFZhbHVlKCdnZXRNb2R1bGVuYW1lJywgX3RoaXMpO1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgICB9XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUub25QcmVkaWNhdGUgPSBmdW5jdGlvbiAocHJlZGljYXRlLCBxdWVyeSwgcmVxdWlyZXNDYXN0KSB7XG4gICAgICAgICAgICB2YXIgcmV0dXJuVmFsdWUgPSAnJztcbiAgICAgICAgICAgIHZhciBvcGVyYXRvcjtcbiAgICAgICAgICAgIHZhciBndWlkO1xuICAgICAgICAgICAgdmFyIHZhbCA9IHByZWRpY2F0ZS52YWx1ZTtcbiAgICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcbiAgICAgICAgICAgIHZhciBmaWVsZCA9IHByZWRpY2F0ZS5maWVsZCA/IE9EYXRhQWRhcHRvci5nZXRGaWVsZChwcmVkaWNhdGUuZmllbGQpIDogbnVsbDtcbiAgICAgICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgICAgICAgICAgICAgdmFsID0gJ2RhdGV0aW1lXFwnJyArIHV0aWxfMS5EYXRhVXRpbC5wYXJzZS5yZXBsYWNlcih2YWwpICsgJ1xcJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICB2YWwgPSAnXFwnJyArIHZhbCArICdcXCcnO1xuICAgICAgICAgICAgICAgIGlmIChyZXF1aXJlc0Nhc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGQgPSAnY2FzdCgnICsgZmllbGQgKyAnLCBcXCdFZG0uU3RyaW5nXFwnKSc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh1dGlsXzEuRGF0YVV0aWwucGFyc2UuaXNHdWlkKHZhbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZ3VpZCA9ICdndWlkJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHByZWRpY2F0ZS5pZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZ3VpZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQgPSAndG9sb3dlcignICsgZmllbGQgKyAnKSc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFsID0gdmFsLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3BlcmF0b3IgPSB1dGlsXzEuRGF0YVV0aWwub2RCaU9wZXJhdG9yW3ByZWRpY2F0ZS5vcGVyYXRvcl07XG4gICAgICAgICAgICBpZiAob3BlcmF0b3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBmaWVsZDtcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBvcGVyYXRvcjtcbiAgICAgICAgICAgICAgICBpZiAoZ3VpZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBndWlkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmV0dXJuVmFsdWUgKyB2YWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWVqMl9iYXNlXzEuaXNOdWxsT3JVbmRlZmluZWQodGhpcy5nZXRNb2R1bGVOYW1lKSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldE1vZHVsZU5hbWUoKSA9PT0gJ09EYXRhVjRBZGFwdG9yJykge1xuICAgICAgICAgICAgICAgICAgICBvcGVyYXRvciA9IHV0aWxfMS5EYXRhVXRpbC5vZHY0VW5pT3BlcmF0b3JbcHJlZGljYXRlLm9wZXJhdG9yXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBvcGVyYXRvciA9IHV0aWxfMS5EYXRhVXRpbC5vZFVuaU9wZXJhdG9yW3ByZWRpY2F0ZS5vcGVyYXRvcl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3BlcmF0b3IgPT09ICdzdWJzdHJpbmdvZicpIHtcbiAgICAgICAgICAgICAgICB2YXIgdGVtcCA9IHZhbDtcbiAgICAgICAgICAgICAgICB2YWwgPSBmaWVsZDtcbiAgICAgICAgICAgICAgICBmaWVsZCA9IHRlbXA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBvcGVyYXRvciArICcoJztcbiAgICAgICAgICAgIHJldHVyblZhbHVlICs9IGZpZWxkICsgJywnO1xuICAgICAgICAgICAgaWYgKGd1aWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSArPSBndWlkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuVmFsdWUgKz0gdmFsICsgJyknO1xuICAgICAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLm9uQ29tcGxleFByZWRpY2F0ZSA9IGZ1bmN0aW9uIChwcmVkaWNhdGUsIHF1ZXJ5LCByZXF1aXJlc0Nhc3QpIHtcbiAgICAgICAgICAgIHZhciByZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJlZGljYXRlLnByZWRpY2F0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICByZXMucHVzaCgnKCcgKyB0aGlzLm9uRWFjaFdoZXJlKHByZWRpY2F0ZS5wcmVkaWNhdGVzW2ldLCBxdWVyeSwgcmVxdWlyZXNDYXN0KSArICcpJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpvaW4oJyAnICsgcHJlZGljYXRlLmNvbmRpdGlvbiArICcgJyk7XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUub25FYWNoV2hlcmUgPSBmdW5jdGlvbiAoZmlsdGVyLCBxdWVyeSwgcmVxdWlyZXNDYXN0KSB7XG4gICAgICAgICAgICByZXR1cm4gZmlsdGVyLmlzQ29tcGxleCA/IHRoaXMub25Db21wbGV4UHJlZGljYXRlKGZpbHRlciwgcXVlcnksIHJlcXVpcmVzQ2FzdCkgOiB0aGlzLm9uUHJlZGljYXRlKGZpbHRlciwgcXVlcnksIHJlcXVpcmVzQ2FzdCk7XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUub25XaGVyZSA9IGZ1bmN0aW9uIChmaWx0ZXJzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wdnQuc2VhcmNoKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVycy5wdXNoKHRoaXMub25FYWNoV2hlcmUodGhpcy5wdnQuc2VhcmNoLCBudWxsLCB0cnVlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmlsdGVycy5qb2luKCcgYW5kICcpO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLm9uRWFjaFNlYXJjaCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoZS5maWVsZHMgJiYgZS5maWVsZHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdXRpbF8xLkRhdGFVdGlsLnRocm93RXJyb3IoJ1F1ZXJ5KCkgLSBTZWFyY2ggOiBvRGF0YSBzZWFyY2ggcmVxdWlyZXMgbGlzdCBvZiBmaWVsZCBuYW1lcyB0byBzZWFyY2gnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBmaWx0ZXIgPSB0aGlzLnB2dC5zZWFyY2ggfHwgW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGUuZmllbGRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVyLnB1c2gobmV3IHF1ZXJ5XzEuUHJlZGljYXRlKGUuZmllbGRzW2ldLCBlLm9wZXJhdG9yLCBlLmtleSwgZS5pZ25vcmVDYXNlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnB2dC5zZWFyY2ggPSBmaWx0ZXI7XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUub25TZWFyY2ggPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhpcy5wdnQuc2VhcmNoID0gcXVlcnlfMS5QcmVkaWNhdGUub3IodGhpcy5wdnQuc2VhcmNoKTtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5vbkVhY2hTb3J0ID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciByZXMgPSBbXTtcbiAgICAgICAgICAgIGlmIChlLm5hbWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZS5uYW1lLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcy5wdXNoKE9EYXRhQWRhcHRvci5nZXRGaWVsZChlLm5hbWVbaV0pICsgKGUuZGlyZWN0aW9uID09PSAnZGVzY2VuZGluZycgPyAnIGRlc2MnIDogJycpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXMucHVzaChPRGF0YUFkYXB0b3IuZ2V0RmllbGQoZS5uYW1lKSArIChlLmRpcmVjdGlvbiA9PT0gJ2Rlc2NlbmRpbmcnID8gJyBkZXNjJyA6ICcnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpvaW4oJywnKTtcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5vblNvcnRCeSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gZS5yZXZlcnNlKCkuam9pbignLCcpO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLm9uR3JvdXAgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhpcy5wdnQuZ3JvdXBzID0gZTtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5vblNlbGVjdCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBlW2ldID0gT0RhdGFBZGFwdG9yLmdldEZpZWxkKGVbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGUuam9pbignLCcpO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLm9uQWdncmVnYXRlcyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICB0aGlzLnB2dC5hZ2dyZWdhdGVzID0gZTtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5vbkNvdW50ID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlID09PSB0cnVlID8gJ2FsbHBhZ2VzJyA6ICcnO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLmJlZm9yZVNlbmQgPSBmdW5jdGlvbiAoZG0sIHJlcXVlc3QsIHNldHRpbmdzKSB7XG4gICAgICAgICAgICBpZiAodXRpbF8xLkRhdGFVdGlsLmVuZHNXaXRoKHNldHRpbmdzLnVybCwgdGhpcy5vcHRpb25zLmJhdGNoKSAmJiBzZXR0aW5ncy50eXBlLnRvTG93ZXJDYXNlKCkgPT09ICdwb3N0Jykge1xuICAgICAgICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcignQWNjZXB0JywgdGhpcy5vcHRpb25zLm11bHRpcGFydEFjY2VwdCk7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCdEYXRhU2VydmljZVZlcnNpb24nLCAnMi4wJyk7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5vdmVycmlkZU1pbWVUeXBlKCd0ZXh0L3BsYWluOyBjaGFyc2V0PXgtdXNlci1kZWZpbmVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoJ0FjY2VwdCcsIHRoaXMub3B0aW9ucy5hY2NlcHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCdEYXRhU2VydmljZVZlcnNpb24nLCAnMi4wJyk7XG4gICAgICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoJ01heERhdGFTZXJ2aWNlVmVyc2lvbicsICcyLjAnKTtcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5wcm9jZXNzUmVzcG9uc2UgPSBmdW5jdGlvbiAoZGF0YSwgZHMsIHF1ZXJ5LCB4aHIsIHJlcXVlc3QsIGNoYW5nZXMpIHtcbiAgICAgICAgICAgIHZhciBwdnREYXRhID0gJ3B2dERhdGEnO1xuICAgICAgICAgICAgaWYgKCFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGRhdGEuZCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YUNvcHkgPSAocXVlcnkgJiYgcXVlcnkuaXNDb3VudFJlcXVpcmVkKSA/IGRhdGEuZC5yZXN1bHRzIDogZGF0YS5kO1xuICAgICAgICAgICAgICAgIHZhciBtZXRhRGF0YSA9ICdfX21ldGFkYXRhJztcbiAgICAgICAgICAgICAgICBpZiAoIWVqMl9iYXNlXzEuaXNOdWxsT3JVbmRlZmluZWQoZGF0YUNvcHkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YUNvcHkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZWoyX2Jhc2VfMS5pc051bGxPclVuZGVmaW5lZChkYXRhQ29weVtpXVttZXRhRGF0YV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGRhdGFDb3B5W2ldW21ldGFEYXRhXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBwdnQgPSByZXF1ZXN0ICYmIHJlcXVlc3RbcHZ0RGF0YV07XG4gICAgICAgICAgICB2YXIgZW1wdHlBbmRCYXRjaCA9IHRoaXMucHJvY2Vzc0JhdGNoUmVzcG9uc2UoZGF0YSwgcXVlcnksIHhociwgcmVxdWVzdCwgY2hhbmdlcyk7XG4gICAgICAgICAgICBpZiAoZW1wdHlBbmRCYXRjaCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlbXB0eUFuZEJhdGNoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHZlcnNpb25DaGVjayA9IHhociAmJiByZXF1ZXN0LmdldFJlc3BvbnNlSGVhZGVyKCdEYXRhU2VydmljZVZlcnNpb24nKTtcbiAgICAgICAgICAgIHZhciBjb3VudCA9IG51bGw7XG4gICAgICAgICAgICB2YXIgdmVyc2lvbiA9ICh2ZXJzaW9uQ2hlY2sgJiYgcGFyc2VJbnQodmVyc2lvbkNoZWNrLCAxMCkpIHx8IDI7XG4gICAgICAgICAgICBpZiAocXVlcnkgJiYgcXVlcnkuaXNDb3VudFJlcXVpcmVkKSB7XG4gICAgICAgICAgICAgICAgdmFyIG9EYXRhQ291bnQgPSAnX19jb3VudCc7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFbb0RhdGFDb3VudF0gfHwgZGF0YVsnb2RhdGEuY291bnQnXSkge1xuICAgICAgICAgICAgICAgICAgICBjb3VudCA9IGRhdGFbb0RhdGFDb3VudF0gfHwgZGF0YVsnb2RhdGEuY291bnQnXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuZCkge1xuICAgICAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS5kO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZGF0YVtvRGF0YUNvdW50XSB8fCBkYXRhWydvZGF0YS5jb3VudCddKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50ID0gZGF0YVtvRGF0YUNvdW50XSB8fCBkYXRhWydvZGF0YS5jb3VudCddO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2ZXJzaW9uID09PSAzICYmIGRhdGEudmFsdWUpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkYXRhLmQpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS5kO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZlcnNpb24gPCAzICYmIGRhdGEucmVzdWx0cykge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLnJlc3VsdHM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgYXJncyA9IHt9O1xuICAgICAgICAgICAgYXJncy5jb3VudCA9IGNvdW50O1xuICAgICAgICAgICAgYXJncy5yZXN1bHQgPSBkYXRhO1xuICAgICAgICAgICAgdGhpcy5nZXRBZ2dyZWdhdGVSZXN1bHQocHZ0LCBkYXRhLCBhcmdzKTtcbiAgICAgICAgICAgIHJldHVybiB1dGlsXzEuRGF0YVV0aWwuaXNOdWxsKGNvdW50KSA/IGFyZ3MucmVzdWx0IDogeyByZXN1bHQ6IGFyZ3MucmVzdWx0LCBjb3VudDogYXJncy5jb3VudCwgYWdncmVnYXRlczogYXJncy5hZ2dyZWdhdGVzIH07XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUuY29udmVydFRvUXVlcnlTdHJpbmcgPSBmdW5jdGlvbiAocmVxdWVzdCwgcXVlcnksIGRtKSB7XG4gICAgICAgICAgICB2YXIgcmVzID0gW107XG4gICAgICAgICAgICB2YXIgdGFibGUgPSAndGFibGUnO1xuICAgICAgICAgICAgdmFyIHRhYmxlTmFtZSA9IHJlcXVlc3RbdGFibGVdIHx8ICcnO1xuICAgICAgICAgICAgdmFyIGZvcm1hdCA9ICckZm9ybWF0JztcbiAgICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0W3RhYmxlXTtcbiAgICAgICAgICAgIGlmIChkbS5kYXRhU291cmNlLnJlcXVpcmVzRm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdFtmb3JtYXRdID0gJ2pzb24nO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhyZXF1ZXN0KTtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwga2V5c180ID0ga2V5czsgX2kgPCBrZXlzXzQubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb3AgPSBrZXlzXzRbX2ldO1xuICAgICAgICAgICAgICAgIHJlcy5wdXNoKHByb3AgKyAnPScgKyByZXF1ZXN0W3Byb3BdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcyA9IHJlcy5qb2luKCcmJyk7XG4gICAgICAgICAgICBpZiAoZG0uZGF0YVNvdXJjZS51cmwgJiYgZG0uZGF0YVNvdXJjZS51cmwuaW5kZXhPZignPycpICE9PSAtMSAmJiAhdGFibGVOYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXMubGVuZ3RoID8gdGFibGVOYW1lICsgJz8nICsgcmVzIDogdGFibGVOYW1lIHx8ICcnO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uIChkbSwgZGF0YSwgdGFibGVOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHVybDogZG0uZGF0YVNvdXJjZS51cmwucmVwbGFjZSgvXFwvKiQvLCB0YWJsZU5hbWUgPyAnLycgKyB0YWJsZU5hbWUgOiAnJyksXG4gICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoZGF0YSlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGRtLCBrZXlGaWVsZCwgdmFsdWUsIHRhYmxlTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnREVMRVRFJyxcbiAgICAgICAgICAgICAgICB1cmw6IGRtLmRhdGFTb3VyY2UudXJsLnJlcGxhY2UoL1xcLyokLywgdGFibGVOYW1lID8gJy8nICsgdGFibGVOYW1lIDogJycpICsgJygnICsgdmFsdWUgKyAnKSdcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGRtLCBrZXlGaWVsZCwgdmFsdWUsIHRhYmxlTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUFVUJyxcbiAgICAgICAgICAgICAgICB1cmw6IGRtLmRhdGFTb3VyY2UudXJsLnJlcGxhY2UoL1xcLyokLywgdGFibGVOYW1lID8gJy8nICsgdGFibGVOYW1lIDogJycpICsgJygnICsgdmFsdWVba2V5RmllbGRdICsgJyknLFxuICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHZhbHVlKSxcbiAgICAgICAgICAgICAgICBhY2NlcHQ6IHRoaXMub3B0aW9ucy5hY2NlcHRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUuYmF0Y2hSZXF1ZXN0ID0gZnVuY3Rpb24gKGRtLCBjaGFuZ2VzLCBlKSB7XG4gICAgICAgICAgICB2YXIgaW5pdGlhbEd1aWQgPSBlLmd1aWQgPSB1dGlsXzEuRGF0YVV0aWwuZ2V0R3VpZCh0aGlzLm9wdGlvbnMuYmF0Y2hQcmUpO1xuICAgICAgICAgICAgdmFyIHVybCA9IGRtLmRhdGFTb3VyY2UudXJsLnJlcGxhY2UoL1xcLyokLywgJy8nICsgdGhpcy5vcHRpb25zLmJhdGNoKTtcbiAgICAgICAgICAgIHZhciBhcmdzID0ge1xuICAgICAgICAgICAgICAgIHVybDogZS51cmwsXG4gICAgICAgICAgICAgICAga2V5OiBlLmtleSxcbiAgICAgICAgICAgICAgICBjaWQ6IDEsXG4gICAgICAgICAgICAgICAgY1NldDogdXRpbF8xLkRhdGFVdGlsLmdldEd1aWQodGhpcy5vcHRpb25zLmNoYW5nZVNldClcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgcmVxID0gJy0tJyArIGluaXRpYWxHdWlkICsgJ1xcbic7XG4gICAgICAgICAgICByZXEgKz0gJ0NvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L21peGVkOyBib3VuZGFyeT0nICsgYXJncy5jU2V0LnJlcGxhY2UoJy0tJywgJycpICsgJ1xcbic7XG4gICAgICAgICAgICB0aGlzLnB2dC5jaGFuZ2VTZXQgPSAwO1xuICAgICAgICAgICAgcmVxICs9IHRoaXMuZ2VuZXJhdGVJbnNlcnRSZXF1ZXN0KGNoYW5nZXMuYWRkZWRSZWNvcmRzLCBhcmdzKTtcbiAgICAgICAgICAgIHJlcSArPSB0aGlzLmdlbmVyYXRlVXBkYXRlUmVxdWVzdChjaGFuZ2VzLmNoYW5nZWRSZWNvcmRzLCBhcmdzKTtcbiAgICAgICAgICAgIHJlcSArPSB0aGlzLmdlbmVyYXRlRGVsZXRlUmVxdWVzdChjaGFuZ2VzLmRlbGV0ZWRSZWNvcmRzLCBhcmdzKTtcbiAgICAgICAgICAgIHJlcSArPSBhcmdzLmNTZXQgKyAnLS1cXG4nO1xuICAgICAgICAgICAgcmVxICs9ICctLScgKyBpbml0aWFsR3VpZCArICctLSc7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnbXVsdGlwYXJ0L21peGVkOyBjaGFyc2V0PVVURi04O2JvdW5kYXJ5PScgKyBpbml0aWFsR3VpZCxcbiAgICAgICAgICAgICAgICBkYXRhOiByZXFcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUuZ2VuZXJhdGVEZWxldGVSZXF1ZXN0ID0gZnVuY3Rpb24gKGFyciwgZSkge1xuICAgICAgICAgICAgaWYgKCFhcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcmVxID0gJyc7XG4gICAgICAgICAgICB2YXIgc3RhdCA9IHtcbiAgICAgICAgICAgICAgICAnbWV0aG9kJzogJ0RFTEVURSAnLFxuICAgICAgICAgICAgICAgICd1cmwnOiBmdW5jdGlvbiAoZGF0YSwgaSwga2V5KSB7IHJldHVybiAnKCcgKyBkYXRhW2ldW2tleV0gKyAnKSc7IH0sXG4gICAgICAgICAgICAgICAgJ2RhdGEnOiBmdW5jdGlvbiAoZGF0YSwgaSkgeyByZXR1cm4gJyc7IH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXEgPSB0aGlzLmdlbmVyYXRlQm9keUNvbnRlbnQoYXJyLCBlLCBzdGF0KTtcbiAgICAgICAgICAgIHJldHVybiByZXEgKyAnXFxuJztcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5nZW5lcmF0ZUluc2VydFJlcXVlc3QgPSBmdW5jdGlvbiAoYXJyLCBlKSB7XG4gICAgICAgICAgICBpZiAoIWFycikge1xuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciByZXEgPSAnJztcbiAgICAgICAgICAgIHZhciBzdGF0ID0ge1xuICAgICAgICAgICAgICAgICdtZXRob2QnOiAnUE9TVCAnLFxuICAgICAgICAgICAgICAgICd1cmwnOiBmdW5jdGlvbiAoZGF0YSwgaSwga2V5KSB7IHJldHVybiAnJzsgfSxcbiAgICAgICAgICAgICAgICAnZGF0YSc6IGZ1bmN0aW9uIChkYXRhLCBpKSB7IHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhW2ldKSArICdcXG5cXG4nOyB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVxID0gdGhpcy5nZW5lcmF0ZUJvZHlDb250ZW50KGFyciwgZSwgc3RhdCk7XG4gICAgICAgICAgICByZXR1cm4gcmVxO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YUFkYXB0b3IucHJvdG90eXBlLmdlbmVyYXRlVXBkYXRlUmVxdWVzdCA9IGZ1bmN0aW9uIChhcnIsIGUpIHtcbiAgICAgICAgICAgIGlmICghYXJyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHJlcSA9ICcnO1xuICAgICAgICAgICAgdmFyIHN0YXQgPSB7XG4gICAgICAgICAgICAgICAgJ21ldGhvZCc6ICdQVVQgJyxcbiAgICAgICAgICAgICAgICAndXJsJzogZnVuY3Rpb24gKGRhdGEsIGksIGtleSkgeyByZXR1cm4gJygnICsgZGF0YVtpXVtrZXldICsgJyknOyB9LFxuICAgICAgICAgICAgICAgICdkYXRhJzogZnVuY3Rpb24gKGRhdGEsIGkpIHsgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGFbaV0pICsgJ1xcblxcbic7IH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXEgPSB0aGlzLmdlbmVyYXRlQm9keUNvbnRlbnQoYXJyLCBlLCBzdGF0KTtcbiAgICAgICAgICAgIHJldHVybiByZXE7XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5nZXRGaWVsZCA9IGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvcC5yZXBsYWNlKC9cXC4vZywgJy8nKTtcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFBZGFwdG9yLnByb3RvdHlwZS5nZW5lcmF0ZUJvZHlDb250ZW50ID0gZnVuY3Rpb24gKGFyciwgZSwgc3RhdCkge1xuICAgICAgICAgICAgdmFyIHJlcSA9ICcnO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICByZXEgKz0gJ1xcbicgKyBlLmNTZXQgKyAnXFxuJztcbiAgICAgICAgICAgICAgICByZXEgKz0gdGhpcy5vcHRpb25zLmNoYW5nZVNldENvbnRlbnQgKyAnXFxuXFxuJztcbiAgICAgICAgICAgICAgICByZXEgKz0gc3RhdC5tZXRob2Q7XG4gICAgICAgICAgICAgICAgcmVxICs9IGUudXJsICsgc3RhdC51cmwoYXJyLCBpLCBlLmtleSkgKyAnIEhUVFAvMS4xXFxuJztcbiAgICAgICAgICAgICAgICByZXEgKz0gJ0FjY2VwdDogJyArIHRoaXMub3B0aW9ucy5hY2NlcHQgKyAnXFxuJztcbiAgICAgICAgICAgICAgICByZXEgKz0gJ0NvbnRlbnQtSWQ6ICcgKyB0aGlzLnB2dC5jaGFuZ2VTZXQrKyArICdcXG4nO1xuICAgICAgICAgICAgICAgIHJlcSArPSB0aGlzLm9wdGlvbnMuYmF0Y2hDaGFuZ2VTZXRDb250ZW50VHlwZSArICdcXG5cXG4nO1xuICAgICAgICAgICAgICAgIHJlcSArPSBzdGF0LmRhdGEoYXJyLCBpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXE7XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhQWRhcHRvci5wcm90b3R5cGUucHJvY2Vzc0JhdGNoUmVzcG9uc2UgPSBmdW5jdGlvbiAoZGF0YSwgcXVlcnksIHhociwgcmVxdWVzdCwgY2hhbmdlcykge1xuICAgICAgICAgICAgaWYgKHhociAmJiB4aHIuZ2V0UmVzcG9uc2VIZWFkZXIoJ0NvbnRlbnQtVHlwZScpICYmIHhoci5nZXRSZXNwb25zZUhlYWRlcignQ29udGVudC1UeXBlJykuaW5kZXhPZigneG1sJykgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChxdWVyeS5pc0NvdW50UmVxdWlyZWQgPyB7IHJlc3VsdDogW10sIGNvdW50OiAwIH0gOiBbXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVxdWVzdCAmJiB0aGlzLm9wdGlvbnMuYmF0Y2ggJiYgdXRpbF8xLkRhdGFVdGlsLmVuZHNXaXRoKHJlcXVlc3QudXJsLCB0aGlzLm9wdGlvbnMuYmF0Y2gpICYmIHJlcXVlc3QudHlwZS50b0xvd2VyQ2FzZSgpID09PSAncG9zdCcpIHtcbiAgICAgICAgICAgICAgICB2YXIgZ3VpZCA9IHhoci5nZXRSZXNwb25zZUhlYWRlcignQ29udGVudC1UeXBlJyk7XG4gICAgICAgICAgICAgICAgdmFyIGNJZHggPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgdmFyIGpzb25PYmogPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgZ3VpZCA9IGd1aWQuc3Vic3RyaW5nKGd1aWQuaW5kZXhPZignPWJhdGNocmVzcG9uc2UnKSArIDEpO1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLnNwbGl0KGd1aWQpO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkYXRhID0gZGF0YVsxXTtcbiAgICAgICAgICAgICAgICB2YXIgZXhWYWwgPSAvKD86XFxiQ29udGVudC1UeXBlLitib3VuZGFyeT0pKGNoYW5nZXNldHJlc3BvbnNlLispL2kuZXhlYyhkYXRhKTtcbiAgICAgICAgICAgICAgICBpZiAoZXhWYWwpIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5yZXBsYWNlKGV4VmFsWzBdLCAnJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBjaGFuZ2VHdWlkID0gZXhWYWwgPyBleFZhbFsxXSA6ICcnO1xuICAgICAgICAgICAgICAgIGRhdGEgPSBkYXRhLnNwbGl0KGNoYW5nZUd1aWQpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBkYXRhLmxlbmd0aDsgaSA+IC0xOyBpLS0pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEvXFxiQ29udGVudC1JRDovaS50ZXN0KGRhdGFbaV0pIHx8ICEvXFxiSFRUUC4rMjAxLy50ZXN0KGRhdGFbaV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjSWR4ID0gcGFyc2VJbnQoL1xcYkNvbnRlbnQtSUQ6IChcXGQrKS9pLmV4ZWMoZGF0YVtpXSlbMV0sIDEwKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYW5nZXMuYWRkZWRSZWNvcmRzW2NJZHhdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBqc29uT2JqID0gdXRpbF8xLkRhdGFVdGlsLnBhcnNlLnBhcnNlSnNvbigvXlxcey4rXFx9L20uZXhlYyhkYXRhW2ldKVswXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlajJfYmFzZV8xLmV4dGVuZCh7fSwgY2hhbmdlcy5hZGRlZFJlY29yZHNbY0lkeF0sIHRoaXMucHJvY2Vzc1Jlc3BvbnNlKGpzb25PYmopKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2hhbmdlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gT0RhdGFBZGFwdG9yO1xuICAgIH0oVXJsQWRhcHRvcikpO1xuICAgIGV4cG9ydHMuT0RhdGFBZGFwdG9yID0gT0RhdGFBZGFwdG9yO1xuICAgIHZhciBPRGF0YVY0QWRhcHRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhPRGF0YVY0QWRhcHRvciwgX3N1cGVyKTtcbiAgICAgICAgZnVuY3Rpb24gT0RhdGFWNEFkYXB0b3IoKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgICAgIF90aGlzLm9wdGlvbnMgPSBlajJfYmFzZV8xLmV4dGVuZCh7fSwgX3RoaXMub3B0aW9ucywge1xuICAgICAgICAgICAgICAgIHJlcXVlc3RUeXBlOiAnZ2V0JyxcbiAgICAgICAgICAgICAgICBhY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxJyxcbiAgICAgICAgICAgICAgICBtdWx0aXBhcnRBY2NlcHQ6ICdtdWx0aXBhcnQvbWl4ZWQnLFxuICAgICAgICAgICAgICAgIHNvcnRCeTogJyRvcmRlcmJ5JyxcbiAgICAgICAgICAgICAgICBzZWxlY3Q6ICckc2VsZWN0JyxcbiAgICAgICAgICAgICAgICBza2lwOiAnJHNraXAnLFxuICAgICAgICAgICAgICAgIHRha2U6ICckdG9wJyxcbiAgICAgICAgICAgICAgICBjb3VudDogJyRjb3VudCcsXG4gICAgICAgICAgICAgICAgc2VhcmNoOiAnJHNlYXJjaCcsXG4gICAgICAgICAgICAgICAgd2hlcmU6ICckZmlsdGVyJyxcbiAgICAgICAgICAgICAgICBleHBhbmQ6ICckZXhwYW5kJyxcbiAgICAgICAgICAgICAgICBiYXRjaDogJyRiYXRjaCcsXG4gICAgICAgICAgICAgICAgY2hhbmdlU2V0OiAnLS1jaGFuZ2VzZXRfJyxcbiAgICAgICAgICAgICAgICBiYXRjaFByZTogJ2JhdGNoXycsXG4gICAgICAgICAgICAgICAgY29udGVudElkOiAnQ29udGVudC1JZDogJyxcbiAgICAgICAgICAgICAgICBiYXRjaENvbnRlbnQ6ICdDb250ZW50LVR5cGU6IG11bHRpcGFydC9taXhlZDsgYm91bmRhcnk9JyxcbiAgICAgICAgICAgICAgICBjaGFuZ2VTZXRDb250ZW50OiAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9odHRwXFxuQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogYmluYXJ5ICcsXG4gICAgICAgICAgICAgICAgYmF0Y2hDaGFuZ2VTZXRDb250ZW50VHlwZTogJ0NvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCAnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgfVxuICAgICAgICBPRGF0YVY0QWRhcHRvci5wcm90b3R5cGUuZ2V0TW9kdWxlbmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAnT0RhdGFWNEFkYXB0b3InO1xuICAgICAgICB9O1xuICAgICAgICA7XG4gICAgICAgIE9EYXRhVjRBZGFwdG9yLnByb3RvdHlwZS5vbkNvdW50ID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlID09PSB0cnVlID8gJ3RydWUnIDogJyc7XG4gICAgICAgIH07XG4gICAgICAgIE9EYXRhVjRBZGFwdG9yLnByb3RvdHlwZS5vblByZWRpY2F0ZSA9IGZ1bmN0aW9uIChwcmVkaWNhdGUsIHF1ZXJ5LCByZXF1aXJlc0Nhc3QpIHtcbiAgICAgICAgICAgIHZhciByZXR1cm5WYWx1ZSA9ICcnO1xuICAgICAgICAgICAgdmFyIHZhbCA9IHByZWRpY2F0ZS52YWx1ZTtcbiAgICAgICAgICAgIHZhciBpc0RhdGUgPSB2YWwgaW5zdGFuY2VvZiBEYXRlO1xuICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSBfc3VwZXIucHJvdG90eXBlLm9uUHJlZGljYXRlLmNhbGwodGhpcywgcHJlZGljYXRlLCBxdWVyeSwgcmVxdWlyZXNDYXN0KTtcbiAgICAgICAgICAgIGlmIChpc0RhdGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHJldHVyblZhbHVlLnJlcGxhY2UoL2RhdGV0aW1lJyguKiknJC8sICckMScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YVY0QWRhcHRvci5wcm90b3R5cGUub25FYWNoU2VhcmNoID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciBzZWFyY2ggPSB0aGlzLnB2dC5zZWFyY2hlcyB8fCBbXTtcbiAgICAgICAgICAgIHNlYXJjaC5wdXNoKGUua2V5KTtcbiAgICAgICAgICAgIHRoaXMucHZ0LnNlYXJjaGVzID0gc2VhcmNoO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YVY0QWRhcHRvci5wcm90b3R5cGUub25TZWFyY2ggPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHZ0LnNlYXJjaGVzLmpvaW4oJyBPUiAnKTtcbiAgICAgICAgfTtcbiAgICAgICAgT0RhdGFWNEFkYXB0b3IucHJvdG90eXBlLmJlZm9yZVNlbmQgPSBmdW5jdGlvbiAoZG0sIHJlcXVlc3QsIHNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoJ0FjY2VwdCcsIHRoaXMub3B0aW9ucy5hY2NlcHQpO1xuICAgICAgICB9O1xuICAgICAgICBPRGF0YVY0QWRhcHRvci5wcm90b3R5cGUucHJvY2Vzc1Jlc3BvbnNlID0gZnVuY3Rpb24gKGRhdGEsIGRzLCBxdWVyeSwgeGhyLCByZXF1ZXN0LCBjaGFuZ2VzKSB7XG4gICAgICAgICAgICB2YXIgcHZ0RGF0YSA9ICdwdnREYXRhJztcbiAgICAgICAgICAgIHZhciBwdnQgPSByZXF1ZXN0ICYmIHJlcXVlc3RbcHZ0RGF0YV07XG4gICAgICAgICAgICB2YXIgZW1wdHlBbmRCYXRjaCA9IF9zdXBlci5wcm90b3R5cGUucHJvY2Vzc0JhdGNoUmVzcG9uc2UuY2FsbCh0aGlzLCBkYXRhLCBxdWVyeSwgeGhyLCByZXF1ZXN0LCBjaGFuZ2VzKTtcbiAgICAgICAgICAgIGlmIChlbXB0eUFuZEJhdGNoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVtcHR5QW5kQmF0Y2g7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgY291bnQgPSBudWxsO1xuICAgICAgICAgICAgdmFyIGRhdGFDb3VudCA9ICdAb2RhdGEuY291bnQnO1xuICAgICAgICAgICAgaWYgKHF1ZXJ5ICYmIHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhQ291bnQgaW4gZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBjb3VudCA9IGRhdGFbZGF0YUNvdW50XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRhID0gZGF0YS52YWx1ZTtcbiAgICAgICAgICAgIHZhciBhcmdzID0ge307XG4gICAgICAgICAgICBhcmdzLmNvdW50ID0gY291bnQ7XG4gICAgICAgICAgICBhcmdzLnJlc3VsdCA9IGRhdGE7XG4gICAgICAgICAgICB0aGlzLmdldEFnZ3JlZ2F0ZVJlc3VsdChwdnQsIGRhdGEsIGFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC5pc051bGwoY291bnQpID8gYXJncy5yZXN1bHQgOiB7IHJlc3VsdDogYXJncy5yZXN1bHQsIGNvdW50OiBjb3VudCwgYWdncmVnYXRlczogYXJncy5hZ2dyZWdhdGVzIH07XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBPRGF0YVY0QWRhcHRvcjtcbiAgICB9KE9EYXRhQWRhcHRvcikpO1xuICAgIGV4cG9ydHMuT0RhdGFWNEFkYXB0b3IgPSBPRGF0YVY0QWRhcHRvcjtcbiAgICB2YXIgV2ViQXBpQWRhcHRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhXZWJBcGlBZGFwdG9yLCBfc3VwZXIpO1xuICAgICAgICBmdW5jdGlvbiBXZWJBcGlBZGFwdG9yKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIFdlYkFwaUFkYXB0b3IucHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uIChkbSwgZGF0YSwgdGFibGVOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IGRtLmRhdGFTb3VyY2UudXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGRhdGEpXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICBXZWJBcGlBZGFwdG9yLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoZG0sIGtleUZpZWxkLCB2YWx1ZSwgdGFibGVOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdERUxFVEUnLFxuICAgICAgICAgICAgICAgIHVybDogZG0uZGF0YVNvdXJjZS51cmwgKyAnLycgKyB2YWx1ZSxcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh2YWx1ZSlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIFdlYkFwaUFkYXB0b3IucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChkbSwga2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BVVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBkbS5kYXRhU291cmNlLnVybCxcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh2YWx1ZSlcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIFdlYkFwaUFkYXB0b3IucHJvdG90eXBlLmJlZm9yZVNlbmQgPSBmdW5jdGlvbiAoZG0sIHJlcXVlc3QsIHNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoJ0FjY2VwdCcsICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxJyk7XG4gICAgICAgIH07XG4gICAgICAgIFdlYkFwaUFkYXB0b3IucHJvdG90eXBlLnByb2Nlc3NSZXNwb25zZSA9IGZ1bmN0aW9uIChkYXRhLCBkcywgcXVlcnksIHhociwgcmVxdWVzdCwgY2hhbmdlcykge1xuICAgICAgICAgICAgdmFyIHB2dERhdGEgPSAncHZ0RGF0YSc7XG4gICAgICAgICAgICB2YXIgcHZ0ID0gcmVxdWVzdCAmJiByZXF1ZXN0W3B2dERhdGFdO1xuICAgICAgICAgICAgdmFyIGNvdW50ID0gbnVsbDtcbiAgICAgICAgICAgIHZhciBhcmdzID0ge307XG4gICAgICAgICAgICBpZiAocmVxdWVzdCAmJiByZXF1ZXN0LnR5cGUudG9Mb3dlckNhc2UoKSAhPT0gJ3Bvc3QnKSB7XG4gICAgICAgICAgICAgICAgdmFyIHZlcnNpb25DaGVjayA9IHhociAmJiByZXF1ZXN0LmdldFJlc3BvbnNlSGVhZGVyKCdEYXRhU2VydmljZVZlcnNpb24nKTtcbiAgICAgICAgICAgICAgICB2YXIgdmVyc2lvbiA9ICh2ZXJzaW9uQ2hlY2sgJiYgcGFyc2VJbnQodmVyc2lvbkNoZWNrLCAxMCkpIHx8IDI7XG4gICAgICAgICAgICAgICAgaWYgKHF1ZXJ5ICYmIHF1ZXJ5LmlzQ291bnRSZXF1aXJlZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXV0aWxfMS5EYXRhVXRpbC5pc051bGwoZGF0YS5Db3VudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ID0gZGF0YS5Db3VudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodmVyc2lvbiA8IDMgJiYgZGF0YS5JdGVtcykge1xuICAgICAgICAgICAgICAgICAgICBkYXRhID0gZGF0YS5JdGVtcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXJncy5jb3VudCA9IGNvdW50O1xuICAgICAgICAgICAgICAgIGFyZ3MucmVzdWx0ID0gZGF0YTtcbiAgICAgICAgICAgICAgICB0aGlzLmdldEFnZ3JlZ2F0ZVJlc3VsdChwdnQsIGRhdGEsIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXJncy5yZXN1bHQgPSBhcmdzLnJlc3VsdCB8fCBkYXRhO1xuICAgICAgICAgICAgcmV0dXJuIHV0aWxfMS5EYXRhVXRpbC5pc051bGwoY291bnQpID8gYXJncy5yZXN1bHQgOiB7IHJlc3VsdDogYXJncy5yZXN1bHQsIGNvdW50OiBhcmdzLmNvdW50LCBhZ2dyZWdhdGVzOiBhcmdzLmFnZ3JlZ2F0ZXMgfTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFdlYkFwaUFkYXB0b3I7XG4gICAgfShPRGF0YUFkYXB0b3IpKTtcbiAgICBleHBvcnRzLldlYkFwaUFkYXB0b3IgPSBXZWJBcGlBZGFwdG9yO1xuICAgIHZhciBXZWJNZXRob2RBZGFwdG9yID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICAgICAgX19leHRlbmRzKFdlYk1ldGhvZEFkYXB0b3IsIF9zdXBlcik7XG4gICAgICAgIGZ1bmN0aW9uIFdlYk1ldGhvZEFkYXB0b3IoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgV2ViTWV0aG9kQWRhcHRvci5wcm90b3R5cGUucHJvY2Vzc1F1ZXJ5ID0gZnVuY3Rpb24gKGRtLCBxdWVyeSwgaGllcmFyY2h5RmlsdGVycykge1xuICAgICAgICAgICAgdmFyIG9iaiA9IG5ldyBVcmxBZGFwdG9yKCkucHJvY2Vzc1F1ZXJ5KGRtLCBxdWVyeSwgaGllcmFyY2h5RmlsdGVycyk7XG4gICAgICAgICAgICB2YXIgZ2V0RGF0YSA9ICdkYXRhJztcbiAgICAgICAgICAgIHZhciBkYXRhID0gdXRpbF8xLkRhdGFVdGlsLnBhcnNlLnBhcnNlSnNvbihvYmpbZ2V0RGF0YV0pO1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gJ3ZhbHVlJztcbiAgICAgICAgICAgIGlmIChkYXRhLnBhcmFtKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLnBhcmFtLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJhbSA9IGRhdGEucGFyYW1baV07XG4gICAgICAgICAgICAgICAgICAgIHZhciBrZXkgPSBPYmplY3Qua2V5cyhwYXJhbSlbMF07XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gcGFyYW1ba2V5XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHRbdmFsdWVdID0gZGF0YTtcbiAgICAgICAgICAgIHZhciBwdnREYXRhID0gJ3B2dERhdGEnO1xuICAgICAgICAgICAgdmFyIHVybCA9ICd1cmwnO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShyZXN1bHQpLFxuICAgICAgICAgICAgICAgIHVybDogb2JqW3VybF0sXG4gICAgICAgICAgICAgICAgcHZ0RGF0YTogb2JqW3B2dERhdGFdLFxuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gV2ViTWV0aG9kQWRhcHRvcjtcbiAgICB9KFVybEFkYXB0b3IpKTtcbiAgICBleHBvcnRzLldlYk1ldGhvZEFkYXB0b3IgPSBXZWJNZXRob2RBZGFwdG9yO1xuICAgIHZhciBSZW1vdGVTYXZlQWRhcHRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhSZW1vdGVTYXZlQWRhcHRvciwgX3N1cGVyKTtcbiAgICAgICAgZnVuY3Rpb24gUmVtb3RlU2F2ZUFkYXB0b3IoKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICAgICAgZWoyX2Jhc2VfMS5zZXRWYWx1ZSgnYmVmb3JlU2VuZCcsIFVybEFkYXB0b3IucHJvdG90eXBlLmJlZm9yZVNlbmQsIF90aGlzKTtcbiAgICAgICAgICAgIGVqMl9iYXNlXzEuc2V0VmFsdWUoJ2luc2VydCcsIFVybEFkYXB0b3IucHJvdG90eXBlLmluc2VydCwgX3RoaXMpO1xuICAgICAgICAgICAgZWoyX2Jhc2VfMS5zZXRWYWx1ZSgndXBkYXRlJywgVXJsQWRhcHRvci5wcm90b3R5cGUudXBkYXRlLCBfdGhpcyk7XG4gICAgICAgICAgICBlajJfYmFzZV8xLnNldFZhbHVlKCdyZW1vdmUnLCBVcmxBZGFwdG9yLnByb3RvdHlwZS5yZW1vdmUsIF90aGlzKTtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgICAgfVxuICAgICAgICBSZW1vdGVTYXZlQWRhcHRvci5wcm90b3R5cGUuYmF0Y2hSZXF1ZXN0ID0gZnVuY3Rpb24gKGRtLCBjaGFuZ2VzLCBlKSB7XG4gICAgICAgICAgICB2YXIgaTtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjaGFuZ2VzLmFkZGVkUmVjb3Jkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIEpzb25BZGFwdG9yLnByb3RvdHlwZS5pbnNlcnQoZG0sIGNoYW5nZXMuYWRkZWRSZWNvcmRzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjaGFuZ2VzLmNoYW5nZWRSZWNvcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgSnNvbkFkYXB0b3IucHJvdG90eXBlLnVwZGF0ZShkbSwgZS5rZXksIGNoYW5nZXMuY2hhbmdlZFJlY29yZHNbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNoYW5nZXMuZGVsZXRlZFJlY29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBKc29uQWRhcHRvci5wcm90b3R5cGUucmVtb3ZlKGRtLCBlLmtleSwgY2hhbmdlcy5kZWxldGVkUmVjb3Jkc1tpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IGRtLmRhdGFTb3VyY2UuYmF0Y2hVcmwgfHwgZG0uZGF0YVNvdXJjZS5jcnVkVXJsIHx8IGRtLmRhdGFTb3VyY2UudXJsLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcsXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZWQ6IGNoYW5nZXMuY2hhbmdlZFJlY29yZHMsXG4gICAgICAgICAgICAgICAgICAgIGFkZGVkOiBjaGFuZ2VzLmFkZGVkUmVjb3JkcyxcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlZDogY2hhbmdlcy5kZWxldGVkUmVjb3JkcyxcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnYmF0Y2gnLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZTogZS51cmwsXG4gICAgICAgICAgICAgICAgICAgIGtleTogZS5rZXlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFJlbW90ZVNhdmVBZGFwdG9yO1xuICAgIH0oSnNvbkFkYXB0b3IpKTtcbiAgICBleHBvcnRzLlJlbW90ZVNhdmVBZGFwdG9yID0gUmVtb3RlU2F2ZUFkYXB0b3I7XG4gICAgdmFyIENhY2hlQWRhcHRvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhDYWNoZUFkYXB0b3IsIF9zdXBlcik7XG4gICAgICAgIGZ1bmN0aW9uIENhY2hlQWRhcHRvcihhZGFwdG9yLCB0aW1lU3RhbXAsIHBhZ2VTaXplKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICAgICAgX3RoaXMuaXNDcnVkQWN0aW9uID0gZmFsc2U7XG4gICAgICAgICAgICBfdGhpcy5pc0luc2VydEFjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKCFlajJfYmFzZV8xLmlzTnVsbE9yVW5kZWZpbmVkKGFkYXB0b3IpKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuY2FjaGVBZGFwdG9yID0gYWRhcHRvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF90aGlzLnBhZ2VTaXplID0gcGFnZVNpemU7XG4gICAgICAgICAgICBfdGhpcy5ndWlkSWQgPSB1dGlsXzEuRGF0YVV0aWwuZ2V0R3VpZCgnY2FjaGVBZGFwdG9yJyk7XG4gICAgICAgICAgICB2YXIgb2JqID0geyBrZXlzOiBbXSwgcmVzdWx0czogW10gfTtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShfdGhpcy5ndWlkSWQsIEpTT04uc3RyaW5naWZ5KG9iaikpO1xuICAgICAgICAgICAgdmFyIGd1aWQgPSBfdGhpcy5ndWlkSWQ7XG4gICAgICAgICAgICBpZiAoIWVqMl9iYXNlXzEuaXNOdWxsT3JVbmRlZmluZWQodGltZVN0YW1wKSkge1xuICAgICAgICAgICAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGE7XG4gICAgICAgICAgICAgICAgICAgIGRhdGEgPSB1dGlsXzEuRGF0YVV0aWwucGFyc2UucGFyc2VKc29uKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShndWlkKSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmb3JEZWwgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLnJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50VGltZSA9ICtuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlcXVlc3RUaW1lID0gK25ldyBEYXRlKGRhdGEucmVzdWx0c1tpXS50aW1lU3RhbXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5yZXN1bHRzW2ldLnRpbWVTdGFtcCA9IGN1cnJlbnRUaW1lIC0gcmVxdWVzdFRpbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFRpbWUgLSByZXF1ZXN0VGltZSA+IHRpbWVTdGFtcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvckRlbC5wdXNoKGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZm9yRGVsLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLnJlc3VsdHMuc3BsaWNlKGZvckRlbFtpXSwgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmtleXMuc3BsaWNlKGZvckRlbFtpXSwgMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGd1aWQpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oZ3VpZCwgSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICAgICAgICAgICAgICAgIH0sIHRpbWVTdGFtcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgICAgIH1cbiAgICAgICAgQ2FjaGVBZGFwdG9yLnByb3RvdHlwZS5nZW5lcmF0ZUtleSA9IGZ1bmN0aW9uICh1cmwsIHF1ZXJ5KSB7XG4gICAgICAgICAgICB2YXIgcXVlcmllcyA9IHRoaXMuZ2V0UXVlcnlSZXF1ZXN0KHF1ZXJ5KTtcbiAgICAgICAgICAgIHZhciBzaW5nbGVzID0gcXVlcnlfMS5RdWVyeS5maWx0ZXJRdWVyeUxpc3RzKHF1ZXJ5LnF1ZXJpZXMsIFsnb25TZWxlY3QnLCAnb25QYWdlJywgJ29uU2tpcCcsICdvblRha2UnLCAnb25SYW5nZSddKTtcbiAgICAgICAgICAgIHZhciBrZXkgPSB1cmw7XG4gICAgICAgICAgICB2YXIgcGFnZSA9ICdvblBhZ2UnO1xuICAgICAgICAgICAgaWYgKHBhZ2UgaW4gc2luZ2xlcykge1xuICAgICAgICAgICAgICAgIGtleSArPSBzaW5nbGVzW3BhZ2VdLnBhZ2VJbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHF1ZXJpZXMuc29ydHMuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgICAgICAgICAga2V5ICs9IG9iai5lLmRpcmVjdGlvbiArIG9iai5lLmZpZWxkTmFtZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcXVlcmllcy5ncm91cHMuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgICAgICAgICAga2V5ICs9IG9iai5lLmZpZWxkTmFtZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcXVlcmllcy5zZWFyY2hlcy5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgICAgICBrZXkgKz0gb2JqLmUuc2VhcmNoS2V5O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBmb3IgKHZhciBmaWx0ZXIgPSAwOyBmaWx0ZXIgPCBxdWVyaWVzLmZpbHRlcnMubGVuZ3RoOyBmaWx0ZXIrKykge1xuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50RmlsdGVyID0gcXVlcmllcy5maWx0ZXJzW2ZpbHRlcl07XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRGaWx0ZXIuZS5pc0NvbXBsZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld1F1ZXJ5ID0gcXVlcnkuY2xvbmUoKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3UXVlcnkucXVlcmllcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGN1cnJlbnRGaWx0ZXIuZS5wcmVkaWNhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdRdWVyeS5xdWVyaWVzLnB1c2goeyBmbjogJ29uV2hlcmUnLCBlOiBjdXJyZW50RmlsdGVyLmUucHJlZGljYXRlc1tpXSwgZmlsdGVyOiBxdWVyeS5xdWVyaWVzLmZpbHRlciB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBrZXkgKz0gY3VycmVudEZpbHRlci5lLmNvbmRpdGlvbiArIHRoaXMuZ2VuZXJhdGVLZXkodXJsLCBuZXdRdWVyeSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBrZXkgKz0gY3VycmVudEZpbHRlci5lLmZpZWxkICsgY3VycmVudEZpbHRlci5lLm9wZXJhdG9yICsgY3VycmVudEZpbHRlci5lLnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBrZXk7XG4gICAgICAgIH07XG4gICAgICAgIENhY2hlQWRhcHRvci5wcm90b3R5cGUucHJvY2Vzc1F1ZXJ5ID0gZnVuY3Rpb24gKGRtLCBxdWVyeSwgaGllcmFyY2h5RmlsdGVycykge1xuICAgICAgICAgICAgdmFyIGtleSA9IHRoaXMuZ2VuZXJhdGVLZXkoZG0uZGF0YVNvdXJjZS51cmwsIHF1ZXJ5KTtcbiAgICAgICAgICAgIHZhciBjYWNoZWRJdGVtcztcbiAgICAgICAgICAgIGNhY2hlZEl0ZW1zID0gdXRpbF8xLkRhdGFVdGlsLnBhcnNlLnBhcnNlSnNvbih3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5ndWlkSWQpKTtcbiAgICAgICAgICAgIHZhciBkYXRhID0gY2FjaGVkSXRlbXMgPyBjYWNoZWRJdGVtcy5yZXN1bHRzW2NhY2hlZEl0ZW1zLmtleXMuaW5kZXhPZihrZXkpXSA6IG51bGw7XG4gICAgICAgICAgICBpZiAoZGF0YSAhPSBudWxsICYmICF0aGlzLmlzQ3J1ZEFjdGlvbiAmJiAhdGhpcy5pc0luc2VydEFjdGlvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5pc0NydWRBY3Rpb24gPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5pc0luc2VydEFjdGlvbiA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jYWNoZUFkYXB0b3IucHJvY2Vzc1F1ZXJ5LmFwcGx5KHRoaXMuY2FjaGVBZGFwdG9yLCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMCkpO1xuICAgICAgICB9O1xuICAgICAgICBDYWNoZUFkYXB0b3IucHJvdG90eXBlLnByb2Nlc3NSZXNwb25zZSA9IGZ1bmN0aW9uIChkYXRhLCBkcywgcXVlcnksIHhociwgcmVxdWVzdCwgY2hhbmdlcykge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNJbnNlcnRBY3Rpb24gfHwgKHJlcXVlc3QgJiYgdGhpcy5jYWNoZUFkYXB0b3Iub3B0aW9ucy5iYXRjaCAmJlxuICAgICAgICAgICAgICAgIHV0aWxfMS5EYXRhVXRpbC5lbmRzV2l0aChyZXF1ZXN0LnVybCwgdGhpcy5jYWNoZUFkYXB0b3Iub3B0aW9ucy5iYXRjaCkgJiYgcmVxdWVzdC50eXBlLnRvTG93ZXJDYXNlKCkgPT09ICdwb3N0JykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jYWNoZUFkYXB0b3IucHJvY2Vzc1Jlc3BvbnNlKGRhdGEsIGRzLCBxdWVyeSwgeGhyLCByZXF1ZXN0LCBjaGFuZ2VzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGEgPSB0aGlzLmNhY2hlQWRhcHRvci5wcm9jZXNzUmVzcG9uc2UuYXBwbHkodGhpcy5jYWNoZUFkYXB0b3IsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAwKSk7XG4gICAgICAgICAgICB2YXIga2V5ID0gcXVlcnkgPyB0aGlzLmdlbmVyYXRlS2V5KGRzLmRhdGFTb3VyY2UudXJsLCBxdWVyeSkgOiBkcy5kYXRhU291cmNlLnVybDtcbiAgICAgICAgICAgIHZhciBvYmogPSB7fTtcbiAgICAgICAgICAgIG9iaiA9IHV0aWxfMS5EYXRhVXRpbC5wYXJzZS5wYXJzZUpzb24od2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuZ3VpZElkKSk7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBvYmoua2V5cy5pbmRleE9mKGtleSk7XG4gICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgb2JqLnJlc3VsdHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICBvYmoua2V5cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb2JqLnJlc3VsdHNbb2JqLmtleXMucHVzaChrZXkpIC0gMV0gPSB7IGtleXM6IGtleSwgcmVzdWx0OiBkYXRhLnJlc3VsdCwgdGltZVN0YW1wOiBuZXcgRGF0ZSgpLCBjb3VudDogZGF0YS5jb3VudCB9O1xuICAgICAgICAgICAgd2hpbGUgKG9iai5yZXN1bHRzLmxlbmd0aCA+IHRoaXMucGFnZVNpemUpIHtcbiAgICAgICAgICAgICAgICBvYmoucmVzdWx0cy5zcGxpY2UoMCwgMSk7XG4gICAgICAgICAgICAgICAgb2JqLmtleXMuc3BsaWNlKDAsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuZ3VpZElkLCBKU09OLnN0cmluZ2lmeShvYmopKTtcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9O1xuICAgICAgICBDYWNoZUFkYXB0b3IucHJvdG90eXBlLmJlZm9yZVNlbmQgPSBmdW5jdGlvbiAoZG0sIHJlcXVlc3QsIHNldHRpbmdzKSB7XG4gICAgICAgICAgICBpZiAodXRpbF8xLkRhdGFVdGlsLmVuZHNXaXRoKHNldHRpbmdzLnVybCwgdGhpcy5jYWNoZUFkYXB0b3Iub3B0aW9ucy5iYXRjaCkgJiYgc2V0dGluZ3MudHlwZS50b0xvd2VyQ2FzZSgpID09PSAncG9zdCcpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoJ0FjY2VwdCcsIHRoaXMuY2FjaGVBZGFwdG9yLm9wdGlvbnMubXVsdGlwYXJ0QWNjZXB0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZG0uZGF0YVNvdXJjZS5jcm9zc0RvbWFpbikge1xuICAgICAgICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcignQWNjZXB0JywgdGhpcy5jYWNoZUFkYXB0b3Iub3B0aW9ucy5hY2NlcHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBDYWNoZUFkYXB0b3IucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChkbSwga2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMuaXNDcnVkQWN0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlQWRhcHRvci51cGRhdGUoZG0sIGtleUZpZWxkLCB2YWx1ZSwgdGFibGVOYW1lKTtcbiAgICAgICAgfTtcbiAgICAgICAgQ2FjaGVBZGFwdG9yLnByb3RvdHlwZS5pbnNlcnQgPSBmdW5jdGlvbiAoZG0sIGRhdGEsIHRhYmxlTmFtZSkge1xuICAgICAgICAgICAgdGhpcy5pc0luc2VydEFjdGlvbiA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jYWNoZUFkYXB0b3IuaW5zZXJ0KGRtLCBkYXRhLCB0YWJsZU5hbWUpO1xuICAgICAgICB9O1xuICAgICAgICBDYWNoZUFkYXB0b3IucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIChkbSwga2V5RmllbGQsIHZhbHVlLCB0YWJsZU5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMuaXNDcnVkQWN0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlQWRhcHRvci5yZW1vdmUoZG0sIGtleUZpZWxkLCB2YWx1ZSwgdGFibGVOYW1lKTtcbiAgICAgICAgfTtcbiAgICAgICAgQ2FjaGVBZGFwdG9yLnByb3RvdHlwZS5iYXRjaFJlcXVlc3QgPSBmdW5jdGlvbiAoZG0sIGNoYW5nZXMsIGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlQWRhcHRvci5iYXRjaFJlcXVlc3QoZG0sIGNoYW5nZXMsIGUpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gQ2FjaGVBZGFwdG9yO1xuICAgIH0oVXJsQWRhcHRvcikpO1xuICAgIGV4cG9ydHMuQ2FjaGVBZGFwdG9yID0gQ2FjaGVBZGFwdG9yO1xufSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hZGFwdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9"]}